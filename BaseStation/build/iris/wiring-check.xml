<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40506168"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403fa5f0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403fa5f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403fca28"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40504180"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4058eb28"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4058eb28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405c6a88"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40502a38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c54ea0"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c54ea0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c903a8"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x4050f238"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c517c0"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40c517c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c77180"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x405537a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c50190"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c50190"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c778c0"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x4054fa68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c504e8"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c504e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c76850"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x4055f930"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c50bd8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c50bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c77be8"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40548950"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405b2470"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405b2470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405d3380"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4054e3e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405b2e30"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405b2e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405d3d40"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x4054eaa8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405b1510"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405b1510"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405d23f0"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4054ee90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405b0010"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405b0010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405d1bb0"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x40560640"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405b0700"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405b0700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405d0368"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40564298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4058d090"/></to>
    </wire>
    <wire loc="51:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4058d090"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4059a730"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40db6d80"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40de5920"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d956d8"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c90010"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411db2e8"/></to>
    </wire>
    <wire loc="119:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40a3f118"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40904aa8"/></to>
    </wire>
    <wire loc="52:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408925f8"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4111a7b8"/></to>
    </wire>
    <wire loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407f7010"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410f9708"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41074cb8"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403fcdc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4036a5f0"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4036a5f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403d9820"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404f1400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40ae1030"/></to>
    </wire>
    <wire loc="122:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404f1400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a41aa0"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404f1400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40401b50"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40401b50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403fee98"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404f1808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40407b20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e74860"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40407b20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bdfa78"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404073c0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404e9010"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404046d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404dfbf8"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x404042c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405a6a38"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x404042c8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404066f8"/></to>
    </wire>
    <wire loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404066f8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4040b690"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40406ac8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40407b20"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4040fbe8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x4041c010"/></to>
    </wire>
    <wire loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4041c010"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40467170"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40412668"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40406ac8"/></to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404312f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404b10b0"/></to>
    </wire>
    <wire loc="165:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40423830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40478090"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40478090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f3c7f8"/></to>
    </wire>
    <wire loc="176:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40427ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40484d68"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40484d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa37f8"/></to>
    </wire>
    <wire loc="185:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404340a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404877d0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404877d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fda538"/></to>
    </wire>
    <wire loc="196:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40438830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404c7880"/></to>
    </wire>
    <wire loc="143:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4041b4b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404664f0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404664f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9f6c0"/></to>
    </wire>
    <wire loc="183:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x4042dc08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404884f0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404884f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa5010"/></to>
    </wire>
    <wire loc="146:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4041a8e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046c3d8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4046c3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed9538"/></to>
    </wire>
    <wire loc="157:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4041d0a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40476170"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40476170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f077f8"/></to>
    </wire>
    <wire loc="168:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4042b750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40477d68"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40477d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f6d6c0"/></to>
    </wire>
    <wire loc="179:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4042fce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40482ac8"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40482ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9e6c0"/></to>
    </wire>
    <wire loc="138:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40415120"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4045f4f0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4045f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea83b0"/></to>
    </wire>
    <wire loc="149:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40418750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40469030"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40469030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed4538"/></to>
    </wire>
    <wire loc="160:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x40426ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40475e48"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40475e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f376c0"/></to>
    </wire>
    <wire loc="171:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40429670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4047fac8"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4047fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f68538"/></to>
    </wire>
    <wire loc="188:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40433ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404914f0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404914f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd5538"/></to>
    </wire>
    <wire loc="194:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404393d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404c1880"/></to>
    </wire>
    <wire loc="174:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40428a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40485a80"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40485a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f703b0"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40467170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea3228"/></to>
    </wire>
    <wire loc="152:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40420750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40468c88"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40468c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ecf538"/></to>
    </wire>
    <wire loc="192:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40431ee8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404bb880"/></to>
    </wire>
    <wire loc="155:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4041fc08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046edc8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4046edc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f0a418"/></to>
    </wire>
    <wire loc="166:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404222f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404789e8"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404789e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f3a228"/></to>
    </wire>
    <wire loc="177:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404308e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40483790"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40483790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa1228"/></to>
    </wire>
    <wire loc="186:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40434a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40492170"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40492170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd8010"/></to>
    </wire>
    <wire loc="144:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4041bea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40466e48"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40466e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9d0b0"/></to>
    </wire>
    <wire loc="147:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404192f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4046cd30"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4046cd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed7010"/></to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4041da98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40476ac8"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40476ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f04228"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x4042a210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40480790"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40480790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f6b0b0"/></to>
    </wire>
    <wire loc="180:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4042e750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404814f0"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404814f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9c0b0"/></to>
    </wire>
    <wire loc="139:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40415b18"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4045fe48"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4045fe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea7d70"/></to>
    </wire>
    <wire loc="150:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40421210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40469988"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40469988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed2010"/></to>
    </wire>
    <wire loc="161:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404258e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404737d0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404737d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f350b0"/></to>
    </wire>
    <wire loc="189:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404328e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40491e48"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40491e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd3010"/></to>
    </wire>
    <wire loc="164:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40424ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404796f8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404796f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f41de8"/></to>
    </wire>
    <wire loc="175:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404274b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40484410"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40484410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f6ed70"/></to>
    </wire>
    <wire loc="184:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x4042c670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40488e48"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40488e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fdc9e8"/></to>
    </wire>
    <wire loc="195:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40439dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404bd0b0"/></to>
    </wire>
    <wire loc="142:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4041ca08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40467ac8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40467ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea1c08"/></to>
    </wire>
    <wire loc="153:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4041f210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404716b0"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404716b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f01010"/></to>
    </wire>
    <wire loc="182:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x4042d210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4048ab00"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4048ab00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa7538"/></to>
    </wire>
    <wire loc="156:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4041e670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4046d790"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4046d790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f09de0"/></to>
    </wire>
    <wire loc="167:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40422ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40477410"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40477410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f39c08"/></to>
    </wire>
    <wire loc="178:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4042f2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40482170"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40482170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fa0c08"/></to>
    </wire>
    <wire loc="187:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404334b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40492ac8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40492ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd79e8"/></to>
    </wire>
    <wire loc="137:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4040a6d8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40460b18"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40460b18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eaa978"/></to>
    </wire>
    <wire loc="148:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40419ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4046a6b0"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4046a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed69e8"/></to>
    </wire>
    <wire loc="159:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404264b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404754f0"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404754f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f03c08"/></to>
    </wire>
    <wire loc="170:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x4042ac08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4047f170"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4047f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f6aa88"/></to>
    </wire>
    <wire loc="193:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4043a900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404b70b0"/></to>
    </wire>
    <wire loc="173:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404280a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40485128"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40485128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f72938"/></to>
    </wire>
    <wire loc="162:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404242f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40472170"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40472170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f34a88"/></to>
    </wire>
    <wire loc="140:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40414590"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4045e7d0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4045e7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea57f8"/></to>
    </wire>
    <wire loc="151:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40421c88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40468330"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40468330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed19e8"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403d8100"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d8d68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40365728"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403ec218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x409827b8"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x40562ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x4056f3f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405a6a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4059a3e8"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40599408"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x4059cba8"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4059cba8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40415b18"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40599df0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x405a7680"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405a7680"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40415120"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40598820"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x405a60b0"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405a60b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4040a6d8"/></to>
    </wire>
    <wire loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405c6a88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405de708"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405aec50"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405d2a68"/></to>
    </wire>
    <wire loc="84:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405d2a68"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405e9778"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405d1bb0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x405e7618"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405d3380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405eb010"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405d23f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405e9100"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405c4568"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405cf5c8"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405cf5c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405f0e48"/></to>
    </wire>
    <wire loc="82:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405d3d40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405eb9d0"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405ba8d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405cf040"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405cf040"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405f08c0"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405ad010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x405cfbe8"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405cfbe8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x405f7498"/></to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405d0368"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405e88e8"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x405be9c8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x405ce390"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x405ce390"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x405f7bb0"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x405c9320"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405e4030"/></to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405e4030"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40601ec8"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405bfce0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405e0a08"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405e0a08"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405fea08"/></to>
    </wire>
    <wire loc="215:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405de708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4081c728"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405d71c0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40604b60"/></to>
    </wire>
    <wire loc="305:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40604b60"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a30bf8"/></to>
    </wire>
    <wire loc="270:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405fea08"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408dd9c8"/></to>
    </wire>
    <wire loc="124:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405e9778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406f6c28"/></to>
    </wire>
    <wire loc="126:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x405e7618"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406f75b0"/></to>
    </wire>
    <wire loc="121:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405eb010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406f7ce0"/></to>
    </wire>
    <wire loc="123:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405e9100"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406f6868"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x405cde38"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x405f57f0"/></to>
    </wire>
    <wire loc="303:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x405f57f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a31888"/></to>
    </wire>
    <wire loc="216:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405f0e48"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4081bce0"/></to>
    </wire>
    <wire loc="122:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405eb9d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406f6488"/></to>
    </wire>
    <wire loc="269:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40601ec8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a151b0"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x405e2478"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40601330"/></to>
    </wire>
    <wire loc="307:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40601330"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2ab78"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405d9a68"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x405f6368"/></to>
    </wire>
    <wire loc="304:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405f6368"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a2c3d8"/></to>
    </wire>
    <wire loc="248:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405f08c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a2970"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x405d1178"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x405e9e78"/></to>
    </wire>
    <wire loc="128:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x405e9e78"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x406f5030"/></to>
    </wire>
    <wire loc="187:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405f7498"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4080e150"/></to>
    </wire>
    <wire loc="125:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405e88e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406f8940"/></to>
    </wire>
    <wire loc="224:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x405f7bb0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4083ec20"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405e12a0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40602df0"/></to>
    </wire>
    <wire loc="306:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40602df0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a2a680"/></to>
    </wire>
    <wire loc="87:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x405d1858"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x405e8578"/></to>
    </wire>
    <wire loc="129:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x405e8578"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x406f5410"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4081c728"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4082a360"/></to>
    </wire>
    <wire loc="88:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a30bf8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a3c7d0"/></to>
    </wire>
    <wire loc="160:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x405e6a58"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40752488"/></to>
    </wire>
    <wire loc="148:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x405e51d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4070b570"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4070b570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410ab010"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406f6c28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x410687b0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406f7ce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41069880"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406f6868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x410683f0"/></to>
    </wire>
    <wire loc="161:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x405f85b8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407d5170"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x407d5170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x410e96b0"/></to>
    </wire>
    <wire loc="162:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x405f0148"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407403b0"/></to>
    </wire>
    <wire loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a31888"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a3d458"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4081bce0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x41122e80"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406f75b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41069150"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406f6488"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41068010"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a151b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x411497d8"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2ab78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ae6b48"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a2c3d8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a5a010"/></to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x405f2e60"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40740a48"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406f5030"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x41068b90"/></to>
    </wire>
    <wire loc="117:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4080e150"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40821528"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4083ec20"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41119328"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406f8940"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4106a4d0"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408dd9c8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4114a010"/></to>
    </wire>
    <wire loc="159:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x405e6608"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40752170"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a2a680"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a58278"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406f5410"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x41067010"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406392c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407d7658"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407d7658"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x410b4bc0"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40636770"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40669108"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x406253a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a151b0"/></to>
    </wire>
    <wire loc="105:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x40632938"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a32ed0"/></to>
    </wire>
    <wire loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a32ed0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a3ea90"/></to>
    </wire>
    <wire loc="110:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406699c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a4b618"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a4b618"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ae8030"/></to>
    </wire>
    <wire loc="116:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x406f4768"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x406268a8"/></to>
    </wire>
    <wire loc="117:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406f5f20"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40702538"/></to>
    </wire>
    <wire loc="118:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x406f4430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x40760748"/></to>
    </wire>
    <wire loc="119:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x406f5788"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40760a80"/></to>
    </wire>
    <wire loc="137:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40701010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4070b570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40702a60"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x40760250"/></to>
    </wire>
    <wire loc="153:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407527d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407d7658"/></to>
    </wire>
    <wire loc="154:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407659e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40761228"/></to>
    </wire>
    <wire loc="155:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40765ee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40761720"/></to>
    </wire>
    <wire loc="156:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40765250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40761a58"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40784280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407d2ed8"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407d2ed8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410fcd90"/></to>
    </wire>
    <wire loc="170:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40784778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4080fdf0"/></to>
    </wire>
    <wire loc="114:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4080fdf0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40822508"/></to>
    </wire>
    <wire loc="171:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40784ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x407d5b88"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407d5b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x410e8150"/></to>
    </wire>
    <wire loc="176:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407d4368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4080e7e8"/></to>
    </wire>
    <wire loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4080e7e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40822840"/></to>
    </wire>
    <wire loc="181:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40811170"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x4060f410"/></to>
    </wire>
    <wire loc="182:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407d1808"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4080f8f8"/></to>
    </wire>
    <wire loc="113:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4080f8f8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40822010"/></to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40821010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a2970"/></to>
    </wire>
    <wire loc="193:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40822010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4081cd00"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4081cd00"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4082a938"/></to>
    </wire>
    <wire loc="194:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40822508"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4081b250"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4081b250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4082ae30"/></to>
    </wire>
    <wire loc="195:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40822840"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4081b568"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4081b568"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408281b0"/></to>
    </wire>
    <wire loc="211:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4082a360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4083fd98"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4083fd98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4111a1e0"/></to>
    </wire>
    <wire loc="212:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4082a938"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4083e410"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4083e410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4111aaf0"/></to>
    </wire>
    <wire loc="213:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4082ae30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4083e908"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4083e908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41119010"/></to>
    </wire>
    <wire loc="214:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408281b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a14830"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a14830"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41148e40"/></to>
    </wire>
    <wire loc="221:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4086a8f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40880538"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40880538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x41139ea0"/></to>
    </wire>
    <wire loc="222:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4086add0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x407d13c0"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x407d13c0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x410f9310"/></to>
    </wire>
    <wire loc="223:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4086a180"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a1b328"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40a1b328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40a3a1b0"/></to>
    </wire>
    <wire loc="228:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407d1d00"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40880a10"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40880a10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x411363c0"/></to>
    </wire>
    <wire loc="237:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40896e20"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4061c2c0"/></to>
    </wire>
    <wire loc="238:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40880e58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408a20a0"/></to>
    </wire>
    <wire loc="239:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40896370"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408a2578"/></to>
    </wire>
    <wire loc="240:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40896768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40669108"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x408be800"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a1edb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x408a17d8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40669108"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408a1e90"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40613d30"/></to>
    </wire>
    <wire loc="253:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408a2e98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408ca310"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408ca310"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408e2250"/></to>
    </wire>
    <wire loc="254:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408a13e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408ca7e8"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408ca7e8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408e2748"/></to>
    </wire>
    <wire loc="259:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408e17a8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4061f860"/></to>
    </wire>
    <wire loc="260:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408e2250"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a1baa0"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40a1baa0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a3a9c8"/></to>
    </wire>
    <wire loc="261:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408e2748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a1a010"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a1a010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a3aec0"/></to>
    </wire>
    <wire loc="262:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x408e2b60"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a32a68"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a32a68"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a3e628"/></to>
    </wire>
    <wire loc="267:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a130c0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2ab78"/></to>
    </wire>
    <wire loc="268:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a13938"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a0e3f0"/></to>
    </wire>
    <wire loc="271:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40a12170"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a1edb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a0ebb8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a32ed0"/></to>
    </wire>
    <wire loc="286:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a39eb0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4061f860"/></to>
    </wire>
    <wire loc="287:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a3a9c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a320c0"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40a320c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a3fc70"/></to>
    </wire>
    <wire loc="288:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a3aec0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a32618"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a32618"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a3e1d8"/></to>
    </wire>
    <wire loc="289:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40a3a1b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a368a8"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40a368a8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a3f498"/></to>
    </wire>
    <wire loc="301:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a48170"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x40606958"/></to>
    </wire>
    <wire loc="302:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a48ad8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a151b0"/></to>
    </wire>
    <wire loc="309:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a46370"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a1edb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a46a08"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a1edb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a450e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a1edb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a45700"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40669108"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40669108"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x410390c8"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x410398c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x406699c0"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41036258"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40686a50"/></to>
    </wire>
    <wire loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <from><interface-ref name="tasklet" scoped="" ref="0x406965f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41066c40"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406ddd68"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41067388"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x406f5788"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41067b20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x406f5f20"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41066030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x406f4430"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41066368"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x406f4768"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4070bcb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410ab750"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40743150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410abb58"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410aa030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40743600"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x410aa458"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x410ad010"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x410aaa50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x410e88f8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406ddd68"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x410e8ed0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407d4368"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x410f89c0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x407fc360"/></to>
    </wire>
    <wire loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x407fc360"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x407f73a8"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410f6070"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410f54c0"/></to>
    </wire>
    <wire loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410f54c0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x407f7dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x410f9a70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407d1808"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x410f8010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407d1d00"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x410f8408"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40811170"/></to>
    </wire>
    <wire loc="118:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40821c00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40821010"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x41119830"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4086a180"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41118010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40686a50"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x411185c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4086a8f8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41118aa0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4086add0"/></to>
    </wire>
    <wire loc="189:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41117320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x41117758"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x41118ed8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41136808"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40880e58"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41135c00"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40896e20"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41136d00"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40896370"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x41135150"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40896768"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x411357e8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40894948"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40894948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x408ab478"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x41134270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40894088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40892b18"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40898dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408925f8"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408d5d28"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408c9b10"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x408cabe0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x408e2b60"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408cbb00"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x408e49a0"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408c9010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408e1010"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x408c97a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408e17a8"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x408cb7e8"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x408e4668"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x408cb310"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x408e4170"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41183e40"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a13938"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x41146ca8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a130c0"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x411835c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40907ba8"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40907ba8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40915010"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x41146640"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40a12170"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40915010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40a03a88"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40918c50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409d0f00"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40904aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409146c8"/></to>
    </wire>
    <wire loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409146c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40928bb8"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40a07338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40912f08"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409d3248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40914c90"/></to>
    </wire>
    <wire loc="36:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40914c90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409af010"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409fd448"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x409295c8"/></to>
    </wire>
    <wire loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x409295c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409aea88"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409aea88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4116e610"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40928bb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41171710"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409af010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41171b48"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4116d7f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40977dd8"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40977dd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4096cde8"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4116a9d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x409701a0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x409701a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x409851a0"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x411693c8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40970cc0"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40970cc0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40985cc0"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41168dc0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4096d858"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4096d858"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40982c18"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x409d2bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40a05560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40901d10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40918c50"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a1c548"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a19378"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a1a408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40a39300"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a1a800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a39718"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a19010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a39eb0"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40a1b010"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40a19e48"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40a1cb00"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40a19950"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40ae8030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40bbee38"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a2d010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a3bba8"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ae6b48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c06778"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a51690"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a48170"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a51e60"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a46370"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a4e510"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40a46a08"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a4ebd0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a450e0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a4c480"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a48ad8"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a4dd18"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ae6b48"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a6b298"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a45700"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a58690"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40acab30"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40acab30"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4041a8e0"/></to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a57148"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40ac75b8"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40ac75b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aedc50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a536f8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ac7cc0"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40ac7cc0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40af5e50"/></to>
    </wire>
    <wire loc="107:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a53d70"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40aea3d0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40aea3d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4041f210"/></to>
    </wire>
    <wire loc="108:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a56820"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40aeadb8"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40aeadb8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4041b4b0"/></to>
    </wire>
    <wire loc="110:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a4f9e0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40ae9820"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40ae9820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40ae5980"/></to>
    </wire>
    <wire loc="111:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a6cc48"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40686a50"/></to>
    </wire>
    <wire loc="112:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a4d260"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40c2a458"/></to>
    </wire>
    <wire loc="847:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40aa5ae8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40bbee38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4120aac0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40af5e50"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40aec520"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40c06778"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c2e440"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40adf420"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x4042ac08"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40adfe20"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x4042b750"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40adb660"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b73f08"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40b73f08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b906c8"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40aed500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40aecb38"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40af5aa8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40aec198"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ae4d98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40af3d80"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40aedc50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aeb2a8"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40afd100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b5d198"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b5d198"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411da630"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40afd808"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b5dce0"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b5dce0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411d8230"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40afe3d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40b42070"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40b42070"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40b3e3a8"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40afdc88"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ed420"/></to>
    </wire>
    <wire loc="296:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40b0f420"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40b39a60"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ed420"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40b3c218"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4041a8e0"/></to>
    </wire>
    <wire loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40b3cbf0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404192f0"/></to>
    </wire>
    <wire loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40b3b660"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40419ce8"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40b39060"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40418750"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b5d8d8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411dad70"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411d86f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b5c208"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x411d8b18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x411db620"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x411d7190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b73218"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b91920"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b7f830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b94640"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b71120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b8d6c8"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b71120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b8b340"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b71120"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b89f28"/></to>
    </wire>
    <wire loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41208548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b7f830"/></to>
    </wire>
    <wire loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x412057e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b71120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bdfe60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b7f830"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c2edd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c17320"/></to>
    </wire>
    <wire loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40c305f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c02868"/></to>
    </wire>
    <wire loc="31:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c02868"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bfd030"/></to>
    </wire>
    <wire loc="32:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c1b208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b7f830"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c903a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ca53d8"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c4f930"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c76ee8"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c90010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ca5040"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40cb6e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c4fe68"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c94430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c8f288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c94ae8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c90c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40cb6978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40e66928"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c8f288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d5ec60"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c90c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d5e8a0"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40d5d400"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40cb6978"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ccb720"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40cb6e80"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d5c3f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40cb6e80"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d56420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40cb6e80"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d5d8e8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40ccac50"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40d5ddc0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40cccb00"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40cc7e88"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40d5a868"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40cc33d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d593f0"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d593f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d99168"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d7eb80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d59870"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d59870"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d99a58"/></to>
    </wire>
    <wire loc="332:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40ced350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40ce1788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40cefbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40cea010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x40d5b030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40d5b468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d9a6e8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d995d8"/></to>
    </wire>
    <wire loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d995d8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d95e28"/></to>
    </wire>
    <wire loc="52:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d99a58"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d94290"/></to>
    </wire>
    <wire loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d99168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d95a10"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d98530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d9b878"/></to>
    </wire>
    <wire loc="33:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d9b878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e0ce68"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d9d0a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d98530"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40d94b28"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40db9a80"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40db9a80"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40de6288"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40d9e010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40db8010"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40db8010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40de67b8"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40d9e448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40db8508"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40db8508"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40de6cd0"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40db7b80"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40de4880"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40db7178"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40de5d70"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40db7688"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40de4368"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40de34a8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404073c0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40de3be8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ed420"/></to>
    </wire>
    <wire loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40e690e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e0b3c0"/></to>
    </wire>
    <wire loc="31:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e0b3c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e76e40"/></to>
    </wire>
    <wire loc="32:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e6f050"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e0ad20"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e0ad20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e2d438"/></to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40e04090"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40e2b770"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40e04d80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40e2a508"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e01f20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40e27450"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e01f20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40e250b8"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e01f20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40e23cb0"/></to>
    </wire>
    <wire loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e74c48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e0ad20"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40927330"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d4b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d4b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d4d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d4d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403d3440"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40436688" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404368a0" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40436ab8" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40442ae0" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40442d08" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40449010" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40449200" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40497088" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404972b0" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404974d8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404976c8" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4070a4c0" loc="83:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40717298" loc="42:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40927330" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40927330"/></type-var>
        </typedef>
        <constant name="divider" ref="0x409274f0" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x409225d0" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x409225d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40922790" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409139c8" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409139c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409ce010" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409ce010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x409ce1f0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a048f0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a048f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40bdd230" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bdd230"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40bdd450" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40be1f10" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40be1f10"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bd2378" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bd2378"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40bd2538" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40bfe6c8" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40bfe6c8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bfeb10" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bfeb10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40c00890" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40c00890"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40c00cf0" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40c00cf0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40c14010" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40c14010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40c14480" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40c14480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40c146e8" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40c14b70" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40c14b70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40401258" loc="58:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40401258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40401430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403fa5f0" loc="57:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403fa5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403fa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40407b20" loc="52:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40407b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40407cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40401b50" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40401b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40401d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404073c0" loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404073c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40407598"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40407678"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40407758"/>
        <function-ref name="actualMicro" scoped="" ref="0x40407838"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40407918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x404042c8" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x404042c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404044a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403fee98" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403fee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404040c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404046d0" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404046d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404048a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40406ac8" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40406ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40406ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404066f8" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404066f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404068d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40412668" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40412668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40412840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4040fbe8" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4040fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040fdc0"/>
        <function-ref name="isInput" scoped="" ref="0x4040fea0"/>
        <function-ref name="toggle" scoped="" ref="0x40412010"/>
        <function-ref name="isOutput" scoped="" ref="0x404120f0"/>
        <function-ref name="get" scoped="" ref="0x404121d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404122b0"/>
        <function-ref name="set" scoped="" ref="0x40412390"/>
        <function-ref name="clr" scoped="" ref="0x40412470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4040b690" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4040b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4040b868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404312f0" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404316c8"/>
        <function-ref name="isInput" scoped="" ref="0x404317a8"/>
        <function-ref name="toggle" scoped="" ref="0x40431888"/>
        <function-ref name="isOutput" scoped="" ref="0x40431968"/>
        <function-ref name="get" scoped="" ref="0x40431a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431b28"/>
        <function-ref name="set" scoped="" ref="0x40431c08"/>
        <function-ref name="clr" scoped="" ref="0x40431ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40423830" loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40423830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423a08"/>
        <function-ref name="isInput" scoped="" ref="0x40423ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40423bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40423ca8"/>
        <function-ref name="get" scoped="" ref="0x40423d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423e68"/>
        <function-ref name="set" scoped="" ref="0x40422010"/>
        <function-ref name="clr" scoped="" ref="0x404220f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40427ea8" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40427ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404300c0"/>
        <function-ref name="isInput" scoped="" ref="0x404301a0"/>
        <function-ref name="toggle" scoped="" ref="0x40430280"/>
        <function-ref name="isOutput" scoped="" ref="0x40430360"/>
        <function-ref name="get" scoped="" ref="0x40430440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430520"/>
        <function-ref name="set" scoped="" ref="0x40430600"/>
        <function-ref name="clr" scoped="" ref="0x404306e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404340a0" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404340a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434278"/>
        <function-ref name="isInput" scoped="" ref="0x40434358"/>
        <function-ref name="toggle" scoped="" ref="0x40434438"/>
        <function-ref name="isOutput" scoped="" ref="0x40434518"/>
        <function-ref name="get" scoped="" ref="0x404345f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404346d8"/>
        <function-ref name="set" scoped="" ref="0x404347b8"/>
        <function-ref name="clr" scoped="" ref="0x40434898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40438830" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40438830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438a08"/>
        <function-ref name="isInput" scoped="" ref="0x40438ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40438bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40438ca8"/>
        <function-ref name="get" scoped="" ref="0x40438d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438e68"/>
        <function-ref name="set" scoped="" ref="0x40437010"/>
        <function-ref name="clr" scoped="" ref="0x404370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4041b4b0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4041b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b688"/>
        <function-ref name="isInput" scoped="" ref="0x4041b768"/>
        <function-ref name="toggle" scoped="" ref="0x4041b848"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b928"/>
        <function-ref name="get" scoped="" ref="0x4041ba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041bae8"/>
        <function-ref name="set" scoped="" ref="0x4041bbc8"/>
        <function-ref name="clr" scoped="" ref="0x4041bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x4042dc08" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x4042dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4042dec0"/>
        <function-ref name="toggle" scoped="" ref="0x4042c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c0f0"/>
        <function-ref name="get" scoped="" ref="0x4042c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c2b0"/>
        <function-ref name="set" scoped="" ref="0x4042c390"/>
        <function-ref name="clr" scoped="" ref="0x4042c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4041a8e0" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4041a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041aab8"/>
        <function-ref name="isInput" scoped="" ref="0x4041ab98"/>
        <function-ref name="toggle" scoped="" ref="0x4041ac78"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ad58"/>
        <function-ref name="get" scoped="" ref="0x4041ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041af18"/>
        <function-ref name="set" scoped="" ref="0x40419010"/>
        <function-ref name="clr" scoped="" ref="0x404190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4041d0a0" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4041d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d278"/>
        <function-ref name="isInput" scoped="" ref="0x4041d358"/>
        <function-ref name="toggle" scoped="" ref="0x4041d438"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d518"/>
        <function-ref name="get" scoped="" ref="0x4041d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d6d8"/>
        <function-ref name="set" scoped="" ref="0x4041d7b8"/>
        <function-ref name="clr" scoped="" ref="0x4041d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4042b750" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4042b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b928"/>
        <function-ref name="isInput" scoped="" ref="0x4042ba08"/>
        <function-ref name="toggle" scoped="" ref="0x4042bae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042bbc8"/>
        <function-ref name="get" scoped="" ref="0x4042bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042bd88"/>
        <function-ref name="set" scoped="" ref="0x4042be68"/>
        <function-ref name="clr" scoped="" ref="0x4042a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4042fce8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4042fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042fec0"/>
        <function-ref name="isInput" scoped="" ref="0x4042e010"/>
        <function-ref name="toggle" scoped="" ref="0x4042e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042e1d0"/>
        <function-ref name="get" scoped="" ref="0x4042e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042e390"/>
        <function-ref name="set" scoped="" ref="0x4042e470"/>
        <function-ref name="clr" scoped="" ref="0x4042e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40415120" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40415120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404152f8"/>
        <function-ref name="isInput" scoped="" ref="0x404153d8"/>
        <function-ref name="toggle" scoped="" ref="0x404154b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40415598"/>
        <function-ref name="get" scoped="" ref="0x40415678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415758"/>
        <function-ref name="set" scoped="" ref="0x40415838"/>
        <function-ref name="clr" scoped="" ref="0x40415918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40418750" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40418750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418928"/>
        <function-ref name="isInput" scoped="" ref="0x40418a08"/>
        <function-ref name="toggle" scoped="" ref="0x40418ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40418bc8"/>
        <function-ref name="get" scoped="" ref="0x40418ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418d88"/>
        <function-ref name="set" scoped="" ref="0x40418e68"/>
        <function-ref name="clr" scoped="" ref="0x40421010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x40426ea8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x40426ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404250c0"/>
        <function-ref name="isInput" scoped="" ref="0x404251a0"/>
        <function-ref name="toggle" scoped="" ref="0x40425280"/>
        <function-ref name="isOutput" scoped="" ref="0x40425360"/>
        <function-ref name="get" scoped="" ref="0x40425440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425520"/>
        <function-ref name="set" scoped="" ref="0x40425600"/>
        <function-ref name="clr" scoped="" ref="0x404256e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40429670" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40429670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429848"/>
        <function-ref name="isInput" scoped="" ref="0x40429928"/>
        <function-ref name="toggle" scoped="" ref="0x40429a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40429ae8"/>
        <function-ref name="get" scoped="" ref="0x40429bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429ca8"/>
        <function-ref name="set" scoped="" ref="0x40429d88"/>
        <function-ref name="clr" scoped="" ref="0x40429e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40433ea8" loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40433ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404320c0"/>
        <function-ref name="isInput" scoped="" ref="0x404321a0"/>
        <function-ref name="toggle" scoped="" ref="0x40432280"/>
        <function-ref name="isOutput" scoped="" ref="0x40432360"/>
        <function-ref name="get" scoped="" ref="0x40432440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432520"/>
        <function-ref name="set" scoped="" ref="0x40432600"/>
        <function-ref name="clr" scoped="" ref="0x404326e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404393d0" loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404393d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404395a8"/>
        <function-ref name="isInput" scoped="" ref="0x40439688"/>
        <function-ref name="toggle" scoped="" ref="0x40439768"/>
        <function-ref name="isOutput" scoped="" ref="0x40439848"/>
        <function-ref name="get" scoped="" ref="0x40439928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439a08"/>
        <function-ref name="set" scoped="" ref="0x40439ae8"/>
        <function-ref name="clr" scoped="" ref="0x40439bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40428a98" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40428a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428c70"/>
        <function-ref name="isInput" scoped="" ref="0x40428d50"/>
        <function-ref name="toggle" scoped="" ref="0x40428e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40428f10"/>
        <function-ref name="get" scoped="" ref="0x40427010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404270f0"/>
        <function-ref name="set" scoped="" ref="0x404271d0"/>
        <function-ref name="clr" scoped="" ref="0x404272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4041c010" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4041c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4041c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4041c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c488"/>
        <function-ref name="get" scoped="" ref="0x4041c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c648"/>
        <function-ref name="set" scoped="" ref="0x4041c728"/>
        <function-ref name="clr" scoped="" ref="0x4041c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40420750" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40420750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420928"/>
        <function-ref name="isInput" scoped="" ref="0x40420a08"/>
        <function-ref name="toggle" scoped="" ref="0x40420ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40420bc8"/>
        <function-ref name="get" scoped="" ref="0x40420ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420d88"/>
        <function-ref name="set" scoped="" ref="0x40420e68"/>
        <function-ref name="clr" scoped="" ref="0x4041f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40431ee8" loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40431ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4043a1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4043a2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a380"/>
        <function-ref name="get" scoped="" ref="0x4043a460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a540"/>
        <function-ref name="set" scoped="" ref="0x4043a620"/>
        <function-ref name="clr" scoped="" ref="0x4043a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4041fc08" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4041fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4041fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4041e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e0f0"/>
        <function-ref name="get" scoped="" ref="0x4041e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e2b0"/>
        <function-ref name="set" scoped="" ref="0x4041e390"/>
        <function-ref name="clr" scoped="" ref="0x4041e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404222f0" loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404224c8"/>
        <function-ref name="isInput" scoped="" ref="0x404225a8"/>
        <function-ref name="toggle" scoped="" ref="0x40422688"/>
        <function-ref name="isOutput" scoped="" ref="0x40422768"/>
        <function-ref name="get" scoped="" ref="0x40422848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422928"/>
        <function-ref name="set" scoped="" ref="0x40422a08"/>
        <function-ref name="clr" scoped="" ref="0x40422ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404308e0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404308e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40430b98"/>
        <function-ref name="toggle" scoped="" ref="0x40430c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40430d58"/>
        <function-ref name="get" scoped="" ref="0x40430e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430f18"/>
        <function-ref name="set" scoped="" ref="0x4042f010"/>
        <function-ref name="clr" scoped="" ref="0x4042f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40434a98" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40434a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434c70"/>
        <function-ref name="isInput" scoped="" ref="0x40434d50"/>
        <function-ref name="toggle" scoped="" ref="0x40434e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40434f10"/>
        <function-ref name="get" scoped="" ref="0x40433010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404330f0"/>
        <function-ref name="set" scoped="" ref="0x404331d0"/>
        <function-ref name="clr" scoped="" ref="0x404332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4041bea8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4041bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4041a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4041a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a360"/>
        <function-ref name="get" scoped="" ref="0x4041a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a520"/>
        <function-ref name="set" scoped="" ref="0x4041a600"/>
        <function-ref name="clr" scoped="" ref="0x4041a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404192f0" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404194c8"/>
        <function-ref name="isInput" scoped="" ref="0x404195a8"/>
        <function-ref name="toggle" scoped="" ref="0x40419688"/>
        <function-ref name="isOutput" scoped="" ref="0x40419768"/>
        <function-ref name="get" scoped="" ref="0x40419848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419928"/>
        <function-ref name="set" scoped="" ref="0x40419a08"/>
        <function-ref name="clr" scoped="" ref="0x40419ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4041da98" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4041da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041dc70"/>
        <function-ref name="isInput" scoped="" ref="0x4041dd50"/>
        <function-ref name="toggle" scoped="" ref="0x4041de30"/>
        <function-ref name="isOutput" scoped="" ref="0x4041df10"/>
        <function-ref name="get" scoped="" ref="0x40426010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404260f0"/>
        <function-ref name="set" scoped="" ref="0x404261d0"/>
        <function-ref name="clr" scoped="" ref="0x404262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x4042a210" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x4042a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042a3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4042a4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4042a5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042a688"/>
        <function-ref name="get" scoped="" ref="0x4042a768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042a848"/>
        <function-ref name="set" scoped="" ref="0x4042a928"/>
        <function-ref name="clr" scoped="" ref="0x4042aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4042e750" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4042e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042e928"/>
        <function-ref name="isInput" scoped="" ref="0x4042ea08"/>
        <function-ref name="toggle" scoped="" ref="0x4042eae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042ebc8"/>
        <function-ref name="get" scoped="" ref="0x4042eca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ed88"/>
        <function-ref name="set" scoped="" ref="0x4042ee68"/>
        <function-ref name="clr" scoped="" ref="0x4042d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40415b18" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40415b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40415dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40415eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40414010"/>
        <function-ref name="get" scoped="" ref="0x404140f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404141d0"/>
        <function-ref name="set" scoped="" ref="0x404142b0"/>
        <function-ref name="clr" scoped="" ref="0x40414390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40421210" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40421210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421468"/>
        <function-ref name="isInput" scoped="" ref="0x40421548"/>
        <function-ref name="toggle" scoped="" ref="0x40421628"/>
        <function-ref name="isOutput" scoped="" ref="0x40421708"/>
        <function-ref name="get" scoped="" ref="0x404217e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404218c8"/>
        <function-ref name="set" scoped="" ref="0x404219a8"/>
        <function-ref name="clr" scoped="" ref="0x40421a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404258e0" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404258e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40425b98"/>
        <function-ref name="toggle" scoped="" ref="0x40425c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40425d58"/>
        <function-ref name="get" scoped="" ref="0x40425e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425f18"/>
        <function-ref name="set" scoped="" ref="0x40424010"/>
        <function-ref name="clr" scoped="" ref="0x404240f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404328e0" loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404328e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40432b98"/>
        <function-ref name="toggle" scoped="" ref="0x40432c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40432d58"/>
        <function-ref name="get" scoped="" ref="0x40432e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432f18"/>
        <function-ref name="set" scoped="" ref="0x40431010"/>
        <function-ref name="clr" scoped="" ref="0x404310f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40424ce8" loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40424ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423010"/>
        <function-ref name="isInput" scoped="" ref="0x404230f0"/>
        <function-ref name="toggle" scoped="" ref="0x404231d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404232b0"/>
        <function-ref name="get" scoped="" ref="0x40423390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423470"/>
        <function-ref name="set" scoped="" ref="0x40423550"/>
        <function-ref name="clr" scoped="" ref="0x40423630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404274b0" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404274b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427688"/>
        <function-ref name="isInput" scoped="" ref="0x40427768"/>
        <function-ref name="toggle" scoped="" ref="0x40427848"/>
        <function-ref name="isOutput" scoped="" ref="0x40427928"/>
        <function-ref name="get" scoped="" ref="0x40427a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40427ae8"/>
        <function-ref name="set" scoped="" ref="0x40427bc8"/>
        <function-ref name="clr" scoped="" ref="0x40427ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x4042c670" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x4042c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c848"/>
        <function-ref name="isInput" scoped="" ref="0x4042c928"/>
        <function-ref name="toggle" scoped="" ref="0x4042ca08"/>
        <function-ref name="isOutput" scoped="" ref="0x4042cae8"/>
        <function-ref name="get" scoped="" ref="0x4042cbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042cca8"/>
        <function-ref name="set" scoped="" ref="0x4042cd88"/>
        <function-ref name="clr" scoped="" ref="0x4042ce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40439dc8" loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40439dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438010"/>
        <function-ref name="isInput" scoped="" ref="0x404380f0"/>
        <function-ref name="toggle" scoped="" ref="0x404381d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404382b0"/>
        <function-ref name="get" scoped="" ref="0x40438390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438470"/>
        <function-ref name="set" scoped="" ref="0x40438550"/>
        <function-ref name="clr" scoped="" ref="0x40438630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4041ca08" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4041ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041cbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4041ccc0"/>
        <function-ref name="toggle" scoped="" ref="0x4041cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ce80"/>
        <function-ref name="get" scoped="" ref="0x4041b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b0f0"/>
        <function-ref name="set" scoped="" ref="0x4041b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4041b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4041f210" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4041f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4041f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4041f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f688"/>
        <function-ref name="get" scoped="" ref="0x4041f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f848"/>
        <function-ref name="set" scoped="" ref="0x4041f928"/>
        <function-ref name="clr" scoped="" ref="0x4041fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x4042d210" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x4042d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4042d4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4042d5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d688"/>
        <function-ref name="get" scoped="" ref="0x4042d768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d848"/>
        <function-ref name="set" scoped="" ref="0x4042d928"/>
        <function-ref name="clr" scoped="" ref="0x4042da08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4041e670" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4041e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e848"/>
        <function-ref name="isInput" scoped="" ref="0x4041e928"/>
        <function-ref name="toggle" scoped="" ref="0x4041ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4041eae8"/>
        <function-ref name="get" scoped="" ref="0x4041ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041eca8"/>
        <function-ref name="set" scoped="" ref="0x4041ed88"/>
        <function-ref name="clr" scoped="" ref="0x4041ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40422ce8" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40422ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422ec0"/>
        <function-ref name="isInput" scoped="" ref="0x4042b010"/>
        <function-ref name="toggle" scoped="" ref="0x4042b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b1d0"/>
        <function-ref name="get" scoped="" ref="0x4042b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b390"/>
        <function-ref name="set" scoped="" ref="0x4042b470"/>
        <function-ref name="clr" scoped="" ref="0x4042b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4042f2f0" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4042f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f768"/>
        <function-ref name="get" scoped="" ref="0x4042f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f928"/>
        <function-ref name="set" scoped="" ref="0x4042fa08"/>
        <function-ref name="clr" scoped="" ref="0x4042fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404334b0" loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404334b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40433688"/>
        <function-ref name="isInput" scoped="" ref="0x40433768"/>
        <function-ref name="toggle" scoped="" ref="0x40433848"/>
        <function-ref name="isOutput" scoped="" ref="0x40433928"/>
        <function-ref name="get" scoped="" ref="0x40433a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433ae8"/>
        <function-ref name="set" scoped="" ref="0x40433bc8"/>
        <function-ref name="clr" scoped="" ref="0x40433ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4040a6d8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4040a6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a8b0"/>
        <function-ref name="isInput" scoped="" ref="0x4040a990"/>
        <function-ref name="toggle" scoped="" ref="0x4040aa70"/>
        <function-ref name="isOutput" scoped="" ref="0x4040ab50"/>
        <function-ref name="get" scoped="" ref="0x4040ac30"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ad10"/>
        <function-ref name="set" scoped="" ref="0x4040adf0"/>
        <function-ref name="clr" scoped="" ref="0x4040aed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40419ce8" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40419ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40418010"/>
        <function-ref name="toggle" scoped="" ref="0x404180f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404181d0"/>
        <function-ref name="get" scoped="" ref="0x404182b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418390"/>
        <function-ref name="set" scoped="" ref="0x40418470"/>
        <function-ref name="clr" scoped="" ref="0x40418550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404264b0" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404264b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426688"/>
        <function-ref name="isInput" scoped="" ref="0x40426768"/>
        <function-ref name="toggle" scoped="" ref="0x40426848"/>
        <function-ref name="isOutput" scoped="" ref="0x40426928"/>
        <function-ref name="get" scoped="" ref="0x40426a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426ae8"/>
        <function-ref name="set" scoped="" ref="0x40426bc8"/>
        <function-ref name="clr" scoped="" ref="0x40426ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x4042ac08" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x4042ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4042aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40429010"/>
        <function-ref name="isOutput" scoped="" ref="0x404290f0"/>
        <function-ref name="get" scoped="" ref="0x404291d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404292b0"/>
        <function-ref name="set" scoped="" ref="0x40429390"/>
        <function-ref name="clr" scoped="" ref="0x40429470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4043a900" loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4043a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043aad8"/>
        <function-ref name="isInput" scoped="" ref="0x4043abb8"/>
        <function-ref name="toggle" scoped="" ref="0x4043ac98"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ad78"/>
        <function-ref name="get" scoped="" ref="0x4043ae58"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439010"/>
        <function-ref name="set" scoped="" ref="0x404390f0"/>
        <function-ref name="clr" scoped="" ref="0x404391d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404280a0" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428278"/>
        <function-ref name="isInput" scoped="" ref="0x40428358"/>
        <function-ref name="toggle" scoped="" ref="0x40428438"/>
        <function-ref name="isOutput" scoped="" ref="0x40428518"/>
        <function-ref name="get" scoped="" ref="0x404285f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404286d8"/>
        <function-ref name="set" scoped="" ref="0x404287b8"/>
        <function-ref name="clr" scoped="" ref="0x40428898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404242f0" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404244c8"/>
        <function-ref name="isInput" scoped="" ref="0x404245a8"/>
        <function-ref name="toggle" scoped="" ref="0x40424688"/>
        <function-ref name="isOutput" scoped="" ref="0x40424768"/>
        <function-ref name="get" scoped="" ref="0x40424848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424928"/>
        <function-ref name="set" scoped="" ref="0x40424a08"/>
        <function-ref name="clr" scoped="" ref="0x40424ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40414590" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40414590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40414768"/>
        <function-ref name="isInput" scoped="" ref="0x40414848"/>
        <function-ref name="toggle" scoped="" ref="0x40414928"/>
        <function-ref name="isOutput" scoped="" ref="0x40414a08"/>
        <function-ref name="get" scoped="" ref="0x40414ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414bc8"/>
        <function-ref name="set" scoped="" ref="0x40414ca8"/>
        <function-ref name="clr" scoped="" ref="0x40414d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40421c88" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40421c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421e60"/>
        <function-ref name="isInput" scoped="" ref="0x40420010"/>
        <function-ref name="toggle" scoped="" ref="0x404200f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404201d0"/>
        <function-ref name="get" scoped="" ref="0x404202b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420390"/>
        <function-ref name="set" scoped="" ref="0x40420470"/>
        <function-ref name="clr" scoped="" ref="0x40420550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4045fe48" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4045fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045e050"/>
        <function-ref name="isInput" scoped="" ref="0x4045e130"/>
        <function-ref name="toggle" scoped="" ref="0x4045e210"/>
        <function-ref name="isOutput" scoped="" ref="0x4045e2f0"/>
        <function-ref name="get" scoped="" ref="0x4045e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045e4b0"/>
        <function-ref name="set" scoped="" ref="0x4045e590"/>
        <function-ref name="clr" scoped="" ref="0x4045e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40467ac8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40467ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40467d80"/>
        <function-ref name="toggle" scoped="" ref="0x40467e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40466010"/>
        <function-ref name="get" scoped="" ref="0x404660f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404661d0"/>
        <function-ref name="set" scoped="" ref="0x404662b0"/>
        <function-ref name="clr" scoped="" ref="0x40466390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40460b18" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40460b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40460dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40460eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f010"/>
        <function-ref name="get" scoped="" ref="0x4045f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f1d0"/>
        <function-ref name="set" scoped="" ref="0x4045f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4045f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4045e7d0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4045e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4045ea88"/>
        <function-ref name="toggle" scoped="" ref="0x4045eb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4045ec48"/>
        <function-ref name="get" scoped="" ref="0x4045ed28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045ee08"/>
        <function-ref name="set" scoped="" ref="0x4045eee8"/>
        <function-ref name="clr" scoped="" ref="0x40467010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404664f0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404664f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404666c8"/>
        <function-ref name="isInput" scoped="" ref="0x404667a8"/>
        <function-ref name="toggle" scoped="" ref="0x40466888"/>
        <function-ref name="isOutput" scoped="" ref="0x40466968"/>
        <function-ref name="get" scoped="" ref="0x40466a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40466b28"/>
        <function-ref name="set" scoped="" ref="0x40466c08"/>
        <function-ref name="clr" scoped="" ref="0x40466ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4045f4f0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4045f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4045f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4045f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f968"/>
        <function-ref name="get" scoped="" ref="0x4045fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045fb28"/>
        <function-ref name="set" scoped="" ref="0x4045fc08"/>
        <function-ref name="clr" scoped="" ref="0x4045fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40467170" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40467170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467348"/>
        <function-ref name="isInput" scoped="" ref="0x40467428"/>
        <function-ref name="toggle" scoped="" ref="0x40467508"/>
        <function-ref name="isOutput" scoped="" ref="0x404675e8"/>
        <function-ref name="get" scoped="" ref="0x404676c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404677a8"/>
        <function-ref name="set" scoped="" ref="0x40467888"/>
        <function-ref name="clr" scoped="" ref="0x40467968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40466e48" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40466e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465050"/>
        <function-ref name="isInput" scoped="" ref="0x40465130"/>
        <function-ref name="toggle" scoped="" ref="0x40465210"/>
        <function-ref name="isOutput" scoped="" ref="0x404652f0"/>
        <function-ref name="get" scoped="" ref="0x404653d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404654b0"/>
        <function-ref name="set" scoped="" ref="0x40465590"/>
        <function-ref name="clr" scoped="" ref="0x40465670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eaa978" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eaa978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eaab50"/>
        <function-ref name="isInput" scoped="" ref="0x40eaac30"/>
        <function-ref name="toggle" scoped="" ref="0x40eaad10"/>
        <function-ref name="isOutput" scoped="" ref="0x40eaadf0"/>
        <function-ref name="get" scoped="" ref="0x40eaaed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea9010"/>
        <function-ref name="set" scoped="" ref="0x40ea90f0"/>
        <function-ref name="clr" scoped="" ref="0x40ea91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea83b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea8588"/>
        <function-ref name="isInput" scoped="" ref="0x40ea8668"/>
        <function-ref name="toggle" scoped="" ref="0x40ea8748"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea8828"/>
        <function-ref name="get" scoped="" ref="0x40ea8908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea89e8"/>
        <function-ref name="set" scoped="" ref="0x40ea8ac8"/>
        <function-ref name="clr" scoped="" ref="0x40ea8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea7d70" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea6010"/>
        <function-ref name="isInput" scoped="" ref="0x40ea60f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea62b0"/>
        <function-ref name="get" scoped="" ref="0x40ea6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea6470"/>
        <function-ref name="set" scoped="" ref="0x40ea6550"/>
        <function-ref name="clr" scoped="" ref="0x40ea6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea57f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea59d0"/>
        <function-ref name="isInput" scoped="" ref="0x40ea5ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea5b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea5c70"/>
        <function-ref name="get" scoped="" ref="0x40ea5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea5e30"/>
        <function-ref name="set" scoped="" ref="0x40ea5f10"/>
        <function-ref name="clr" scoped="" ref="0x40ea4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea3228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea3400"/>
        <function-ref name="isInput" scoped="" ref="0x40ea34e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea35c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea36a0"/>
        <function-ref name="get" scoped="" ref="0x40ea3780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea3860"/>
        <function-ref name="set" scoped="" ref="0x40ea3940"/>
        <function-ref name="clr" scoped="" ref="0x40ea3a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea1c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea1de0"/>
        <function-ref name="isInput" scoped="" ref="0x40ea1ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea0010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea00f0"/>
        <function-ref name="get" scoped="" ref="0x40ea01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea02b0"/>
        <function-ref name="set" scoped="" ref="0x40ea0390"/>
        <function-ref name="clr" scoped="" ref="0x40ea0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9f6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9f898"/>
        <function-ref name="isInput" scoped="" ref="0x40e9f978"/>
        <function-ref name="toggle" scoped="" ref="0x40e9fa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9fb38"/>
        <function-ref name="get" scoped="" ref="0x40e9fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9fcf8"/>
        <function-ref name="set" scoped="" ref="0x40e9fdd8"/>
        <function-ref name="clr" scoped="" ref="0x40e9feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9d0b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9d288"/>
        <function-ref name="isInput" scoped="" ref="0x40e9d368"/>
        <function-ref name="toggle" scoped="" ref="0x40e9d448"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9d528"/>
        <function-ref name="get" scoped="" ref="0x40e9d608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9d6e8"/>
        <function-ref name="set" scoped="" ref="0x40e9d7c8"/>
        <function-ref name="clr" scoped="" ref="0x40e9d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4046a6b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4046a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a888"/>
        <function-ref name="isInput" scoped="" ref="0x4046a968"/>
        <function-ref name="toggle" scoped="" ref="0x4046aa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4046ab28"/>
        <function-ref name="get" scoped="" ref="0x4046ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ace8"/>
        <function-ref name="set" scoped="" ref="0x4046adc8"/>
        <function-ref name="clr" scoped="" ref="0x4046aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40468330" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40468330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468508"/>
        <function-ref name="isInput" scoped="" ref="0x404685e8"/>
        <function-ref name="toggle" scoped="" ref="0x404686c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404687a8"/>
        <function-ref name="get" scoped="" ref="0x40468888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468968"/>
        <function-ref name="set" scoped="" ref="0x40468a48"/>
        <function-ref name="clr" scoped="" ref="0x40468b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046c3d8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4046c690"/>
        <function-ref name="toggle" scoped="" ref="0x4046c770"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c850"/>
        <function-ref name="get" scoped="" ref="0x4046c930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ca10"/>
        <function-ref name="set" scoped="" ref="0x4046caf0"/>
        <function-ref name="clr" scoped="" ref="0x4046cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40469030" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40469030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469208"/>
        <function-ref name="isInput" scoped="" ref="0x404692e8"/>
        <function-ref name="toggle" scoped="" ref="0x404693c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404694a8"/>
        <function-ref name="get" scoped="" ref="0x40469588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469668"/>
        <function-ref name="set" scoped="" ref="0x40469748"/>
        <function-ref name="clr" scoped="" ref="0x40469828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40468c88" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40468c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468e60"/>
        <function-ref name="isInput" scoped="" ref="0x40471010"/>
        <function-ref name="toggle" scoped="" ref="0x404710f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404711d0"/>
        <function-ref name="get" scoped="" ref="0x404712b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471390"/>
        <function-ref name="set" scoped="" ref="0x40471470"/>
        <function-ref name="clr" scoped="" ref="0x40471550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4046cd30" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4046cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046cf08"/>
        <function-ref name="isInput" scoped="" ref="0x4046a010"/>
        <function-ref name="toggle" scoped="" ref="0x4046a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a1d0"/>
        <function-ref name="get" scoped="" ref="0x4046a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a390"/>
        <function-ref name="set" scoped="" ref="0x4046a470"/>
        <function-ref name="clr" scoped="" ref="0x4046a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40469988" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40469988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469b60"/>
        <function-ref name="isInput" scoped="" ref="0x40469c40"/>
        <function-ref name="toggle" scoped="" ref="0x40469d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40469e00"/>
        <function-ref name="get" scoped="" ref="0x40469ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468010"/>
        <function-ref name="set" scoped="" ref="0x404680f0"/>
        <function-ref name="clr" scoped="" ref="0x404681d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404716b0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404716b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471888"/>
        <function-ref name="isInput" scoped="" ref="0x40471968"/>
        <function-ref name="toggle" scoped="" ref="0x40471a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40471b28"/>
        <function-ref name="get" scoped="" ref="0x40471c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471ce8"/>
        <function-ref name="set" scoped="" ref="0x40471dc8"/>
        <function-ref name="clr" scoped="" ref="0x40471ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed9538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed9710"/>
        <function-ref name="isInput" scoped="" ref="0x40ed97f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed98d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed99b0"/>
        <function-ref name="get" scoped="" ref="0x40ed9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed9b70"/>
        <function-ref name="set" scoped="" ref="0x40ed9c50"/>
        <function-ref name="clr" scoped="" ref="0x40ed9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed7010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed71e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ed72c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ed73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed7488"/>
        <function-ref name="get" scoped="" ref="0x40ed7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed7648"/>
        <function-ref name="set" scoped="" ref="0x40ed7728"/>
        <function-ref name="clr" scoped="" ref="0x40ed7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed69e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed6bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ed6ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed6d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed6e60"/>
        <function-ref name="get" scoped="" ref="0x40ed5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed50f0"/>
        <function-ref name="set" scoped="" ref="0x40ed51d0"/>
        <function-ref name="clr" scoped="" ref="0x40ed52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed4538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed4710"/>
        <function-ref name="isInput" scoped="" ref="0x40ed47f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed49b0"/>
        <function-ref name="get" scoped="" ref="0x40ed4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed4b70"/>
        <function-ref name="set" scoped="" ref="0x40ed4c50"/>
        <function-ref name="clr" scoped="" ref="0x40ed4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed2010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed21e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ed22c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ed23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed2488"/>
        <function-ref name="get" scoped="" ref="0x40ed2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed2648"/>
        <function-ref name="set" scoped="" ref="0x40ed2728"/>
        <function-ref name="clr" scoped="" ref="0x40ed2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed19e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed1bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ed1ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed1d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed1e60"/>
        <function-ref name="get" scoped="" ref="0x40ed0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed00f0"/>
        <function-ref name="set" scoped="" ref="0x40ed01d0"/>
        <function-ref name="clr" scoped="" ref="0x40ed02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ecf538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ecf538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ecf710"/>
        <function-ref name="isInput" scoped="" ref="0x40ecf7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ecf8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ecf9b0"/>
        <function-ref name="get" scoped="" ref="0x40ecfa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecfb70"/>
        <function-ref name="set" scoped="" ref="0x40ecfc50"/>
        <function-ref name="clr" scoped="" ref="0x40ecfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f01010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f01010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f011e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f012c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f013a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f01488"/>
        <function-ref name="get" scoped="" ref="0x40f01568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f01648"/>
        <function-ref name="set" scoped="" ref="0x40f01728"/>
        <function-ref name="clr" scoped="" ref="0x40f01808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40476170" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40476170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476348"/>
        <function-ref name="isInput" scoped="" ref="0x40476428"/>
        <function-ref name="toggle" scoped="" ref="0x40476508"/>
        <function-ref name="isOutput" scoped="" ref="0x404765e8"/>
        <function-ref name="get" scoped="" ref="0x404766c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404767a8"/>
        <function-ref name="set" scoped="" ref="0x40476888"/>
        <function-ref name="clr" scoped="" ref="0x40476968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40475e48" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40475e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473050"/>
        <function-ref name="isInput" scoped="" ref="0x40473130"/>
        <function-ref name="toggle" scoped="" ref="0x40473210"/>
        <function-ref name="isOutput" scoped="" ref="0x404732f0"/>
        <function-ref name="get" scoped="" ref="0x404733d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404734b0"/>
        <function-ref name="set" scoped="" ref="0x40473590"/>
        <function-ref name="clr" scoped="" ref="0x40473670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046edc8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d010"/>
        <function-ref name="isInput" scoped="" ref="0x4046d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4046d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046d2b0"/>
        <function-ref name="get" scoped="" ref="0x4046d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046d470"/>
        <function-ref name="set" scoped="" ref="0x4046d550"/>
        <function-ref name="clr" scoped="" ref="0x4046d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40476ac8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40476ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40476d80"/>
        <function-ref name="toggle" scoped="" ref="0x40476e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40475010"/>
        <function-ref name="get" scoped="" ref="0x404750f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404751d0"/>
        <function-ref name="set" scoped="" ref="0x404752b0"/>
        <function-ref name="clr" scoped="" ref="0x40475390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404737d0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404737d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404739a8"/>
        <function-ref name="isInput" scoped="" ref="0x40473a88"/>
        <function-ref name="toggle" scoped="" ref="0x40473b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40473c48"/>
        <function-ref name="get" scoped="" ref="0x40473d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473e08"/>
        <function-ref name="set" scoped="" ref="0x40473ee8"/>
        <function-ref name="clr" scoped="" ref="0x40472010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4046d790" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4046d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d968"/>
        <function-ref name="isInput" scoped="" ref="0x4046da48"/>
        <function-ref name="toggle" scoped="" ref="0x4046db28"/>
        <function-ref name="isOutput" scoped="" ref="0x4046dc08"/>
        <function-ref name="get" scoped="" ref="0x4046dce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ddc8"/>
        <function-ref name="set" scoped="" ref="0x4046dea8"/>
        <function-ref name="clr" scoped="" ref="0x40476010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404754f0" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404754f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404756c8"/>
        <function-ref name="isInput" scoped="" ref="0x404757a8"/>
        <function-ref name="toggle" scoped="" ref="0x40475888"/>
        <function-ref name="isOutput" scoped="" ref="0x40475968"/>
        <function-ref name="get" scoped="" ref="0x40475a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475b28"/>
        <function-ref name="set" scoped="" ref="0x40475c08"/>
        <function-ref name="clr" scoped="" ref="0x40475ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40472170" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40472170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472348"/>
        <function-ref name="isInput" scoped="" ref="0x40472428"/>
        <function-ref name="toggle" scoped="" ref="0x40472508"/>
        <function-ref name="isOutput" scoped="" ref="0x404725e8"/>
        <function-ref name="get" scoped="" ref="0x404726c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404727a8"/>
        <function-ref name="set" scoped="" ref="0x40472888"/>
        <function-ref name="clr" scoped="" ref="0x40472968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f0a418" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f0a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f0a5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40f0a6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40f0a7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f0a890"/>
        <function-ref name="get" scoped="" ref="0x40f0a970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f0aa50"/>
        <function-ref name="set" scoped="" ref="0x40f0ab30"/>
        <function-ref name="clr" scoped="" ref="0x40f0ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f09de0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f09de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f08010"/>
        <function-ref name="isInput" scoped="" ref="0x40f080f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f081d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f082b0"/>
        <function-ref name="get" scoped="" ref="0x40f08390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f08470"/>
        <function-ref name="set" scoped="" ref="0x40f08550"/>
        <function-ref name="clr" scoped="" ref="0x40f08630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f077f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f077f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f079d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f07ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f07b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f07c70"/>
        <function-ref name="get" scoped="" ref="0x40f07d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f07e30"/>
        <function-ref name="set" scoped="" ref="0x40f07f10"/>
        <function-ref name="clr" scoped="" ref="0x40f05010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f04228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f04228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f04400"/>
        <function-ref name="isInput" scoped="" ref="0x40f044e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f045c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f046a0"/>
        <function-ref name="get" scoped="" ref="0x40f04780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f04860"/>
        <function-ref name="set" scoped="" ref="0x40f04940"/>
        <function-ref name="clr" scoped="" ref="0x40f04a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f03c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f03c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f03de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f03ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f02010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f020f0"/>
        <function-ref name="get" scoped="" ref="0x40f021d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f022b0"/>
        <function-ref name="set" scoped="" ref="0x40f02390"/>
        <function-ref name="clr" scoped="" ref="0x40f02470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f376c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f37898"/>
        <function-ref name="isInput" scoped="" ref="0x40f37978"/>
        <function-ref name="toggle" scoped="" ref="0x40f37a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f37b38"/>
        <function-ref name="get" scoped="" ref="0x40f37c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f37cf8"/>
        <function-ref name="set" scoped="" ref="0x40f37dd8"/>
        <function-ref name="clr" scoped="" ref="0x40f37eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f350b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f350b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f35288"/>
        <function-ref name="isInput" scoped="" ref="0x40f35368"/>
        <function-ref name="toggle" scoped="" ref="0x40f35448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f35528"/>
        <function-ref name="get" scoped="" ref="0x40f35608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f356e8"/>
        <function-ref name="set" scoped="" ref="0x40f357c8"/>
        <function-ref name="clr" scoped="" ref="0x40f358a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f34a88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f34a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f34c60"/>
        <function-ref name="isInput" scoped="" ref="0x40f34d40"/>
        <function-ref name="toggle" scoped="" ref="0x40f34e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40f34f00"/>
        <function-ref name="get" scoped="" ref="0x40f33010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f330f0"/>
        <function-ref name="set" scoped="" ref="0x40f331d0"/>
        <function-ref name="clr" scoped="" ref="0x40f332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404789e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404789e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40478ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40478d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40478e60"/>
        <function-ref name="get" scoped="" ref="0x40477010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404770f0"/>
        <function-ref name="set" scoped="" ref="0x404771d0"/>
        <function-ref name="clr" scoped="" ref="0x404772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40480790" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40480790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480968"/>
        <function-ref name="isInput" scoped="" ref="0x40480a48"/>
        <function-ref name="toggle" scoped="" ref="0x40480b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40480c08"/>
        <function-ref name="get" scoped="" ref="0x40480ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40480dc8"/>
        <function-ref name="set" scoped="" ref="0x40480ea8"/>
        <function-ref name="clr" scoped="" ref="0x4047f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404796f8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404796f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404798d0"/>
        <function-ref name="isInput" scoped="" ref="0x404799b0"/>
        <function-ref name="toggle" scoped="" ref="0x40479a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40479b70"/>
        <function-ref name="get" scoped="" ref="0x40479c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479d30"/>
        <function-ref name="set" scoped="" ref="0x40479e10"/>
        <function-ref name="clr" scoped="" ref="0x40479ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40477410" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40477410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404775e8"/>
        <function-ref name="isInput" scoped="" ref="0x404776c8"/>
        <function-ref name="toggle" scoped="" ref="0x404777a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40477888"/>
        <function-ref name="get" scoped="" ref="0x40477968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477a48"/>
        <function-ref name="set" scoped="" ref="0x40477b28"/>
        <function-ref name="clr" scoped="" ref="0x40477c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4047f170" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4047f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f348"/>
        <function-ref name="isInput" scoped="" ref="0x4047f428"/>
        <function-ref name="toggle" scoped="" ref="0x4047f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f5e8"/>
        <function-ref name="get" scoped="" ref="0x4047f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f7a8"/>
        <function-ref name="set" scoped="" ref="0x4047f888"/>
        <function-ref name="clr" scoped="" ref="0x4047f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40478090" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40478090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478268"/>
        <function-ref name="isInput" scoped="" ref="0x40478348"/>
        <function-ref name="toggle" scoped="" ref="0x40478428"/>
        <function-ref name="isOutput" scoped="" ref="0x40478508"/>
        <function-ref name="get" scoped="" ref="0x404785e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404786c8"/>
        <function-ref name="set" scoped="" ref="0x404787a8"/>
        <function-ref name="clr" scoped="" ref="0x40478888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40477d68" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40477d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480010"/>
        <function-ref name="isInput" scoped="" ref="0x404800f0"/>
        <function-ref name="toggle" scoped="" ref="0x404801d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404802b0"/>
        <function-ref name="get" scoped="" ref="0x40480390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40480470"/>
        <function-ref name="set" scoped="" ref="0x40480550"/>
        <function-ref name="clr" scoped="" ref="0x40480630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4047fac8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4047fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4047fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4047fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e010"/>
        <function-ref name="get" scoped="" ref="0x4047e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e1d0"/>
        <function-ref name="set" scoped="" ref="0x4047e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4047e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f41de8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f41de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3d010"/>
        <function-ref name="isInput" scoped="" ref="0x40f3d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f3d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3d2b0"/>
        <function-ref name="get" scoped="" ref="0x40f3d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3d470"/>
        <function-ref name="set" scoped="" ref="0x40f3d550"/>
        <function-ref name="clr" scoped="" ref="0x40f3d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f3c7f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f3c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f3cab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f3cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3cc70"/>
        <function-ref name="get" scoped="" ref="0x40f3cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3ce30"/>
        <function-ref name="set" scoped="" ref="0x40f3cf10"/>
        <function-ref name="clr" scoped="" ref="0x40f3b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f3a228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f3a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3a400"/>
        <function-ref name="isInput" scoped="" ref="0x40f3a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f3a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3a6a0"/>
        <function-ref name="get" scoped="" ref="0x40f3a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3a860"/>
        <function-ref name="set" scoped="" ref="0x40f3a940"/>
        <function-ref name="clr" scoped="" ref="0x40f3aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f39c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f39c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f39de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f39ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f38010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f380f0"/>
        <function-ref name="get" scoped="" ref="0x40f381d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f382b0"/>
        <function-ref name="set" scoped="" ref="0x40f38390"/>
        <function-ref name="clr" scoped="" ref="0x40f38470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f6d6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f6d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f6d898"/>
        <function-ref name="isInput" scoped="" ref="0x40f6d978"/>
        <function-ref name="toggle" scoped="" ref="0x40f6da58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f6db38"/>
        <function-ref name="get" scoped="" ref="0x40f6dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f6dcf8"/>
        <function-ref name="set" scoped="" ref="0x40f6ddd8"/>
        <function-ref name="clr" scoped="" ref="0x40f6deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f6b0b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f6b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f6b288"/>
        <function-ref name="isInput" scoped="" ref="0x40f6b368"/>
        <function-ref name="toggle" scoped="" ref="0x40f6b448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f6b528"/>
        <function-ref name="get" scoped="" ref="0x40f6b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f6b6e8"/>
        <function-ref name="set" scoped="" ref="0x40f6b7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f6b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f6aa88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f6aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f6ac60"/>
        <function-ref name="isInput" scoped="" ref="0x40f6ad40"/>
        <function-ref name="toggle" scoped="" ref="0x40f6ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x40f6af00"/>
        <function-ref name="get" scoped="" ref="0x40f69010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f690f0"/>
        <function-ref name="set" scoped="" ref="0x40f691d0"/>
        <function-ref name="clr" scoped="" ref="0x40f692b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f68538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f68538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f68710"/>
        <function-ref name="isInput" scoped="" ref="0x40f687f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f688d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f689b0"/>
        <function-ref name="get" scoped="" ref="0x40f68a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f68b70"/>
        <function-ref name="set" scoped="" ref="0x40f68c50"/>
        <function-ref name="clr" scoped="" ref="0x40f68d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40484410" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40484410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404845e8"/>
        <function-ref name="isInput" scoped="" ref="0x404846c8"/>
        <function-ref name="toggle" scoped="" ref="0x404847a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40484888"/>
        <function-ref name="get" scoped="" ref="0x40484968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484a48"/>
        <function-ref name="set" scoped="" ref="0x40484b28"/>
        <function-ref name="clr" scoped="" ref="0x40484c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40482170" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40482170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482348"/>
        <function-ref name="isInput" scoped="" ref="0x40482428"/>
        <function-ref name="toggle" scoped="" ref="0x40482508"/>
        <function-ref name="isOutput" scoped="" ref="0x404825e8"/>
        <function-ref name="get" scoped="" ref="0x404826c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404827a8"/>
        <function-ref name="set" scoped="" ref="0x40482888"/>
        <function-ref name="clr" scoped="" ref="0x40482968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40485128" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40485128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485300"/>
        <function-ref name="isInput" scoped="" ref="0x404853e0"/>
        <function-ref name="toggle" scoped="" ref="0x404854c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404855a0"/>
        <function-ref name="get" scoped="" ref="0x40485680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485760"/>
        <function-ref name="set" scoped="" ref="0x40485840"/>
        <function-ref name="clr" scoped="" ref="0x40485920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40484d68" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40484d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483010"/>
        <function-ref name="isInput" scoped="" ref="0x404830f0"/>
        <function-ref name="toggle" scoped="" ref="0x404831d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404832b0"/>
        <function-ref name="get" scoped="" ref="0x40483390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483470"/>
        <function-ref name="set" scoped="" ref="0x40483550"/>
        <function-ref name="clr" scoped="" ref="0x40483630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40482ac8" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40482ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40482d80"/>
        <function-ref name="toggle" scoped="" ref="0x40482e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40481010"/>
        <function-ref name="get" scoped="" ref="0x404810f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404811d0"/>
        <function-ref name="set" scoped="" ref="0x404812b0"/>
        <function-ref name="clr" scoped="" ref="0x40481390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40485a80" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40485a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485c58"/>
        <function-ref name="isInput" scoped="" ref="0x40485d38"/>
        <function-ref name="toggle" scoped="" ref="0x40485e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40485ef8"/>
        <function-ref name="get" scoped="" ref="0x40484010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404840f0"/>
        <function-ref name="set" scoped="" ref="0x404841d0"/>
        <function-ref name="clr" scoped="" ref="0x404842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40483790" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40483790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483968"/>
        <function-ref name="isInput" scoped="" ref="0x40483a48"/>
        <function-ref name="toggle" scoped="" ref="0x40483b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40483c08"/>
        <function-ref name="get" scoped="" ref="0x40483ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483dc8"/>
        <function-ref name="set" scoped="" ref="0x40483ea8"/>
        <function-ref name="clr" scoped="" ref="0x40482010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404814f0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404814f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404816c8"/>
        <function-ref name="isInput" scoped="" ref="0x404817a8"/>
        <function-ref name="toggle" scoped="" ref="0x40481888"/>
        <function-ref name="isOutput" scoped="" ref="0x40481968"/>
        <function-ref name="get" scoped="" ref="0x40481a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481b28"/>
        <function-ref name="set" scoped="" ref="0x40481c08"/>
        <function-ref name="clr" scoped="" ref="0x40481ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f72938" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f72938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f72b10"/>
        <function-ref name="isInput" scoped="" ref="0x40f72bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40f72cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f72db0"/>
        <function-ref name="get" scoped="" ref="0x40f72e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f71010"/>
        <function-ref name="set" scoped="" ref="0x40f710f0"/>
        <function-ref name="clr" scoped="" ref="0x40f711d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f703b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f703b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f70588"/>
        <function-ref name="isInput" scoped="" ref="0x40f70668"/>
        <function-ref name="toggle" scoped="" ref="0x40f70748"/>
        <function-ref name="isOutput" scoped="" ref="0x40f70828"/>
        <function-ref name="get" scoped="" ref="0x40f70908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f709e8"/>
        <function-ref name="set" scoped="" ref="0x40f70ac8"/>
        <function-ref name="clr" scoped="" ref="0x40f70ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f6ed70" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f6ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa4010"/>
        <function-ref name="isInput" scoped="" ref="0x40fa40f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fa41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa42b0"/>
        <function-ref name="get" scoped="" ref="0x40fa4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa4470"/>
        <function-ref name="set" scoped="" ref="0x40fa4550"/>
        <function-ref name="clr" scoped="" ref="0x40fa4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa37f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa39d0"/>
        <function-ref name="isInput" scoped="" ref="0x40fa3ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40fa3b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa3c70"/>
        <function-ref name="get" scoped="" ref="0x40fa3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa3e30"/>
        <function-ref name="set" scoped="" ref="0x40fa3f10"/>
        <function-ref name="clr" scoped="" ref="0x40fa2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa1228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa1400"/>
        <function-ref name="isInput" scoped="" ref="0x40fa14e0"/>
        <function-ref name="toggle" scoped="" ref="0x40fa15c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa16a0"/>
        <function-ref name="get" scoped="" ref="0x40fa1780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa1860"/>
        <function-ref name="set" scoped="" ref="0x40fa1940"/>
        <function-ref name="clr" scoped="" ref="0x40fa1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa0c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa0de0"/>
        <function-ref name="isInput" scoped="" ref="0x40fa0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f9f010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9f0f0"/>
        <function-ref name="get" scoped="" ref="0x40f9f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9f2b0"/>
        <function-ref name="set" scoped="" ref="0x40f9f390"/>
        <function-ref name="clr" scoped="" ref="0x40f9f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9e6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9e898"/>
        <function-ref name="isInput" scoped="" ref="0x40f9e978"/>
        <function-ref name="toggle" scoped="" ref="0x40f9ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9eb38"/>
        <function-ref name="get" scoped="" ref="0x40f9ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9ecf8"/>
        <function-ref name="set" scoped="" ref="0x40f9edd8"/>
        <function-ref name="clr" scoped="" ref="0x40f9eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9c0b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9c288"/>
        <function-ref name="isInput" scoped="" ref="0x40f9c368"/>
        <function-ref name="toggle" scoped="" ref="0x40f9c448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9c528"/>
        <function-ref name="get" scoped="" ref="0x40f9c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9c6e8"/>
        <function-ref name="set" scoped="" ref="0x40f9c7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f9c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40488e48" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40488e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487050"/>
        <function-ref name="isInput" scoped="" ref="0x40487130"/>
        <function-ref name="toggle" scoped="" ref="0x40487210"/>
        <function-ref name="isOutput" scoped="" ref="0x404872f0"/>
        <function-ref name="get" scoped="" ref="0x404873d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404874b0"/>
        <function-ref name="set" scoped="" ref="0x40487590"/>
        <function-ref name="clr" scoped="" ref="0x40487670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40492ac8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40492ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40492d80"/>
        <function-ref name="toggle" scoped="" ref="0x40492e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40491010"/>
        <function-ref name="get" scoped="" ref="0x404910f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404911d0"/>
        <function-ref name="set" scoped="" ref="0x404912b0"/>
        <function-ref name="clr" scoped="" ref="0x40491390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4048ab00" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4048ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048acd8"/>
        <function-ref name="isInput" scoped="" ref="0x4048adb8"/>
        <function-ref name="toggle" scoped="" ref="0x4048ae98"/>
        <function-ref name="isOutput" scoped="" ref="0x40488010"/>
        <function-ref name="get" scoped="" ref="0x404880f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404881d0"/>
        <function-ref name="set" scoped="" ref="0x404882b0"/>
        <function-ref name="clr" scoped="" ref="0x40488390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404877d0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404877d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404879a8"/>
        <function-ref name="isInput" scoped="" ref="0x40487a88"/>
        <function-ref name="toggle" scoped="" ref="0x40487b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40487c48"/>
        <function-ref name="get" scoped="" ref="0x40487d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487e08"/>
        <function-ref name="set" scoped="" ref="0x40487ee8"/>
        <function-ref name="clr" scoped="" ref="0x40492010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404914f0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404914f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404916c8"/>
        <function-ref name="isInput" scoped="" ref="0x404917a8"/>
        <function-ref name="toggle" scoped="" ref="0x40491888"/>
        <function-ref name="isOutput" scoped="" ref="0x40491968"/>
        <function-ref name="get" scoped="" ref="0x40491a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40491b28"/>
        <function-ref name="set" scoped="" ref="0x40491c08"/>
        <function-ref name="clr" scoped="" ref="0x40491ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404884f0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404884f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404886c8"/>
        <function-ref name="isInput" scoped="" ref="0x404887a8"/>
        <function-ref name="toggle" scoped="" ref="0x40488888"/>
        <function-ref name="isOutput" scoped="" ref="0x40488968"/>
        <function-ref name="get" scoped="" ref="0x40488a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488b28"/>
        <function-ref name="set" scoped="" ref="0x40488c08"/>
        <function-ref name="clr" scoped="" ref="0x40488ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40492170" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40492170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492348"/>
        <function-ref name="isInput" scoped="" ref="0x40492428"/>
        <function-ref name="toggle" scoped="" ref="0x40492508"/>
        <function-ref name="isOutput" scoped="" ref="0x404925e8"/>
        <function-ref name="get" scoped="" ref="0x404926c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404927a8"/>
        <function-ref name="set" scoped="" ref="0x40492888"/>
        <function-ref name="clr" scoped="" ref="0x40492968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40491e48" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40491e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490050"/>
        <function-ref name="isInput" scoped="" ref="0x40490130"/>
        <function-ref name="toggle" scoped="" ref="0x40490210"/>
        <function-ref name="isOutput" scoped="" ref="0x404902f0"/>
        <function-ref name="get" scoped="" ref="0x404903d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404904b0"/>
        <function-ref name="set" scoped="" ref="0x40490590"/>
        <function-ref name="clr" scoped="" ref="0x40490670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa7538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa7710"/>
        <function-ref name="isInput" scoped="" ref="0x40fa77f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fa78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa79b0"/>
        <function-ref name="get" scoped="" ref="0x40fa7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa7b70"/>
        <function-ref name="set" scoped="" ref="0x40fa7c50"/>
        <function-ref name="clr" scoped="" ref="0x40fa7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fa5010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fa5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa51e8"/>
        <function-ref name="isInput" scoped="" ref="0x40fa52c8"/>
        <function-ref name="toggle" scoped="" ref="0x40fa53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa5488"/>
        <function-ref name="get" scoped="" ref="0x40fa5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa5648"/>
        <function-ref name="set" scoped="" ref="0x40fa5728"/>
        <function-ref name="clr" scoped="" ref="0x40fa5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fdc9e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fdc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fdcbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40fdcca0"/>
        <function-ref name="toggle" scoped="" ref="0x40fdcd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40fdce60"/>
        <function-ref name="get" scoped="" ref="0x40fdb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fdb0f0"/>
        <function-ref name="set" scoped="" ref="0x40fdb1d0"/>
        <function-ref name="clr" scoped="" ref="0x40fdb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fda538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fda538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fda710"/>
        <function-ref name="isInput" scoped="" ref="0x40fda7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fda8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fda9b0"/>
        <function-ref name="get" scoped="" ref="0x40fdaa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fdab70"/>
        <function-ref name="set" scoped="" ref="0x40fdac50"/>
        <function-ref name="clr" scoped="" ref="0x40fdad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd8010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd81e8"/>
        <function-ref name="isInput" scoped="" ref="0x40fd82c8"/>
        <function-ref name="toggle" scoped="" ref="0x40fd83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd8488"/>
        <function-ref name="get" scoped="" ref="0x40fd8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd8648"/>
        <function-ref name="set" scoped="" ref="0x40fd8728"/>
        <function-ref name="clr" scoped="" ref="0x40fd8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd79e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd7bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40fd7ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40fd7d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd7e60"/>
        <function-ref name="get" scoped="" ref="0x40fd6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd60f0"/>
        <function-ref name="set" scoped="" ref="0x40fd61d0"/>
        <function-ref name="clr" scoped="" ref="0x40fd62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd5538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd5538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd5710"/>
        <function-ref name="isInput" scoped="" ref="0x40fd57f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fd58d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd59b0"/>
        <function-ref name="get" scoped="" ref="0x40fd5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd5b70"/>
        <function-ref name="set" scoped="" ref="0x40fd5c50"/>
        <function-ref name="clr" scoped="" ref="0x40fd5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd3010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd31e8"/>
        <function-ref name="isInput" scoped="" ref="0x40fd32c8"/>
        <function-ref name="toggle" scoped="" ref="0x40fd33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd3488"/>
        <function-ref name="get" scoped="" ref="0x40fd3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd3648"/>
        <function-ref name="set" scoped="" ref="0x40fd3728"/>
        <function-ref name="clr" scoped="" ref="0x40fd3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40498010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40498010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404981e8"/>
        <function-ref name="isInput" scoped="" ref="0x404982c8"/>
        <function-ref name="toggle" scoped="" ref="0x404983a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40498488"/>
        <function-ref name="get" scoped="" ref="0x40498568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40498648"/>
        <function-ref name="set" scoped="" ref="0x40498728"/>
        <function-ref name="clr" scoped="" ref="0x40498808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a27b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a27b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a2990"/>
        <function-ref name="isInput" scoped="" ref="0x404a2a70"/>
        <function-ref name="toggle" scoped="" ref="0x404a2b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404a2c30"/>
        <function-ref name="get" scoped="" ref="0x404a2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a2df0"/>
        <function-ref name="set" scoped="" ref="0x404a2ed0"/>
        <function-ref name="clr" scoped="" ref="0x404a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404aa010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404aa2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404aa3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa488"/>
        <function-ref name="get" scoped="" ref="0x404aa568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa648"/>
        <function-ref name="set" scoped="" ref="0x404aa728"/>
        <function-ref name="clr" scoped="" ref="0x404aa808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a87b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a87b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a8990"/>
        <function-ref name="isInput" scoped="" ref="0x404a8a70"/>
        <function-ref name="toggle" scoped="" ref="0x404a8b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404a8c30"/>
        <function-ref name="get" scoped="" ref="0x404a8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a8df0"/>
        <function-ref name="set" scoped="" ref="0x404a8ed0"/>
        <function-ref name="clr" scoped="" ref="0x404a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a5010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a51e8"/>
        <function-ref name="isInput" scoped="" ref="0x404a52c8"/>
        <function-ref name="toggle" scoped="" ref="0x404a53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5488"/>
        <function-ref name="get" scoped="" ref="0x404a5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a5648"/>
        <function-ref name="set" scoped="" ref="0x404a5728"/>
        <function-ref name="clr" scoped="" ref="0x404a5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ae7b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ae7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae990"/>
        <function-ref name="isInput" scoped="" ref="0x404aea70"/>
        <function-ref name="toggle" scoped="" ref="0x404aeb50"/>
        <function-ref name="isOutput" scoped="" ref="0x404aec30"/>
        <function-ref name="get" scoped="" ref="0x404aed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aedf0"/>
        <function-ref name="set" scoped="" ref="0x404aeed0"/>
        <function-ref name="clr" scoped="" ref="0x404ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ab080" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ab080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab258"/>
        <function-ref name="isInput" scoped="" ref="0x404ab338"/>
        <function-ref name="toggle" scoped="" ref="0x404ab418"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab4f8"/>
        <function-ref name="get" scoped="" ref="0x404ab5d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab6b8"/>
        <function-ref name="set" scoped="" ref="0x404ab798"/>
        <function-ref name="clr" scoped="" ref="0x404ab878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b4840" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4a18"/>
        <function-ref name="isInput" scoped="" ref="0x404b4af8"/>
        <function-ref name="toggle" scoped="" ref="0x404b4bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4cb8"/>
        <function-ref name="get" scoped="" ref="0x404b4d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4e78"/>
        <function-ref name="set" scoped="" ref="0x404b3010"/>
        <function-ref name="clr" scoped="" ref="0x404b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b10b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1288"/>
        <function-ref name="isInput" scoped="" ref="0x404b1368"/>
        <function-ref name="toggle" scoped="" ref="0x404b1448"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1528"/>
        <function-ref name="get" scoped="" ref="0x404b1608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b16e8"/>
        <function-ref name="set" scoped="" ref="0x404b17c8"/>
        <function-ref name="clr" scoped="" ref="0x404b18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404bb880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404bb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bba58"/>
        <function-ref name="isInput" scoped="" ref="0x404bbb38"/>
        <function-ref name="toggle" scoped="" ref="0x404bbc18"/>
        <function-ref name="isOutput" scoped="" ref="0x404bbcf8"/>
        <function-ref name="get" scoped="" ref="0x404bbdd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bbeb8"/>
        <function-ref name="set" scoped="" ref="0x404ba010"/>
        <function-ref name="clr" scoped="" ref="0x404ba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b70b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b70b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7288"/>
        <function-ref name="isInput" scoped="" ref="0x404b7368"/>
        <function-ref name="toggle" scoped="" ref="0x404b7448"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7528"/>
        <function-ref name="get" scoped="" ref="0x404b7608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b76e8"/>
        <function-ref name="set" scoped="" ref="0x404b77c8"/>
        <function-ref name="clr" scoped="" ref="0x404b78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c1880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1a58"/>
        <function-ref name="isInput" scoped="" ref="0x404c1b38"/>
        <function-ref name="toggle" scoped="" ref="0x404c1c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1cf8"/>
        <function-ref name="get" scoped="" ref="0x404c1dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1eb8"/>
        <function-ref name="set" scoped="" ref="0x404c0010"/>
        <function-ref name="clr" scoped="" ref="0x404c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404bd0b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404bd0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd288"/>
        <function-ref name="isInput" scoped="" ref="0x404bd368"/>
        <function-ref name="toggle" scoped="" ref="0x404bd448"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd528"/>
        <function-ref name="get" scoped="" ref="0x404bd608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd6e8"/>
        <function-ref name="set" scoped="" ref="0x404bd7c8"/>
        <function-ref name="clr" scoped="" ref="0x404bd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c7880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7a58"/>
        <function-ref name="isInput" scoped="" ref="0x404c7b38"/>
        <function-ref name="toggle" scoped="" ref="0x404c7c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7cf8"/>
        <function-ref name="get" scoped="" ref="0x404c7dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7eb8"/>
        <function-ref name="set" scoped="" ref="0x404c6010"/>
        <function-ref name="clr" scoped="" ref="0x404c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404dfbf8" loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404dfbf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403527d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403527d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404dfdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404e9010" loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404e9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404e91e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404e92c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404e93a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x404e9488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404e9568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404f1808" loc="60:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404f1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404f19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403fca28" loc="57:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403fca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403fcc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404f1400" loc="59:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404f1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404f15d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x403fcdc0" loc="58:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403fcdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404f1010"/>
        <function-ref name="taskLoop" scoped="" ref="0x404f10f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x404f11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4036bd58" loc="48:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4036bd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40366010"/>
        <function-ref name="runTask" scoped="" ref="0x403660f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4036a5f0" loc="47:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4036a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4036a7c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4036a8a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4036a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403d8100" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403d8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403d82d8"/>
        <function-ref name="runTask" scoped="" ref="0x403d83b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d8d68" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403d9820" loc="55:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403d9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d99f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403d9ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x403d9bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403ec218" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403ec218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403ec3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40365728" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40365728"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40365900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403ed420" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403ed420"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403ed5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40506168" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40506168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40506340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40502a38" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40502a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40502c10"/>
        <function-ref name="stopDone" scoped="" ref="0x40502cf0"/>
        <function-ref name="start" scoped="" ref="0x40502dd0"/>
        <function-ref name="stop" scoped="" ref="0x40502eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x405537a8" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x405537a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40553980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x40560640" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x40560640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40560818"/>
        <function-ref name="source" scoped="" ref="0x405608f8"/>
        <function-ref name="address" scoped="" ref="0x405609d8"/>
        <function-ref name="destination" scoped="" ref="0x40560ab8"/>
        <function-ref name="setSource" scoped="" ref="0x40560b98"/>
        <function-ref name="setDestination" scoped="" ref="0x40560c78"/>
        <function-ref name="type" scoped="" ref="0x40560d58"/>
        <function-ref name="setType" scoped="" ref="0x40560e38"/>
        <function-ref name="isForMe" scoped="" ref="0x40560f18"/>
        <function-ref name="setGroup" scoped="" ref="0x4055e010"/>
        <function-ref name="localGroup" scoped="" ref="0x4055e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x40562ba0" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x40562ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40562d78"/>
        <function-ref name="runTask" scoped="" ref="0x40562e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40504180" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40504180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40504358"/>
        <function-ref name="stopDone" scoped="" ref="0x40504438"/>
        <function-ref name="start" scoped="" ref="0x40504518"/>
        <function-ref name="stop" scoped="" ref="0x405045f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x4054ee90" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4054ee90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40560080"/>
        <function-ref name="payloadLength" scoped="" ref="0x40560160"/>
        <function-ref name="getPayload" scoped="" ref="0x40560240"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40560320"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40560400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x4054e3e0" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4054e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4054e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x4056f3f8" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x4056f3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4056f5d0"/>
        <function-ref name="runTask" scoped="" ref="0x4056f6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40564298" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40564298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405644f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405645d0"/>
        <function-ref name="led1On" scoped="" ref="0x405646b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40564790"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40564870"/>
        <function-ref name="get" scoped="" ref="0x40564950"/>
        <function-ref name="led1Off" scoped="" ref="0x40564a30"/>
        <function-ref name="led2Off" scoped="" ref="0x40564db0"/>
        <function-ref name="set" scoped="" ref="0x40564b10"/>
        <function-ref name="led0On" scoped="" ref="0x40564bf0"/>
        <function-ref name="led2On" scoped="" ref="0x40564cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x4054fa68" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x4054fa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4054fc40"/>
        <function-ref name="payloadLength" scoped="" ref="0x4054fd20"/>
        <function-ref name="getPayload" scoped="" ref="0x4054fe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4054fee0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40549010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40548950" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40548950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40548b28"/>
        <function-ref name="getPayload" scoped="" ref="0x40548c08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40548ce8"/>
        <function-ref name="cancel" scoped="" ref="0x40548dc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40548ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x4050f238" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x4050f238"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4050f410"/>
        <function-ref name="getPayload" scoped="" ref="0x4050f4f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4050f5d0"/>
        <function-ref name="cancel" scoped="" ref="0x4050f6b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4050f790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x4055f930" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x4055f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4055fb08"/>
        <function-ref name="source" scoped="" ref="0x4055fbe8"/>
        <function-ref name="address" scoped="" ref="0x4055fcc8"/>
        <function-ref name="destination" scoped="" ref="0x4055fda8"/>
        <function-ref name="setSource" scoped="" ref="0x4055fe88"/>
        <function-ref name="setDestination" scoped="" ref="0x40548010"/>
        <function-ref name="type" scoped="" ref="0x405480f0"/>
        <function-ref name="setType" scoped="" ref="0x405481d0"/>
        <function-ref name="isForMe" scoped="" ref="0x405482b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40548390"/>
        <function-ref name="localGroup" scoped="" ref="0x40548470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x4054eaa8" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x4054eaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4054ec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4058d090" loc="46:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4058d090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4058d268"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4058d348"/>
        <function-ref name="led1On" scoped="" ref="0x4058d428"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4058d508"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4058d5e8"/>
        <function-ref name="get" scoped="" ref="0x4058d6c8"/>
        <function-ref name="led1Off" scoped="" ref="0x4058d7a8"/>
        <function-ref name="led2Off" scoped="" ref="0x4058db28"/>
        <function-ref name="set" scoped="" ref="0x4058d888"/>
        <function-ref name="led0On" scoped="" ref="0x4058d968"/>
        <function-ref name="led2On" scoped="" ref="0x4058da48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40599408" loc="50:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40599408"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405995e0"/>
        <function-ref name="isInput" scoped="" ref="0x405996c0"/>
        <function-ref name="toggle" scoped="" ref="0x405997a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40599880"/>
        <function-ref name="get" scoped="" ref="0x40599960"/>
        <function-ref name="makeOutput" scoped="" ref="0x40599a40"/>
        <function-ref name="set" scoped="" ref="0x40599b20"/>
        <function-ref name="clr" scoped="" ref="0x40599c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4059a3e8" loc="46:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4059a3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4059a5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40599df0" loc="51:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40599df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40598010"/>
        <function-ref name="isInput" scoped="" ref="0x405980f0"/>
        <function-ref name="toggle" scoped="" ref="0x405981d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405982b0"/>
        <function-ref name="get" scoped="" ref="0x40598390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40598470"/>
        <function-ref name="set" scoped="" ref="0x40598550"/>
        <function-ref name="clr" scoped="" ref="0x40598630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4059a730" loc="47:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4059a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4059a908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4059a9e8"/>
        <function-ref name="led1On" scoped="" ref="0x4059aac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4059aba8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4059ac88"/>
        <function-ref name="get" scoped="" ref="0x4059ad68"/>
        <function-ref name="led1Off" scoped="" ref="0x4059ae48"/>
        <function-ref name="led2Off" scoped="" ref="0x405991d8"/>
        <function-ref name="set" scoped="" ref="0x4059af28"/>
        <function-ref name="led0On" scoped="" ref="0x40599018"/>
        <function-ref name="led2On" scoped="" ref="0x405990f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40598820" loc="52:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40598820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405989f8"/>
        <function-ref name="isInput" scoped="" ref="0x40598ad8"/>
        <function-ref name="toggle" scoped="" ref="0x40598bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40598c98"/>
        <function-ref name="get" scoped="" ref="0x40598d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x40598e58"/>
        <function-ref name="set" scoped="" ref="0x40597010"/>
        <function-ref name="clr" scoped="" ref="0x405970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x4059cba8" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4059cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059cd80"/>
        <function-ref name="isInput" scoped="" ref="0x4059ce60"/>
        <function-ref name="toggle" scoped="" ref="0x405a7010"/>
        <function-ref name="isOutput" scoped="" ref="0x405a70f0"/>
        <function-ref name="get" scoped="" ref="0x405a71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a72b0"/>
        <function-ref name="set" scoped="" ref="0x405a7390"/>
        <function-ref name="clr" scoped="" ref="0x405a7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x405a7680" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405a7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a7858"/>
        <function-ref name="isInput" scoped="" ref="0x405a7938"/>
        <function-ref name="toggle" scoped="" ref="0x405a7a18"/>
        <function-ref name="isOutput" scoped="" ref="0x405a7af8"/>
        <function-ref name="get" scoped="" ref="0x405a7bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a7cb8"/>
        <function-ref name="set" scoped="" ref="0x405a7d98"/>
        <function-ref name="clr" scoped="" ref="0x405a7e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x405a6a38" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405a6a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405a6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x405a60b0" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405a60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a6288"/>
        <function-ref name="isInput" scoped="" ref="0x405a6368"/>
        <function-ref name="toggle" scoped="" ref="0x405a6448"/>
        <function-ref name="isOutput" scoped="" ref="0x405a6528"/>
        <function-ref name="get" scoped="" ref="0x405a6608"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a66e8"/>
        <function-ref name="set" scoped="" ref="0x405a67c8"/>
        <function-ref name="clr" scoped="" ref="0x405a68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4058eb28" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4058eb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4058ed00"/>
        <function-ref name="stopDone" scoped="" ref="0x4058ede0"/>
        <function-ref name="start" scoped="" ref="0x4058eec0"/>
        <function-ref name="stop" scoped="" ref="0x405b2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405aec50" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405aec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405aee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405b0010" loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b01e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405b02c8"/>
        <function-ref name="getPayload" scoped="" ref="0x405b03a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b0488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405b0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405b2470" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405b2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405b2648"/>
        <function-ref name="getPayload" scoped="" ref="0x405b2728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b2808"/>
        <function-ref name="cancel" scoped="" ref="0x405b28e8"/>
        <function-ref name="sendDone" scoped="" ref="0x405b29c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405b1510" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405b1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b16e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405c4568" loc="52:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405c4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405c4740"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405c4820"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405c4900"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405c49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405b2e30" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405b2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b1050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405ba8d0" loc="51:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405ba8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405baaa8"/>
        <function-ref name="noAck" scoped="" ref="0x405bab88"/>
        <function-ref name="wasAcked" scoped="" ref="0x405bac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405ad010" loc="53:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405ad1e8"/>
        <function-ref name="setRetries" scoped="" ref="0x405ad2c8"/>
        <function-ref name="getRetries" scoped="" ref="0x405ad3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405ad488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405ad568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405b0700" loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405b0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405b08d8"/>
        <function-ref name="source" scoped="" ref="0x405b09b8"/>
        <function-ref name="address" scoped="" ref="0x405b0a98"/>
        <function-ref name="destination" scoped="" ref="0x405b0b78"/>
        <function-ref name="setSource" scoped="" ref="0x405b0c58"/>
        <function-ref name="setDestination" scoped="" ref="0x405b0d38"/>
        <function-ref name="type" scoped="" ref="0x405b0e18"/>
        <function-ref name="setType" scoped="" ref="0x405b0ef8"/>
        <function-ref name="isForMe" scoped="" ref="0x405af010"/>
        <function-ref name="setGroup" scoped="" ref="0x405af0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x405af1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x405be9c8" loc="54:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x405be9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x405beba0"/>
        <function-ref name="setChannel" scoped="" ref="0x405bec80"/>
        <function-ref name="getChannel" scoped="" ref="0x405bed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x405c9320" loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x405c9320"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405c9e20"/>
        <function-ref name="clear" scoped="" ref="0x405bf1f8"/>
        <function-ref name="isValid" scoped="" ref="0x405c9a70"/>
        <function-ref name="set" scoped="" ref="0x405bf5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405bfce0" loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405bfce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405cc898"/>
        <function-ref name="clear" scoped="" ref="0x405ccc48"/>
        <function-ref name="isValid" scoped="" ref="0x405cc4e8"/>
        <function-ref name="set" scoped="" ref="0x405c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405c6a88" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405c6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405c6c60"/>
        <function-ref name="stopDone" scoped="" ref="0x405c6d40"/>
        <function-ref name="start" scoped="" ref="0x405c6e20"/>
        <function-ref name="stop" scoped="" ref="0x405c6f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405d71c0" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405d71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d7d88"/>
        <function-ref name="get" scoped="" ref="0x405d7ac8"/>
        <function-ref name="isSet" scoped="" ref="0x405d7808"/>
        <function-ref name="set" scoped="" ref="0x405d6068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405e0a08" loc="71:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405e0a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405df5b0"/>
        <function-ref name="clear" scoped="" ref="0x405df960"/>
        <function-ref name="isValid" scoped="" ref="0x405df200"/>
        <function-ref name="set" scoped="" ref="0x405dfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405d2a68" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405d2a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405d2c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405d1bb0" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405d1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d1d88"/>
        <function-ref name="payloadLength" scoped="" ref="0x405d1e68"/>
        <function-ref name="getPayload" scoped="" ref="0x405d0010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d00f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405d01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405d3380" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405d3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405d3558"/>
        <function-ref name="getPayload" scoped="" ref="0x405d3638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d3718"/>
        <function-ref name="cancel" scoped="" ref="0x405d37f8"/>
        <function-ref name="sendDone" scoped="" ref="0x405d38d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405d23f0" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405d23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405d25c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405cde38" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405cde38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d8a18"/>
        <function-ref name="get" scoped="" ref="0x405d8758"/>
        <function-ref name="isSet" scoped="" ref="0x405d8498"/>
        <function-ref name="set" scoped="" ref="0x405d8cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405cf5c8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405cf5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405cf7a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405cf880"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405cf960"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405cfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405d3d40" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405d3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405d3f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405e4030" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405e4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405e4b30"/>
        <function-ref name="clear" scoped="" ref="0x405e4ee0"/>
        <function-ref name="isValid" scoped="" ref="0x405e4780"/>
        <function-ref name="set" scoped="" ref="0x405e02d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x405e2478" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x405e2478"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e2ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405d9a68" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405d9a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405cd658"/>
        <function-ref name="get" scoped="" ref="0x405cd398"/>
        <function-ref name="isSet" scoped="" ref="0x405cd0d8"/>
        <function-ref name="set" scoped="" ref="0x405cd918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405cf040" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405cf040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405cf218"/>
        <function-ref name="noAck" scoped="" ref="0x405cf2f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405cf3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x405d1178" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x405d1178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405d1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405cfbe8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405cfbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405cfdc0"/>
        <function-ref name="setRetries" scoped="" ref="0x405cfea0"/>
        <function-ref name="getRetries" scoped="" ref="0x405ce010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405ce0f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405ce1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405d0368" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405d0368"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405d0540"/>
        <function-ref name="source" scoped="" ref="0x405d0620"/>
        <function-ref name="address" scoped="" ref="0x405d0700"/>
        <function-ref name="destination" scoped="" ref="0x405d07e0"/>
        <function-ref name="setSource" scoped="" ref="0x405d08c0"/>
        <function-ref name="setDestination" scoped="" ref="0x405d09a0"/>
        <function-ref name="type" scoped="" ref="0x405d0a80"/>
        <function-ref name="setType" scoped="" ref="0x405d0b60"/>
        <function-ref name="isForMe" scoped="" ref="0x405d0c40"/>
        <function-ref name="setGroup" scoped="" ref="0x405d0d20"/>
        <function-ref name="localGroup" scoped="" ref="0x405d0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x405ce390" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x405ce390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x405ce5e8"/>
        <function-ref name="setChannel" scoped="" ref="0x405ce6c8"/>
        <function-ref name="getChannel" scoped="" ref="0x405ce7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405e12a0" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405e12a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405e1478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x405d1858" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x405d1858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405d1a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405de708" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405de708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405de8e0"/>
        <function-ref name="stopDone" scoped="" ref="0x405de9c0"/>
        <function-ref name="start" scoped="" ref="0x405deaa0"/>
        <function-ref name="stop" scoped="" ref="0x405deb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40604b60" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40604b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40602780"/>
        <function-ref name="get" scoped="" ref="0x406024c0"/>
        <function-ref name="isSet" scoped="" ref="0x40602200"/>
        <function-ref name="set" scoped="" ref="0x40602a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x405e6a58" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x405e6a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405e6c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x405e51d0" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x405e51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405e5428"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405e5508"/>
        <function-ref name="request" scoped="" ref="0x405e55e8"/>
        <function-ref name="granted" scoped="" ref="0x405e56c8"/>
        <function-ref name="isOwner" scoped="" ref="0x405e57a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405e9778" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405e9778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405e9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405eb010" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405eb1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x405eb2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405eb3a8"/>
        <function-ref name="cancel" scoped="" ref="0x405eb488"/>
        <function-ref name="sendDone" scoped="" ref="0x405eb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405e9100" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405e9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405e92d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x405f85b8" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x405f85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x405f8790"/>
        <function-ref name="address" scoped="" ref="0x405f8870"/>
        <function-ref name="destination" scoped="" ref="0x405f8950"/>
        <function-ref name="setSource" scoped="" ref="0x405f8a30"/>
        <function-ref name="setDestination" scoped="" ref="0x405f8b10"/>
        <function-ref name="pan" scoped="" ref="0x405f8bf0"/>
        <function-ref name="setPan" scoped="" ref="0x405f8cd0"/>
        <function-ref name="isForMe" scoped="" ref="0x405f8db0"/>
        <function-ref name="localPan" scoped="" ref="0x405f8e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x405f0148" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x405f0148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405f0320"/>
        <function-ref name="payloadLength" scoped="" ref="0x405f0400"/>
        <function-ref name="getPayload" scoped="" ref="0x405f04e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405f05c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405f06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405f57f0" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405f57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406043d8"/>
        <function-ref name="get" scoped="" ref="0x40604118"/>
        <function-ref name="isSet" scoped="" ref="0x405f5e38"/>
        <function-ref name="set" scoped="" ref="0x40604698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405f0e48" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405f0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405f7050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405f7130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405f7210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405f72f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x405e7618" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x405e7618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e77f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x405e78d0"/>
        <function-ref name="getPayload" scoped="" ref="0x405e79b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e7a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405e7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405eb9d0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405eb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405ebba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40601ec8" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40601ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40600b30"/>
        <function-ref name="clear" scoped="" ref="0x40600ee0"/>
        <function-ref name="isValid" scoped="" ref="0x40600780"/>
        <function-ref name="set" scoped="" ref="0x405fe2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40601330" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40601330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40601978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405f6368" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405f6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405f5010"/>
        <function-ref name="get" scoped="" ref="0x405f6c70"/>
        <function-ref name="isSet" scoped="" ref="0x405f69b0"/>
        <function-ref name="set" scoped="" ref="0x405f52d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405f08c0" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405f08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405f0a98"/>
        <function-ref name="noAck" scoped="" ref="0x405f0b78"/>
        <function-ref name="wasAcked" scoped="" ref="0x405f0c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x405f2e60" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x405f2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405e6050"/>
        <function-ref name="getPayload" scoped="" ref="0x405e6130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e6210"/>
        <function-ref name="cancel" scoped="" ref="0x405e62f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405e63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x405e9e78" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x405e9e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405e8070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405f7498" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405f7498"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405f7670"/>
        <function-ref name="setRetries" scoped="" ref="0x405f7750"/>
        <function-ref name="getRetries" scoped="" ref="0x405f7830"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405f7910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405f79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x405f7bb0" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x405f7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x405f7d88"/>
        <function-ref name="setChannel" scoped="" ref="0x405f7e68"/>
        <function-ref name="getChannel" scoped="" ref="0x405f6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405e88e8" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405e88e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405e8ac0"/>
        <function-ref name="source" scoped="" ref="0x405e8ba0"/>
        <function-ref name="address" scoped="" ref="0x405e8c80"/>
        <function-ref name="destination" scoped="" ref="0x405e8d60"/>
        <function-ref name="setSource" scoped="" ref="0x405e8e40"/>
        <function-ref name="setDestination" scoped="" ref="0x405e8f20"/>
        <function-ref name="type" scoped="" ref="0x405e7018"/>
        <function-ref name="setType" scoped="" ref="0x405e70f8"/>
        <function-ref name="isForMe" scoped="" ref="0x405e71d8"/>
        <function-ref name="setGroup" scoped="" ref="0x405e72b8"/>
        <function-ref name="localGroup" scoped="" ref="0x405e7398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405fea08" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405fea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405fd5b0"/>
        <function-ref name="clear" scoped="" ref="0x405fd960"/>
        <function-ref name="isValid" scoped="" ref="0x405fd200"/>
        <function-ref name="set" scoped="" ref="0x405fdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x405e6608" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x405e6608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405e67e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40602df0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40602df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40601010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x405e8578" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x405e8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405e8750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x4061f860" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x4061f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4061fa38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x4061e1d8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4061e1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x4061e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x406268a8" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x406268a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40626a80"/>
        <function-ref name="checkFrame" scoped="" ref="0x40626b60"/>
        <function-ref name="source" scoped="" ref="0x40626c40"/>
        <function-ref name="destination" scoped="" ref="0x40626d20"/>
        <function-ref name="setSource" scoped="" ref="0x40626e00"/>
        <function-ref name="setDestination" scoped="" ref="0x40626ee0"/>
        <function-ref name="setGroup" scoped="" ref="0x4061f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40619e40" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40619e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40605050"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40605130"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40605210"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x406052f0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x406053d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40636770" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40636770"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40636948"/>
        <function-ref name="wait" scoped="" ref="0x40636a28"/>
        <function-ref name="cancel" scoped="" ref="0x40636b08"/>
        <function-ref name="isFree" scoped="" ref="0x40636be8"/>
        <function-ref name="getNow" scoped="" ref="0x40636cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x40632938" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x40632938"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40632b10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40632bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40632cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40632db0"/>
        <function-ref name="headerLength" scoped="" ref="0x40632e90"/>
        <function-ref name="metadataLength" scoped="" ref="0x40625010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x406253a0" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x406253a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40625f20"/>
        <function-ref name="clear" scoped="" ref="0x406382e8"/>
        <function-ref name="isValid" scoped="" ref="0x40625b70"/>
        <function-ref name="set" scoped="" ref="0x40638698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x40606958" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x40606958"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40606b30"/>
        <function-ref name="headerLength" scoped="" ref="0x40606c10"/>
        <function-ref name="metadataLength" scoped="" ref="0x40606cf0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40606dd0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40606eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x4060e3e0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x4060e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x4060e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40613d30" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40613d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40613f08"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40608010"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406080f0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x406081d0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x406082b0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40608390"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40608470"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40608550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x406392c8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406392c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406394a0"/>
        <function-ref name="getDSN" scoped="" ref="0x40639580"/>
        <function-ref name="setFCF" scoped="" ref="0x40639660"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40639740"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40639820"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40639900"/>
        <function-ref name="setDSN" scoped="" ref="0x406399e0"/>
        <function-ref name="createAckReply" scoped="" ref="0x40639ac0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40639ba0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40639c80"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40639d60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40639e40"/>
        <function-ref name="localAddr" scoped="" ref="0x40639f20"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40618098"/>
        <function-ref name="localPan" scoped="" ref="0x40618178"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40618258"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40618338"/>
        <function-ref name="setFramePending" scoped="" ref="0x40618418"/>
        <function-ref name="setDestPan" scoped="" ref="0x406184f8"/>
        <function-ref name="isForMe" scoped="" ref="0x406185d8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406186b8"/>
        <function-ref name="getFCF" scoped="" ref="0x40618798"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40618878"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40618958"/>
        <function-ref name="getFramePending" scoped="" ref="0x40618a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x4060f410" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4060f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4060f5e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4060f6c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4060f7a8"/>
        <function-ref name="getSender" scoped="" ref="0x4060f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x4061c2c0" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4061c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4061c498"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4061c578"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4061c658"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4061c738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40669108" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40669108"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406692f0"/>
        <function-ref name="wait" scoped="" ref="0x406693d0"/>
        <function-ref name="cancel" scoped="" ref="0x406694b0"/>
        <function-ref name="isFree" scoped="" ref="0x40669590"/>
        <function-ref name="getNow" scoped="" ref="0x40669670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406699c0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406699c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403527d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403527d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x405369d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40693e70"/>
        <function-ref name="fired" scoped="" ref="0x40693640"/>
        <function-ref name="startAt" scoped="" ref="0x40693b30"/>
        <function-ref name="isRunning" scoped="" ref="0x406938b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40692110"/>
        <function-ref name="start" scoped="" ref="0x40693128"/>
        <function-ref name="stop" scoped="" ref="0x406933c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x410390c8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x410390c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410392b0"/>
        <function-ref name="wait" scoped="" ref="0x41039390"/>
        <function-ref name="cancel" scoped="" ref="0x41039470"/>
        <function-ref name="isFree" scoped="" ref="0x41039550"/>
        <function-ref name="getNow" scoped="" ref="0x41039630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x410398c0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410398c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x405369d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41038d90"/>
        <function-ref name="fired" scoped="" ref="0x41038560"/>
        <function-ref name="startAt" scoped="" ref="0x41038a50"/>
        <function-ref name="isRunning" scoped="" ref="0x410387d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x41036048"/>
        <function-ref name="start" scoped="" ref="0x41038048"/>
        <function-ref name="stop" scoped="" ref="0x410382e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41036258" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41036258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41036430"/>
        <function-ref name="suspend" scoped="" ref="0x41036510"/>
        <function-ref name="resume" scoped="" ref="0x410365f0"/>
        <function-ref name="run" scoped="" ref="0x410366d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tasklet" ref="0x406965f8" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tasklet" scoped="" ref="0x406965f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406967d0"/>
        <function-ref name="runTask" scoped="" ref="0x406968b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40686a50" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40686a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40686c28"/>
        <function-ref name="suspend" scoped="" ref="0x40686d08"/>
        <function-ref name="resume" scoped="" ref="0x40686de8"/>
        <function-ref name="run" scoped="" ref="0x40686ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406f5f20" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406f5f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f4110"/>
        <function-ref name="cancel" scoped="" ref="0x406f41f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406f42d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x406f4430" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x406f4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406f4608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406f6c28" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406f6c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406f6e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406f75b0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406f75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406f7788"/>
        <function-ref name="payloadLength" scoped="" ref="0x406f7868"/>
        <function-ref name="getPayload" scoped="" ref="0x406f7948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f7a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406f7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406f7ce0" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406f7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f7ec8"/>
        <function-ref name="getPayload" scoped="" ref="0x406f6010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f60f0"/>
        <function-ref name="cancel" scoped="" ref="0x406f61d0"/>
        <function-ref name="sendDone" scoped="" ref="0x406f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406f6868" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406f6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406f6a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x406f5788" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x406f5788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406f5960"/>
        <function-ref name="payloadLength" scoped="" ref="0x406f5a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f5b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406f5c00"/>
        <function-ref name="headerLength" scoped="" ref="0x406f5ce0"/>
        <function-ref name="metadataLength" scoped="" ref="0x406f5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x406f4768" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x406f4768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406f4940"/>
        <function-ref name="checkFrame" scoped="" ref="0x406f4a20"/>
        <function-ref name="source" scoped="" ref="0x406f4b00"/>
        <function-ref name="destination" scoped="" ref="0x406f4be0"/>
        <function-ref name="setSource" scoped="" ref="0x406f4cc0"/>
        <function-ref name="setDestination" scoped="" ref="0x406f4da0"/>
        <function-ref name="setGroup" scoped="" ref="0x406f4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406f6488" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406f6488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406f6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406f5030" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406f5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406f5218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406f8940" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406f8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406f8b18"/>
        <function-ref name="source" scoped="" ref="0x406f8bf8"/>
        <function-ref name="address" scoped="" ref="0x406f8cd8"/>
        <function-ref name="destination" scoped="" ref="0x406f8db8"/>
        <function-ref name="setSource" scoped="" ref="0x406f8e98"/>
        <function-ref name="setDestination" scoped="" ref="0x406f7010"/>
        <function-ref name="type" scoped="" ref="0x406f70f0"/>
        <function-ref name="setType" scoped="" ref="0x406f71d0"/>
        <function-ref name="isForMe" scoped="" ref="0x406f72b0"/>
        <function-ref name="setGroup" scoped="" ref="0x406f7390"/>
        <function-ref name="localGroup" scoped="" ref="0x406f7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406f5410" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406f5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406f55f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41066030" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41066030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41066208"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41067b20" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41067b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41067cf8"/>
        <function-ref name="cancel" scoped="" ref="0x41067dd8"/>
        <function-ref name="sendDone" scoped="" ref="0x41067eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x410687b0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x410687b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x41068998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41069150" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41069150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41069328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41069408"/>
        <function-ref name="getPayload" scoped="" ref="0x410694e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410695c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410696a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41069880" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41069880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41069a68"/>
        <function-ref name="getPayload" scoped="" ref="0x41069b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41069c28"/>
        <function-ref name="cancel" scoped="" ref="0x41069d08"/>
        <function-ref name="sendDone" scoped="" ref="0x41069de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x410683f0" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x410683f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410685d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41070d20" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41070d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41070ef8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4106a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4106a0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4106a1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x4106a2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4106a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41066368" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41066368"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410665c0"/>
        <function-ref name="checkFrame" scoped="" ref="0x410666a0"/>
        <function-ref name="source" scoped="" ref="0x41066780"/>
        <function-ref name="destination" scoped="" ref="0x41066860"/>
        <function-ref name="setSource" scoped="" ref="0x41066940"/>
        <function-ref name="setDestination" scoped="" ref="0x41066a20"/>
        <function-ref name="setGroup" scoped="" ref="0x41066b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x41066c40" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41066c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x41066e18"/>
        <function-ref name="changed" scoped="" ref="0x41066ef8"/>
        <function-ref name="amGroup" scoped="" ref="0x41065010"/>
        <function-ref name="setAddress" scoped="" ref="0x410650f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41067388" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41067388"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41067560"/>
        <function-ref name="payloadLength" scoped="" ref="0x41067640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41067720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41067800"/>
        <function-ref name="headerLength" scoped="" ref="0x410678e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x410679c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41068010" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41068010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410681f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x41068b90" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x41068b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41068d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4106a4d0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4106a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4106a6a8"/>
        <function-ref name="source" scoped="" ref="0x4106a788"/>
        <function-ref name="address" scoped="" ref="0x4106a868"/>
        <function-ref name="destination" scoped="" ref="0x4106a948"/>
        <function-ref name="setSource" scoped="" ref="0x4106aa28"/>
        <function-ref name="setDestination" scoped="" ref="0x4106ab08"/>
        <function-ref name="type" scoped="" ref="0x4106abe8"/>
        <function-ref name="setType" scoped="" ref="0x4106acc8"/>
        <function-ref name="isForMe" scoped="" ref="0x4106ada8"/>
        <function-ref name="setGroup" scoped="" ref="0x4106ae88"/>
        <function-ref name="localGroup" scoped="" ref="0x41069010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x41067010" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x41067010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410671f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x406ddd68" loc="54:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406ddd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x406ee010"/>
        <function-ref name="changed" scoped="" ref="0x406ee0f0"/>
        <function-ref name="amGroup" scoped="" ref="0x406ee1d0"/>
        <function-ref name="setAddress" scoped="" ref="0x406ee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40702a60" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40702a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40702c38"/>
        <function-ref name="cancel" scoped="" ref="0x40702d18"/>
        <function-ref name="sendDone" scoped="" ref="0x40702df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40701010" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40701010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407011e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407012c8"/>
        <function-ref name="request" scoped="" ref="0x407013a8"/>
        <function-ref name="granted" scoped="" ref="0x40701488"/>
        <function-ref name="isOwner" scoped="" ref="0x40701568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40702538" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40702538"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40702710"/>
        <function-ref name="cancel" scoped="" ref="0x407027f0"/>
        <function-ref name="sendDone" scoped="" ref="0x407028d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4070bcb0" loc="86:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4070bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4070be98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40743010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40743600" loc="89:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40743600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x407437e8"/>
        <function-ref name="configure" scoped="" ref="0x407438c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4070b570" loc="85:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4070b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4070b758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4070b838"/>
        <function-ref name="request" scoped="" ref="0x4070b918"/>
        <function-ref name="granted" scoped="" ref="0x4070b9f8"/>
        <function-ref name="isOwner" scoped="" ref="0x4070bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40743150" loc="87:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40743150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40743328"/>
        <function-ref name="userId" scoped="" ref="0x40743408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41074cb8" loc="44:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41074cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41074e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x410ad010" loc="45:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x410ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410ad1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x410ad2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410ad3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x410ad488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410ab750" loc="52:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410ab750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410ab938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410aba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410aa030" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410aa030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410aa218"/>
        <function-ref name="configure" scoped="" ref="0x410aa2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x410aa458" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410aa458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410aa630"/>
        <function-ref name="isEmpty" scoped="" ref="0x410aa710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410aa7f0"/>
        <function-ref name="dequeue" scoped="" ref="0x410aa8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410ab010" loc="51:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410ab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410ab1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410ab2d8"/>
        <function-ref name="request" scoped="" ref="0x410ab3b8"/>
        <function-ref name="granted" scoped="" ref="0x410ab498"/>
        <function-ref name="isOwner" scoped="" ref="0x410ab578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410abb58" loc="53:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410abb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410abd30"/>
        <function-ref name="userId" scoped="" ref="0x410abe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x410aaa50" loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x410aaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410aac28"/>
        <function-ref name="runTask" scoped="" ref="0x410aad08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407659e8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407659e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40765bc0"/>
        <function-ref name="cancel" scoped="" ref="0x40765ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x40765d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40765ee0" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40765ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407640e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40752488" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40752488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40752660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407403b0" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407403b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40740588"/>
        <function-ref name="payloadLength" scoped="" ref="0x40740668"/>
        <function-ref name="getPayload" scoped="" ref="0x40740748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40740828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40740908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40765250" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40765250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40765428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40765508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407655e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407656c8"/>
        <function-ref name="headerLength" scoped="" ref="0x407657a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40765888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x407527d0" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407527d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x407529a8"/>
        <function-ref name="getDSN" scoped="" ref="0x40752a88"/>
        <function-ref name="setFCF" scoped="" ref="0x40752b68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40752c48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40752d28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40752e08"/>
        <function-ref name="setDSN" scoped="" ref="0x40752ee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x40766010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x407660f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407661d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407662b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40766390"/>
        <function-ref name="localAddr" scoped="" ref="0x40766470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407665d0"/>
        <function-ref name="localPan" scoped="" ref="0x407666b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40766790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40766870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40766950"/>
        <function-ref name="setDestPan" scoped="" ref="0x40766a30"/>
        <function-ref name="isForMe" scoped="" ref="0x40766b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40766bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40766cd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40766db0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40766e90"/>
        <function-ref name="getFramePending" scoped="" ref="0x40765010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40740a48" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40740a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40740c20"/>
        <function-ref name="getPayload" scoped="" ref="0x40740d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40740de0"/>
        <function-ref name="cancel" scoped="" ref="0x40740ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x40752010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40752170" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40752170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40752348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40784280" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40784280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40784458"/>
        <function-ref name="cancel" scoped="" ref="0x40784538"/>
        <function-ref name="sendDone" scoped="" ref="0x40784618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40784778" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40784778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40784950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40761a58" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40761a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40761c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40761d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40761df0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40761ed0"/>
        <function-ref name="headerLength" scoped="" ref="0x40760010"/>
        <function-ref name="metadataLength" scoped="" ref="0x407600f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x40760748" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x40760748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40760920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40784ab0" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40784ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40784c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x40784d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40784e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40784f28"/>
        <function-ref name="headerLength" scoped="" ref="0x40783018"/>
        <function-ref name="metadataLength" scoped="" ref="0x407830f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x40760250" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x40760250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40760428"/>
        <function-ref name="cancel" scoped="" ref="0x40760508"/>
        <function-ref name="sendDone" scoped="" ref="0x407605e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40761228" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40761228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40761400"/>
        <function-ref name="cancel" scoped="" ref="0x407614e0"/>
        <function-ref name="sendDone" scoped="" ref="0x407615c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40761720" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40761720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407618f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40760a80" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40760a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40760c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40760d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40760e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40760ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x40784010"/>
        <function-ref name="metadataLength" scoped="" ref="0x407840f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x407d5170" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407d5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x407d5348"/>
        <function-ref name="address" scoped="" ref="0x407d5428"/>
        <function-ref name="destination" scoped="" ref="0x407d5508"/>
        <function-ref name="setSource" scoped="" ref="0x407d55e8"/>
        <function-ref name="setDestination" scoped="" ref="0x407d56c8"/>
        <function-ref name="pan" scoped="" ref="0x407d57a8"/>
        <function-ref name="setPan" scoped="" ref="0x407d5888"/>
        <function-ref name="isForMe" scoped="" ref="0x407d5968"/>
        <function-ref name="localPan" scoped="" ref="0x407d5a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x407d5b88" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407d5b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d5d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d5e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d5f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d4018"/>
        <function-ref name="headerLength" scoped="" ref="0x407d40f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x407d41d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x407d7658" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407d7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x407d7830"/>
        <function-ref name="getDSN" scoped="" ref="0x407d7910"/>
        <function-ref name="setFCF" scoped="" ref="0x407d79f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407d7ad0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407d7bb0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407d7c90"/>
        <function-ref name="setDSN" scoped="" ref="0x407d7d70"/>
        <function-ref name="createAckReply" scoped="" ref="0x407d7e50"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x407d6010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407d60f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407d61d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407d62b0"/>
        <function-ref name="localAddr" scoped="" ref="0x407d6390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407d64f0"/>
        <function-ref name="localPan" scoped="" ref="0x407d65d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407d66b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x407d6790"/>
        <function-ref name="setFramePending" scoped="" ref="0x407d6870"/>
        <function-ref name="setDestPan" scoped="" ref="0x407d6950"/>
        <function-ref name="isForMe" scoped="" ref="0x407d6a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x407d6b10"/>
        <function-ref name="getFCF" scoped="" ref="0x407d6bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407d6cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407d6db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x407d6e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407d4368" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407d4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d4540"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d4620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d4700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d47e0"/>
        <function-ref name="headerLength" scoped="" ref="0x407d48c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x407d49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x410e96b0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x410e96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x410e9888"/>
        <function-ref name="address" scoped="" ref="0x410e9968"/>
        <function-ref name="destination" scoped="" ref="0x410e9a48"/>
        <function-ref name="setSource" scoped="" ref="0x410e9b28"/>
        <function-ref name="setDestination" scoped="" ref="0x410e9c08"/>
        <function-ref name="pan" scoped="" ref="0x410e9ce8"/>
        <function-ref name="setPan" scoped="" ref="0x410e9dc8"/>
        <function-ref name="isForMe" scoped="" ref="0x410e9ea8"/>
        <function-ref name="localPan" scoped="" ref="0x410e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x410e8150" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x410e8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410e8328"/>
        <function-ref name="payloadLength" scoped="" ref="0x410e8408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e84e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410e85c8"/>
        <function-ref name="headerLength" scoped="" ref="0x410e86a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x410e8788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x410b4bc0" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x410b4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x410b4d98"/>
        <function-ref name="getDSN" scoped="" ref="0x410b4e78"/>
        <function-ref name="setFCF" scoped="" ref="0x410ae010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x410ae0f0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x410ae1d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x410ae2b0"/>
        <function-ref name="setDSN" scoped="" ref="0x410ae390"/>
        <function-ref name="createAckReply" scoped="" ref="0x410ae470"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x410ae550"/>
        <function-ref name="isDataFrame" scoped="" ref="0x410ae630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x410ae710"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x410ae7f0"/>
        <function-ref name="localAddr" scoped="" ref="0x410ae8d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x410aea30"/>
        <function-ref name="localPan" scoped="" ref="0x410aeb10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x410aebf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x410aecd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x410aedb0"/>
        <function-ref name="setDestPan" scoped="" ref="0x410aee90"/>
        <function-ref name="isForMe" scoped="" ref="0x410e9010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x410e90f0"/>
        <function-ref name="getFCF" scoped="" ref="0x410e91d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x410e92b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x410e9390"/>
        <function-ref name="getFramePending" scoped="" ref="0x410e9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x410e88f8" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x410e88f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x410e8ad0"/>
        <function-ref name="changed" scoped="" ref="0x410e8bb0"/>
        <function-ref name="amGroup" scoped="" ref="0x410e8c90"/>
        <function-ref name="setAddress" scoped="" ref="0x410e8d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x410e8ed0" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x410e8ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410e70c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410e71a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e7280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410e7360"/>
        <function-ref name="headerLength" scoped="" ref="0x410e7440"/>
        <function-ref name="metadataLength" scoped="" ref="0x410e7520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407d1808" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407d1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d19e0"/>
        <function-ref name="cancel" scoped="" ref="0x407d1ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x407d1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407d1d00" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407d1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d1ed8"/>
        <function-ref name="header" scoped="" ref="0x40811010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407d2ed8" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407d2ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d10c0"/>
        <function-ref name="cancel" scoped="" ref="0x407d11a0"/>
        <function-ref name="sendDone" scoped="" ref="0x407d1280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40811170" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40811170"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40811348"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40811428"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40811508"/>
        <function-ref name="getSender" scoped="" ref="0x408115e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x407d13c0" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x407d13c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d1598"/>
        <function-ref name="header" scoped="" ref="0x407d1678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x410f9a70" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x410f9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410f9c48"/>
        <function-ref name="cancel" scoped="" ref="0x410f9d28"/>
        <function-ref name="sendDone" scoped="" ref="0x410f9e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x410f8010" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x410f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410f81e8"/>
        <function-ref name="header" scoped="" ref="0x410f82c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x410f6070" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410f6070"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410f6248"/>
        <function-ref name="clearAll" scoped="" ref="0x410f6328"/>
        <function-ref name="get" scoped="" ref="0x410f6408"/>
        <function-ref name="set" scoped="" ref="0x410f64e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410fcd90" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410fcd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410f9010"/>
        <function-ref name="cancel" scoped="" ref="0x410f90f0"/>
        <function-ref name="sendDone" scoped="" ref="0x410f91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x410f89c0" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x410f89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x410f8b98"/>
        <function-ref name="insertNode" scoped="" ref="0x410f8c78"/>
        <function-ref name="getNode" scoped="" ref="0x410f8d58"/>
        <function-ref name="evicted" scoped="" ref="0x410f8e38"/>
        <function-ref name="getIndex" scoped="" ref="0x410f8f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x410f9310" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x410f9310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410f94e8"/>
        <function-ref name="header" scoped="" ref="0x410f95c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410f9708" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410f9708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410f98e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x410f8408" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x410f8408"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x410f85e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x410f86c0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x410f87a0"/>
        <function-ref name="getSender" scoped="" ref="0x410f8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x407fc360" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x407fc360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x407fc538"/>
        <function-ref name="insertNode" scoped="" ref="0x407fc618"/>
        <function-ref name="getNode" scoped="" ref="0x407fc6f8"/>
        <function-ref name="evicted" scoped="" ref="0x407fc7d8"/>
        <function-ref name="getIndex" scoped="" ref="0x407fc8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x407f7dd0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x407f7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f6010"/>
        <function-ref name="clearAll" scoped="" ref="0x407f60f0"/>
        <function-ref name="get" scoped="" ref="0x407f61d0"/>
        <function-ref name="set" scoped="" ref="0x407f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x407f73a8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x407f73a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x407f7580"/>
        <function-ref name="insertNode" scoped="" ref="0x407f7660"/>
        <function-ref name="getNode" scoped="" ref="0x407f7740"/>
        <function-ref name="evicted" scoped="" ref="0x407f7820"/>
        <function-ref name="getIndex" scoped="" ref="0x407f7900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407f7010" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407f71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x410f54c0" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410f54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410f5698"/>
        <function-ref name="clearAll" scoped="" ref="0x410f5778"/>
        <function-ref name="get" scoped="" ref="0x410f5858"/>
        <function-ref name="set" scoped="" ref="0x410f5938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40822010" loc="85:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40822010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408221e8"/>
        <function-ref name="cancel" scoped="" ref="0x408222c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408223a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40822508" loc="86:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40822508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408226e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x40821c00" loc="93:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40821c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40821dd8"/>
        <function-ref name="noAck" scoped="" ref="0x40821eb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4081f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4080f8f8" loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4080f8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4080fad0"/>
        <function-ref name="cancel" scoped="" ref="0x4080fbb0"/>
        <function-ref name="sendDone" scoped="" ref="0x4080fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4080e7e8" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4080e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4080e9c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4080eaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4080eb80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4080ec60"/>
        <function-ref name="headerLength" scoped="" ref="0x4080ed40"/>
        <function-ref name="metadataLength" scoped="" ref="0x4080ee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40822840" loc="87:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40822840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40822a18"/>
        <function-ref name="payloadLength" scoped="" ref="0x40822af8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40822bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40822cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x40822d98"/>
        <function-ref name="metadataLength" scoped="" ref="0x40822e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40821528" loc="92:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40821528"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40821700"/>
        <function-ref name="setRetries" scoped="" ref="0x408217e0"/>
        <function-ref name="getRetries" scoped="" ref="0x408218c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408219a0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40821a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4080fdf0" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4080fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4080e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40821010" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40821010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408211e8"/>
        <function-ref name="noAck" scoped="" ref="0x408212c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408213a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4080e150" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4080e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4080e328"/>
        <function-ref name="setRetries" scoped="" ref="0x4080e408"/>
        <function-ref name="getRetries" scoped="" ref="0x4080e4e8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4080e5c8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4080e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4081c728" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4081c728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4081c900"/>
        <function-ref name="stopDone" scoped="" ref="0x4081c9e0"/>
        <function-ref name="start" scoped="" ref="0x4081cac0"/>
        <function-ref name="stop" scoped="" ref="0x4081cba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4082a938" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4082a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4082ab10"/>
        <function-ref name="cancel" scoped="" ref="0x4082abf0"/>
        <function-ref name="sendDone" scoped="" ref="0x4082acd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4082ae30" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4082ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40828050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4081cd00" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4081cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4081ced8"/>
        <function-ref name="cancel" scoped="" ref="0x4081b010"/>
        <function-ref name="sendDone" scoped="" ref="0x4081b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4081b568" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4081b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081b740"/>
        <function-ref name="payloadLength" scoped="" ref="0x4081b820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4081b900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4081b9e0"/>
        <function-ref name="headerLength" scoped="" ref="0x4081bac0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4081bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4081bce0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4081bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4081beb8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4082a010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4082a0f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4082a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4082a360" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4082a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4082a538"/>
        <function-ref name="stopDone" scoped="" ref="0x4082a618"/>
        <function-ref name="start" scoped="" ref="0x4082a6f8"/>
        <function-ref name="stop" scoped="" ref="0x4082a7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4081b250" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4081b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4081b428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408281b0" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408281b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40828388"/>
        <function-ref name="payloadLength" scoped="" ref="0x40828468"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40828548"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40828628"/>
        <function-ref name="headerLength" scoped="" ref="0x40828708"/>
        <function-ref name="metadataLength" scoped="" ref="0x408287e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41122e80" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41122e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4111e070"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4111e150"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4111e230"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4111e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4083fd98" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4083fd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4083e010"/>
        <function-ref name="stopDone" scoped="" ref="0x4083e0f0"/>
        <function-ref name="start" scoped="" ref="0x4083e1d0"/>
        <function-ref name="stop" scoped="" ref="0x4083e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4086a180" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4086a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4086a358"/>
        <function-ref name="turnOn" scoped="" ref="0x4086a438"/>
        <function-ref name="setChannel" scoped="" ref="0x4086a518"/>
        <function-ref name="done" scoped="" ref="0x4086a5f8"/>
        <function-ref name="standby" scoped="" ref="0x4086a6d8"/>
        <function-ref name="getChannel" scoped="" ref="0x4086a7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4083e410" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4083e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4083e5e8"/>
        <function-ref name="cancel" scoped="" ref="0x4083e6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4083e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x4086add0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4086add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40869010"/>
        <function-ref name="header" scoped="" ref="0x408690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4083e908" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4083e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4086a8f8" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4086a8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4086aad0"/>
        <function-ref name="ready" scoped="" ref="0x4086abb0"/>
        <function-ref name="sendDone" scoped="" ref="0x4086ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4083ec20" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4083ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4083edf8"/>
        <function-ref name="setChannel" scoped="" ref="0x4083eed8"/>
        <function-ref name="getChannel" scoped="" ref="0x4086a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4111a1e0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4111a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4111a3b8"/>
        <function-ref name="stopDone" scoped="" ref="0x4111a498"/>
        <function-ref name="start" scoped="" ref="0x4111a578"/>
        <function-ref name="stop" scoped="" ref="0x4111a658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x4111a7b8" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4111a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4111a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x41119830" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x41119830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x41119a08"/>
        <function-ref name="turnOn" scoped="" ref="0x41119ae8"/>
        <function-ref name="setChannel" scoped="" ref="0x41119bc8"/>
        <function-ref name="done" scoped="" ref="0x41119ca8"/>
        <function-ref name="standby" scoped="" ref="0x41119d88"/>
        <function-ref name="getChannel" scoped="" ref="0x41119e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4111aaf0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4111aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4111acc8"/>
        <function-ref name="cancel" scoped="" ref="0x4111ada8"/>
        <function-ref name="sendDone" scoped="" ref="0x4111ae88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41117320" loc="189:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41117320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411174f8"/>
        <function-ref name="runTask" scoped="" ref="0x411175d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41118aa0" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41118aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41118c78"/>
        <function-ref name="header" scoped="" ref="0x41118d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x41117758" loc="144:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x41117758"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41117930"/>
        <function-ref name="runTask" scoped="" ref="0x41117a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41119010" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41119010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411191e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41118ed8" loc="322:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41118ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411170c0"/>
        <function-ref name="runTask" scoped="" ref="0x411171a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x411185c8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x411185c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411187a0"/>
        <function-ref name="ready" scoped="" ref="0x41118880"/>
        <function-ref name="sendDone" scoped="" ref="0x41118960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41119328" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41119328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41119500"/>
        <function-ref name="setChannel" scoped="" ref="0x411195e0"/>
        <function-ref name="getChannel" scoped="" ref="0x411196c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41118010" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41118010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x411181e8"/>
        <function-ref name="suspend" scoped="" ref="0x411182c8"/>
        <function-ref name="resume" scoped="" ref="0x411183a8"/>
        <function-ref name="run" scoped="" ref="0x41118488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40880e58" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40880e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40896050"/>
        <function-ref name="ready" scoped="" ref="0x40896130"/>
        <function-ref name="sendDone" scoped="" ref="0x40896210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40896370" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40896370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40896548"/>
        <function-ref name="header" scoped="" ref="0x40896628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40896768" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40896768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40896940"/>
        <function-ref name="wait" scoped="" ref="0x40896a20"/>
        <function-ref name="cancel" scoped="" ref="0x40896b00"/>
        <function-ref name="isFree" scoped="" ref="0x40896be0"/>
        <function-ref name="getNow" scoped="" ref="0x40896cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40896e20" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40896e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408ac010"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408ac0f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408ac1d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40880a10" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40880a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40880be8"/>
        <function-ref name="header" scoped="" ref="0x40880cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40880538" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40880538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40880710"/>
        <function-ref name="ready" scoped="" ref="0x408807f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408808d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41136808" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41136808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411369e0"/>
        <function-ref name="ready" scoped="" ref="0x41136ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x41136ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41136d00" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41136d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41136ed8"/>
        <function-ref name="header" scoped="" ref="0x41135010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x41135150" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x41135150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41135328"/>
        <function-ref name="wait" scoped="" ref="0x41135408"/>
        <function-ref name="cancel" scoped="" ref="0x411354e8"/>
        <function-ref name="isFree" scoped="" ref="0x411355c8"/>
        <function-ref name="getNow" scoped="" ref="0x411356a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x411357e8" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x411357e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x411359c0"/>
        <function-ref name="rand32" scoped="" ref="0x41135aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41135c00" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41135c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x41135dd8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x41135eb8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x41134010"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x411340f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x411363c0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x411363c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41136598"/>
        <function-ref name="header" scoped="" ref="0x41136678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x41139ea0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x41139ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411360c0"/>
        <function-ref name="ready" scoped="" ref="0x411361a0"/>
        <function-ref name="sendDone" scoped="" ref="0x41136280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x41134270" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x41134270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41134448"/>
        <function-ref name="runTask" scoped="" ref="0x41134528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40894948" loc="46:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40894948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40894b20"/>
        <function-ref name="rand32" scoped="" ref="0x40894c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40894088" loc="45:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40894088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408946b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40898dc0" loc="44:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40898dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40895010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x408ab478" loc="48:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x408ab478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x408ab650"/>
        <function-ref name="rand32" scoped="" ref="0x408ab730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40892b18" loc="47:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40892b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408ab1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408925f8" loc="46:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408925f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408927d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408a2e98" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408a2e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a10c0"/>
        <function-ref name="ready" scoped="" ref="0x408a11a0"/>
        <function-ref name="sendDone" scoped="" ref="0x408a1280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408a13e0" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408a13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a15b8"/>
        <function-ref name="header" scoped="" ref="0x408a1698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x408a17d8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408a17d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408a19b0"/>
        <function-ref name="wait" scoped="" ref="0x408a1a90"/>
        <function-ref name="cancel" scoped="" ref="0x408a1b70"/>
        <function-ref name="isFree" scoped="" ref="0x408a1c50"/>
        <function-ref name="getNow" scoped="" ref="0x408a1d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x408be800" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x408be800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408be9d8"/>
        <function-ref name="get" scoped="" ref="0x408beab8"/>
        <function-ref name="setValue" scoped="" ref="0x408beb98"/>
        <function-ref name="set" scoped="" ref="0x408bec78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408a1e90" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408a1e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x408be080"/>
        <function-ref name="createAckPacket" scoped="" ref="0x408be160"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408be240"/>
        <function-ref name="isAckPacket" scoped="" ref="0x408be320"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x408be400"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x408be4e0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408be5c0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408be6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408a2578" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408a2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a2750"/>
        <function-ref name="header" scoped="" ref="0x408a2830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408a20a0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408a20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a2278"/>
        <function-ref name="ready" scoped="" ref="0x408a2358"/>
        <function-ref name="sendDone" scoped="" ref="0x408a2438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408a2970" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408a2b48"/>
        <function-ref name="noAck" scoped="" ref="0x408a2c28"/>
        <function-ref name="wasAcked" scoped="" ref="0x408a2d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408d5d28" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408d5d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408d5f00"/>
        <function-ref name="stopDone" scoped="" ref="0x408cb010"/>
        <function-ref name="start" scoped="" ref="0x408cb0f0"/>
        <function-ref name="stop" scoped="" ref="0x408cb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x408cabe0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x408cabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408cadb8"/>
        <function-ref name="request" scoped="" ref="0x408cae98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408e2250" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408e2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e2428"/>
        <function-ref name="ready" scoped="" ref="0x408e2508"/>
        <function-ref name="sendDone" scoped="" ref="0x408e25e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408e2748" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408e2748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e2920"/>
        <function-ref name="header" scoped="" ref="0x408e2a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x408cbb00" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408cbb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408cbcd8"/>
        <function-ref name="turnOn" scoped="" ref="0x408cbdb8"/>
        <function-ref name="setChannel" scoped="" ref="0x408cbe98"/>
        <function-ref name="done" scoped="" ref="0x408ca010"/>
        <function-ref name="standby" scoped="" ref="0x408ca0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x408ca1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408c9010" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408c91e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408c92c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c93a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408c9488"/>
        <function-ref name="headerLength" scoped="" ref="0x408c9568"/>
        <function-ref name="metadataLength" scoped="" ref="0x408c9648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408e49a0" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408e49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408e4bf8"/>
        <function-ref name="turnOn" scoped="" ref="0x408e4cd8"/>
        <function-ref name="setChannel" scoped="" ref="0x408e4db8"/>
        <function-ref name="done" scoped="" ref="0x408e4e98"/>
        <function-ref name="standby" scoped="" ref="0x408e2010"/>
        <function-ref name="getChannel" scoped="" ref="0x408e20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x408c97a8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x408c97a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408c9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408ca7e8" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408ca7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ca9c0"/>
        <function-ref name="header" scoped="" ref="0x408caaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x408e4668" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x408e4668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e4840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408c9b10" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408c9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408c9ce8"/>
        <function-ref name="stopDone" scoped="" ref="0x408c9dc8"/>
        <function-ref name="start" scoped="" ref="0x408c9ea8"/>
        <function-ref name="stop" scoped="" ref="0x408e4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408e1010" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e11e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408e12c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e13a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408e1488"/>
        <function-ref name="headerLength" scoped="" ref="0x408e1568"/>
        <function-ref name="metadataLength" scoped="" ref="0x408e1648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x408cb7e8" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x408cb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408e17a8" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408e17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408e1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x408e4170" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x408e4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e4348"/>
        <function-ref name="cancel" scoped="" ref="0x408e4428"/>
        <function-ref name="sendDone" scoped="" ref="0x408e4508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408ca310" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408ca310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ca4e8"/>
        <function-ref name="ready" scoped="" ref="0x408ca5c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408ca6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x408e2b60" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x408e2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408e2d38"/>
        <function-ref name="request" scoped="" ref="0x408e2e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x408cb310" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x408cb310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408cb4e8"/>
        <function-ref name="cancel" scoped="" ref="0x408cb5c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408cb6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40a12170" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40a12170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a12348"/>
        <function-ref name="get" scoped="" ref="0x40a12428"/>
        <function-ref name="setValue" scoped="" ref="0x40a12508"/>
        <function-ref name="set" scoped="" ref="0x40a125e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a14830" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a14830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a14a08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a14ae8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a14bc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a14ca8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a14d88"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a14e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a13938" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a13938"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a13b10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a13bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a13cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a13db0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a13e90"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a12010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40a151b0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a151b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a15cb0"/>
        <function-ref name="clear" scoped="" ref="0x40a14088"/>
        <function-ref name="isValid" scoped="" ref="0x40a15900"/>
        <function-ref name="set" scoped="" ref="0x40a14438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40a130c0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a13708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408dd9c8" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408dd9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409054d8"/>
        <function-ref name="clear" scoped="" ref="0x40905888"/>
        <function-ref name="isValid" scoped="" ref="0x40905128"/>
        <function-ref name="set" scoped="" ref="0x40905c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x41146640" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x41146640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41146818"/>
        <function-ref name="get" scoped="" ref="0x411468f8"/>
        <function-ref name="setValue" scoped="" ref="0x411469d8"/>
        <function-ref name="set" scoped="" ref="0x41146ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41148e40" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41148e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41146050"/>
        <function-ref name="payloadLength" scoped="" ref="0x41146130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41146210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411462f0"/>
        <function-ref name="headerLength" scoped="" ref="0x411463d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x411464b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41183e40" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41183e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41182050"/>
        <function-ref name="payloadLength" scoped="" ref="0x41182130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41182210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411822f0"/>
        <function-ref name="headerLength" scoped="" ref="0x411823d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x411824b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x411497d8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x411497d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x411482e8"/>
        <function-ref name="clear" scoped="" ref="0x41148698"/>
        <function-ref name="isValid" scoped="" ref="0x41149f28"/>
        <function-ref name="set" scoped="" ref="0x41148a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x41146ca8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x41146ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41183308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x411835c8" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x411835c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41183c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4114a010" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4114a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4114ab10"/>
        <function-ref name="clear" scoped="" ref="0x4114aec0"/>
        <function-ref name="isValid" scoped="" ref="0x4114a760"/>
        <function-ref name="set" scoped="" ref="0x411492a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40907ba8" loc="20:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40907ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40904210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40918c50" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40918c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4091d790"/>
        <function-ref name="fired" scoped="" ref="0x4091ea20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4091d150"/>
        <function-ref name="isOneShot" scoped="" ref="0x4091eed0"/>
        <function-ref name="getdt" scoped="" ref="0x4091dc40"/>
        <function-ref name="gett0" scoped="" ref="0x4091d9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x4091ec78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4091e2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4091d470"/>
        <function-ref name="startOneShot" scoped="" ref="0x4091e548"/>
        <function-ref name="stop" scoped="" ref="0x4091e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40915010" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40915010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40915658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40904aa8" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40904aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40904c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x409295c8" loc="29:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x409295c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40929d18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4092d288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4092d010"/>
        <function-ref name="overflow" scoped="" ref="0x4092d500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409146c8" loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409146c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409148a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40914c90" loc="28:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40914c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40910150"/>
        <function-ref name="fired" scoped="" ref="0x40911908"/>
        <function-ref name="startAt" scoped="" ref="0x40911df8"/>
        <function-ref name="isRunning" scoped="" ref="0x40911b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x409103c8"/>
        <function-ref name="start" scoped="" ref="0x409113f0"/>
        <function-ref name="stop" scoped="" ref="0x40911690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409af010" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409ae4e0"/>
        <function-ref name="fired" scoped="" ref="0x409afc78"/>
        <function-ref name="startAt" scoped="" ref="0x409ae1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x409afef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x409ae758"/>
        <function-ref name="start" scoped="" ref="0x409af760"/>
        <function-ref name="stop" scoped="" ref="0x409afa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40928bb8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40928bb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403525d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403525d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40928d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409aea88" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409aea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409ac200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409ac6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409ac478"/>
        <function-ref name="overflow" scoped="" ref="0x409ac968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x4116a9d0" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4116a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4116aba8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4116ac88"/>
        <function-ref name="getControlA" scoped="" ref="0x4116ad68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4116ae48"/>
        <function-ref name="setControlB" scoped="" ref="0x4116af28"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x41169018"/>
        <function-ref name="getControlB" scoped="" ref="0x411690f8"/>
        <function-ref name="setControlA" scoped="" ref="0x411691d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41171b48" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41171b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4116e068"/>
        <function-ref name="fired" scoped="" ref="0x41170820"/>
        <function-ref name="startAt" scoped="" ref="0x41170d10"/>
        <function-ref name="isRunning" scoped="" ref="0x41170a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x4116e2e0"/>
        <function-ref name="start" scoped="" ref="0x41170308"/>
        <function-ref name="stop" scoped="" ref="0x411705a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41171710" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41171710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411718e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4116e610" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4116e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4116ed60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4116d288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4116d010"/>
        <function-ref name="overflow" scoped="" ref="0x4116d500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41168dc0" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41168dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x41167010"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x411670f0"/>
        <function-ref name="controlABusy" scoped="" ref="0x411671d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x411672b0"/>
        <function-ref name="countBusy" scoped="" ref="0x41167390"/>
        <function-ref name="compareABusy" scoped="" ref="0x41167470"/>
        <function-ref name="getAssr" scoped="" ref="0x41167550"/>
        <function-ref name="setAssr" scoped="" ref="0x41167630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x411693c8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x411693c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41168918"/>
        <function-ref name="fired" scoped="" ref="0x41169f28"/>
        <function-ref name="get" scoped="" ref="0x41169a10"/>
        <function-ref name="reset" scoped="" ref="0x411681b0"/>
        <function-ref name="isOn" scoped="" ref="0x41168b90"/>
        <function-ref name="set" scoped="" ref="0x41169c88"/>
        <function-ref name="start" scoped="" ref="0x41168428"/>
        <function-ref name="stop" scoped="" ref="0x411686a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4116d7f0" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4116d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4116a288"/>
        <function-ref name="test" scoped="" ref="0x4116cd58"/>
        <function-ref name="get" scoped="" ref="0x4116de38"/>
        <function-ref name="setScale" scoped="" ref="0x4116a500"/>
        <function-ref name="getScale" scoped="" ref="0x4116a7a0"/>
        <function-ref name="reset" scoped="" ref="0x4116c5f0"/>
        <function-ref name="overflow" scoped="" ref="0x4116c378"/>
        <function-ref name="isOn" scoped="" ref="0x4116a010"/>
        <function-ref name="set" scoped="" ref="0x4116c0d8"/>
        <function-ref name="start" scoped="" ref="0x4116c868"/>
        <function-ref name="stop" scoped="" ref="0x4116cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409701a0" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409701a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40970378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40970458"/>
        <function-ref name="getControlA" scoped="" ref="0x40970538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40970618"/>
        <function-ref name="setControlB" scoped="" ref="0x409706f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409707d8"/>
        <function-ref name="getControlB" scoped="" ref="0x409708b8"/>
        <function-ref name="setControlA" scoped="" ref="0x40970998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4096d858" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4096d858"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4096da30"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4096db10"/>
        <function-ref name="controlABusy" scoped="" ref="0x4096dbf0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4096dcd0"/>
        <function-ref name="countBusy" scoped="" ref="0x4096ddb0"/>
        <function-ref name="compareABusy" scoped="" ref="0x4096de90"/>
        <function-ref name="getAssr" scoped="" ref="0x4096c010"/>
        <function-ref name="setAssr" scoped="" ref="0x4096c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40970cc0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40970cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4096d288"/>
        <function-ref name="fired" scoped="" ref="0x4096f830"/>
        <function-ref name="get" scoped="" ref="0x4096f318"/>
        <function-ref name="reset" scoped="" ref="0x4096faa8"/>
        <function-ref name="isOn" scoped="" ref="0x4096d500"/>
        <function-ref name="set" scoped="" ref="0x4096f590"/>
        <function-ref name="start" scoped="" ref="0x4096fd20"/>
        <function-ref name="stop" scoped="" ref="0x4096d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40977dd8" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40977dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40971878"/>
        <function-ref name="test" scoped="" ref="0x40971388"/>
        <function-ref name="get" scoped="" ref="0x40972468"/>
        <function-ref name="setScale" scoped="" ref="0x40971af0"/>
        <function-ref name="getScale" scoped="" ref="0x40971d90"/>
        <function-ref name="reset" scoped="" ref="0x40972bf8"/>
        <function-ref name="overflow" scoped="" ref="0x40972980"/>
        <function-ref name="isOn" scoped="" ref="0x40971600"/>
        <function-ref name="set" scoped="" ref="0x409726e0"/>
        <function-ref name="start" scoped="" ref="0x40972e70"/>
        <function-ref name="stop" scoped="" ref="0x40971110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409851a0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409851a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40985378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40985458"/>
        <function-ref name="getControlA" scoped="" ref="0x40985538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40985618"/>
        <function-ref name="setControlB" scoped="" ref="0x409856f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409857d8"/>
        <function-ref name="getControlB" scoped="" ref="0x409858b8"/>
        <function-ref name="setControlA" scoped="" ref="0x40985998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x409827b8" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x409827b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40982990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40982c18" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40982c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40982df0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40982ed0"/>
        <function-ref name="controlABusy" scoped="" ref="0x40981010"/>
        <function-ref name="controlBBusy" scoped="" ref="0x409810f0"/>
        <function-ref name="countBusy" scoped="" ref="0x409811d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x409812b0"/>
        <function-ref name="getAssr" scoped="" ref="0x40981390"/>
        <function-ref name="setAssr" scoped="" ref="0x40981470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40985cc0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40985cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40982288"/>
        <function-ref name="fired" scoped="" ref="0x40983830"/>
        <function-ref name="get" scoped="" ref="0x40983318"/>
        <function-ref name="reset" scoped="" ref="0x40983aa8"/>
        <function-ref name="isOn" scoped="" ref="0x40982500"/>
        <function-ref name="set" scoped="" ref="0x40983590"/>
        <function-ref name="start" scoped="" ref="0x40983d20"/>
        <function-ref name="stop" scoped="" ref="0x40982010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4096cde8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4096cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40986878"/>
        <function-ref name="test" scoped="" ref="0x40986388"/>
        <function-ref name="get" scoped="" ref="0x40987468"/>
        <function-ref name="setScale" scoped="" ref="0x40986af0"/>
        <function-ref name="getScale" scoped="" ref="0x40986d90"/>
        <function-ref name="reset" scoped="" ref="0x40987bf8"/>
        <function-ref name="overflow" scoped="" ref="0x40987980"/>
        <function-ref name="isOn" scoped="" ref="0x40986600"/>
        <function-ref name="set" scoped="" ref="0x409876e0"/>
        <function-ref name="start" scoped="" ref="0x40987e70"/>
        <function-ref name="stop" scoped="" ref="0x40986110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x409d2bd0" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x409d2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409d2da8"/>
        <function-ref name="runTask" scoped="" ref="0x409d2e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x409d3248" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409d3248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409d2708"/>
        <function-ref name="fired" scoped="" ref="0x409d3eb0"/>
        <function-ref name="startAt" scoped="" ref="0x409d23c8"/>
        <function-ref name="isRunning" scoped="" ref="0x409d2150"/>
        <function-ref name="getAlarm" scoped="" ref="0x409d2980"/>
        <function-ref name="start" scoped="" ref="0x409d3998"/>
        <function-ref name="stop" scoped="" ref="0x409d3c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40912f08" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40912f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409d5a18"/>
        <function-ref name="fired" scoped="" ref="0x409aacb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409d53d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x409d5180"/>
        <function-ref name="getdt" scoped="" ref="0x409d5ec8"/>
        <function-ref name="gett0" scoped="" ref="0x409d5c70"/>
        <function-ref name="isRunning" scoped="" ref="0x409aaf08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409aa558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409d56f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x409aa7d8"/>
        <function-ref name="stop" scoped="" ref="0x409aaa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40a05560" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40a05560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a05738"/>
        <function-ref name="runTask" scoped="" ref="0x40a05818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40a07338" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40a07338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a06e38"/>
        <function-ref name="fired" scoped="" ref="0x40a060f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a067f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a065a0"/>
        <function-ref name="getdt" scoped="" ref="0x40a05310"/>
        <function-ref name="gett0" scoped="" ref="0x40a050b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40a06348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a07960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a06b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a07be0"/>
        <function-ref name="stop" scoped="" ref="0x40a07e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409d0f00" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409d0f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409e9b40"/>
        <function-ref name="fired" scoped="" ref="0x409eace0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409e94e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x409e9278"/>
        <function-ref name="getdt" scoped="" ref="0x40a07048"/>
        <function-ref name="gett0" scoped="" ref="0x409e9da8"/>
        <function-ref name="isRunning" scoped="" ref="0x409e9010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409ea558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409e9810"/>
        <function-ref name="startOneShot" scoped="" ref="0x409ea7e8"/>
        <function-ref name="stop" scoped="" ref="0x409eaa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a03a88" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a03a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409fd0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x409fd448" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409fd448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409fdb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409fc0a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409fde10"/>
        <function-ref name="overflow" scoped="" ref="0x409fc320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40901d10" loc="49:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40901d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a6e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403ad010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a188a8"/>
        <function-ref name="fired" scoped="" ref="0x409f8aa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a18268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a18010"/>
        <function-ref name="getdt" scoped="" ref="0x40a18d58"/>
        <function-ref name="gett0" scoped="" ref="0x40a18b00"/>
        <function-ref name="isRunning" scoped="" ref="0x409f8d00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409f8350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a18588"/>
        <function-ref name="startOneShot" scoped="" ref="0x409f85d0"/>
        <function-ref name="stop" scoped="" ref="0x409f8850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a0e3f0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a0e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0e5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a0e6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a0e788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a0e868"/>
        <function-ref name="headerLength" scoped="" ref="0x40a0e948"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a0ea28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a0ebb8" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a0ebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0ed90"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a0ee70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a1d010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a1d0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a1d1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a1d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40a1edb8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40a1edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0e010"/>
        <function-ref name="get" scoped="" ref="0x40a0e0f0"/>
        <function-ref name="setValue" scoped="" ref="0x40a0e1d0"/>
        <function-ref name="set" scoped="" ref="0x40a0e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a1c548" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a1c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a1c720"/>
        <function-ref name="stopDone" scoped="" ref="0x40a1c800"/>
        <function-ref name="start" scoped="" ref="0x40a1c8e0"/>
        <function-ref name="stop" scoped="" ref="0x40a1c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a1a408" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a1a408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a1a5e0"/>
        <function-ref name="request" scoped="" ref="0x40a1a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a3a9c8" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a3a9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a3aba0"/>
        <function-ref name="ready" scoped="" ref="0x40a3ac80"/>
        <function-ref name="sendDone" scoped="" ref="0x40a3ad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a3aec0" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a3aec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a390c0"/>
        <function-ref name="header" scoped="" ref="0x40a391a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a1b328" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a1b328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a1b500"/>
        <function-ref name="turnOn" scoped="" ref="0x40a1b5e0"/>
        <function-ref name="setChannel" scoped="" ref="0x40a1b6c0"/>
        <function-ref name="done" scoped="" ref="0x40a1b7a0"/>
        <function-ref name="standby" scoped="" ref="0x40a1b880"/>
        <function-ref name="getChannel" scoped="" ref="0x40a1b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a1a800" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a1a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1a9d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a1aab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a1ab98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a1ac78"/>
        <function-ref name="headerLength" scoped="" ref="0x40a1ad58"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a1ae38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40a3a1b0" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40a3a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a3a408"/>
        <function-ref name="turnOn" scoped="" ref="0x40a3a4e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40a3a5c8"/>
        <function-ref name="done" scoped="" ref="0x40a3a6a8"/>
        <function-ref name="standby" scoped="" ref="0x40a3a788"/>
        <function-ref name="getChannel" scoped="" ref="0x40a3a868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40a19010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a191e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a1a010" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a1a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a1a1e8"/>
        <function-ref name="header" scoped="" ref="0x40a1a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40a19e48" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40a19e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a3a050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a19378" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a19378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a19550"/>
        <function-ref name="stopDone" scoped="" ref="0x40a19630"/>
        <function-ref name="start" scoped="" ref="0x40a19710"/>
        <function-ref name="stop" scoped="" ref="0x40a197f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a39718" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a39718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a398f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a399d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a39ab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a39b90"/>
        <function-ref name="headerLength" scoped="" ref="0x40a39c70"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a39d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40a1b010" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40a1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a1b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a39eb0" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a39eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a380c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40a19950" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40a19950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a19b28"/>
        <function-ref name="cancel" scoped="" ref="0x40a19c08"/>
        <function-ref name="sendDone" scoped="" ref="0x40a19ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a1baa0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a1baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1bc78"/>
        <function-ref name="ready" scoped="" ref="0x40a1bd58"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1be38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40a39300" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40a39300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a394d8"/>
        <function-ref name="request" scoped="" ref="0x40a395b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40a1cb00" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40a1cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1ccd8"/>
        <function-ref name="cancel" scoped="" ref="0x40a1cdb8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1ce98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a32a68" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a32a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a32c40"/>
        <function-ref name="request" scoped="" ref="0x40a32d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a30bf8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a30bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2f7f8"/>
        <function-ref name="get" scoped="" ref="0x40a2f538"/>
        <function-ref name="isSet" scoped="" ref="0x40a2f278"/>
        <function-ref name="set" scoped="" ref="0x40a2fab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a46a08" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a46a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a46be0"/>
        <function-ref name="get" scoped="" ref="0x40a46cc0"/>
        <function-ref name="setValue" scoped="" ref="0x40a46da0"/>
        <function-ref name="set" scoped="" ref="0x40a46e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a48ad8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a48ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a476b8"/>
        <function-ref name="clear" scoped="" ref="0x40a47a68"/>
        <function-ref name="isValid" scoped="" ref="0x40a47308"/>
        <function-ref name="set" scoped="" ref="0x40a47e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a368a8" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a368a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a36a80"/>
        <function-ref name="turnOn" scoped="" ref="0x40a36b60"/>
        <function-ref name="setChannel" scoped="" ref="0x40a36c40"/>
        <function-ref name="done" scoped="" ref="0x40a36d20"/>
        <function-ref name="standby" scoped="" ref="0x40a36e00"/>
        <function-ref name="getChannel" scoped="" ref="0x40a36ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a45700" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a45700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a458d8"/>
        <function-ref name="wait" scoped="" ref="0x40a459b8"/>
        <function-ref name="cancel" scoped="" ref="0x40a45a98"/>
        <function-ref name="isFree" scoped="" ref="0x40a45b78"/>
        <function-ref name="getNow" scoped="" ref="0x40a45c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a31888" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a31888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a30470"/>
        <function-ref name="get" scoped="" ref="0x40a301b0"/>
        <function-ref name="isSet" scoped="" ref="0x40a31ed0"/>
        <function-ref name="set" scoped="" ref="0x40a30730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a32ed0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a32ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a310c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a311a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a31280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a31360"/>
        <function-ref name="headerLength" scoped="" ref="0x40a31440"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a31520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a48170" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a48170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a483c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a484a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a48588"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a48668"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a48748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a32618" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a32618"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a327f0"/>
        <function-ref name="header" scoped="" ref="0x40a328d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a4b618" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a4b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x405369d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a4aaf0"/>
        <function-ref name="fired" scoped="" ref="0x40a4a2c0"/>
        <function-ref name="startAt" scoped="" ref="0x40a4a7b0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a4a538"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a4ad68"/>
        <function-ref name="start" scoped="" ref="0x40a4bd68"/>
        <function-ref name="stop" scoped="" ref="0x40a4a048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a2d010" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a2d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2dbd8"/>
        <function-ref name="get" scoped="" ref="0x40a2d918"/>
        <function-ref name="isSet" scoped="" ref="0x40a2d658"/>
        <function-ref name="set" scoped="" ref="0x40a2de98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a2ab78" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a4b200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a320c0" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a320c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a32298"/>
        <function-ref name="ready" scoped="" ref="0x40a32378"/>
        <function-ref name="sendDone" scoped="" ref="0x40a32458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a2c3d8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a2c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2a010"/>
        <function-ref name="get" scoped="" ref="0x40a2cce0"/>
        <function-ref name="isSet" scoped="" ref="0x40a2ca20"/>
        <function-ref name="set" scoped="" ref="0x40a2a2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a450e0" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a450e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a452b8"/>
        <function-ref name="get" scoped="" ref="0x40a45398"/>
        <function-ref name="setValue" scoped="" ref="0x40a45478"/>
        <function-ref name="set" scoped="" ref="0x40a45558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a46370" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a46370"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a46548"/>
        <function-ref name="get" scoped="" ref="0x40a46628"/>
        <function-ref name="setValue" scoped="" ref="0x40a46708"/>
        <function-ref name="set" scoped="" ref="0x40a467e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a2a680" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a2a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a2a858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a3e628" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a3e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a3e800"/>
        <function-ref name="request" scoped="" ref="0x40a3e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a4d260" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a4d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a4d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a3c7d0" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a3c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3b3b8"/>
        <function-ref name="get" scoped="" ref="0x40a3b0f8"/>
        <function-ref name="isSet" scoped="" ref="0x40a3ce18"/>
        <function-ref name="set" scoped="" ref="0x40a3b678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a4e510" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a4e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4e6e8"/>
        <function-ref name="get" scoped="" ref="0x40a4e7c8"/>
        <function-ref name="setValue" scoped="" ref="0x40a4e8a8"/>
        <function-ref name="set" scoped="" ref="0x40a4e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40a3f118" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40a3f118"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403527d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403527d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a3f2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a4c480" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a4c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a6c0a8"/>
        <function-ref name="clear" scoped="" ref="0x40a6c458"/>
        <function-ref name="isValid" scoped="" ref="0x40a4ccd0"/>
        <function-ref name="set" scoped="" ref="0x40a6c808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40a56820" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a56820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a569f8"/>
        <function-ref name="isInput" scoped="" ref="0x40a56ad8"/>
        <function-ref name="toggle" scoped="" ref="0x40a56bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a56c98"/>
        <function-ref name="get" scoped="" ref="0x40a56d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a56e58"/>
        <function-ref name="set" scoped="" ref="0x40a55010"/>
        <function-ref name="clr" scoped="" ref="0x40a550f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a6b298" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a6b298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a6b470"/>
        <function-ref name="wait" scoped="" ref="0x40a6b550"/>
        <function-ref name="cancel" scoped="" ref="0x40a6b630"/>
        <function-ref name="isFree" scoped="" ref="0x40a6b710"/>
        <function-ref name="getNow" scoped="" ref="0x40a6b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a3f498" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a3f498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a3f670"/>
        <function-ref name="turnOn" scoped="" ref="0x40a3f750"/>
        <function-ref name="setChannel" scoped="" ref="0x40a3f830"/>
        <function-ref name="done" scoped="" ref="0x40a3f910"/>
        <function-ref name="standby" scoped="" ref="0x40a3f9f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40a3fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40a4dd18" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a4dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a51370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a3d458" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a3d458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3c048"/>
        <function-ref name="get" scoped="" ref="0x40a3dd60"/>
        <function-ref name="isSet" scoped="" ref="0x40a3daa0"/>
        <function-ref name="set" scoped="" ref="0x40a3c308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a3ea90" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a3ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3ec68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a3ed48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a3ee28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a3ef08"/>
        <function-ref name="headerLength" scoped="" ref="0x40a3d010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a3d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40a53d70" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a53d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a56010"/>
        <function-ref name="isInput" scoped="" ref="0x40a560f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a561d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a562b0"/>
        <function-ref name="get" scoped="" ref="0x40a56390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a56470"/>
        <function-ref name="set" scoped="" ref="0x40a56550"/>
        <function-ref name="clr" scoped="" ref="0x40a56630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a51690" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a51690"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a51868"/>
        <function-ref name="headerLength" scoped="" ref="0x40a51948"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a51a28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a51b08"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a51be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a3e1d8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a3e1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a3e3b0"/>
        <function-ref name="header" scoped="" ref="0x40a3e490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40aa5ae8" loc="847:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40aa5ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40aa5cc0"/>
        <function-ref name="runTask" scoped="" ref="0x40aa5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a3bba8" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a3bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a5b790"/>
        <function-ref name="get" scoped="" ref="0x40a5b4d0"/>
        <function-ref name="isSet" scoped="" ref="0x40a5b210"/>
        <function-ref name="set" scoped="" ref="0x40a5ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a41aa0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a41aa0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403527d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403527d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a41c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a57148" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a57148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a57320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a57400"/>
        <function-ref name="request" scoped="" ref="0x40a574e0"/>
        <function-ref name="granted" scoped="" ref="0x40a575c0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a576a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40a58690" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a58690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a588e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a589c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a58aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a58b88"/>
        <function-ref name="get" scoped="" ref="0x40a58c68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a58d48"/>
        <function-ref name="set" scoped="" ref="0x40a58e28"/>
        <function-ref name="clr" scoped="" ref="0x40a58f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a5a010" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a5a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a5abd8"/>
        <function-ref name="get" scoped="" ref="0x40a5a918"/>
        <function-ref name="isSet" scoped="" ref="0x40a5a658"/>
        <function-ref name="set" scoped="" ref="0x40a5ae98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a3fc70" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a3fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a3fe48"/>
        <function-ref name="ready" scoped="" ref="0x40a3ff28"/>
        <function-ref name="sendDone" scoped="" ref="0x40a3e018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40a4f9e0" loc="72:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a4f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a4fbb8"/>
        <function-ref name="disable" scoped="" ref="0x40a4fc98"/>
        <function-ref name="captured" scoped="" ref="0x40a4fd78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a4fe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40a536f8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a536f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a538d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a539b0"/>
        <function-ref name="splitRead" scoped="" ref="0x40a53a90"/>
        <function-ref name="write" scoped="" ref="0x40a53b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a4ebd0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a4ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4eda8"/>
        <function-ref name="get" scoped="" ref="0x40a4ee88"/>
        <function-ref name="setValue" scoped="" ref="0x40a4c010"/>
        <function-ref name="set" scoped="" ref="0x40a4c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a51e60" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a51e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4e050"/>
        <function-ref name="get" scoped="" ref="0x40a4e130"/>
        <function-ref name="setValue" scoped="" ref="0x40a4e210"/>
        <function-ref name="set" scoped="" ref="0x40a4e2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a58278" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a58278"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a58450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a6cc48" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a6cc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a6ce20"/>
        <function-ref name="suspend" scoped="" ref="0x40a6cf00"/>
        <function-ref name="resume" scoped="" ref="0x40a6b010"/>
        <function-ref name="run" scoped="" ref="0x40a6b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40aeadb8" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40aeadb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae9010"/>
        <function-ref name="isInput" scoped="" ref="0x40ae90f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ae91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ae92b0"/>
        <function-ref name="get" scoped="" ref="0x40ae9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ae9470"/>
        <function-ref name="set" scoped="" ref="0x40ae9550"/>
        <function-ref name="clr" scoped="" ref="0x40ae9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40aea3d0" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40aea3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aea5a8"/>
        <function-ref name="isInput" scoped="" ref="0x40aea688"/>
        <function-ref name="toggle" scoped="" ref="0x40aea768"/>
        <function-ref name="isOutput" scoped="" ref="0x40aea848"/>
        <function-ref name="get" scoped="" ref="0x40aea928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aeaa08"/>
        <function-ref name="set" scoped="" ref="0x40aeaae8"/>
        <function-ref name="clr" scoped="" ref="0x40aeabc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ae8030" loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ae8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ae64e0"/>
        <function-ref name="fired" scoped="" ref="0x40ae8c98"/>
        <function-ref name="startAt" scoped="" ref="0x40ae61a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40ae8f10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ae6758"/>
        <function-ref name="start" scoped="" ref="0x40ae8780"/>
        <function-ref name="stop" scoped="" ref="0x40ae8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40ac75b8" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40ac75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac7790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ac7870"/>
        <function-ref name="request" scoped="" ref="0x40ac7950"/>
        <function-ref name="granted" scoped="" ref="0x40ac7a30"/>
        <function-ref name="isOwner" scoped="" ref="0x40ac7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40acab30" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40acab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40acad08"/>
        <function-ref name="isInput" scoped="" ref="0x40acade8"/>
        <function-ref name="toggle" scoped="" ref="0x40acaec8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac7010"/>
        <function-ref name="get" scoped="" ref="0x40ac70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac71d0"/>
        <function-ref name="set" scoped="" ref="0x40ac72b0"/>
        <function-ref name="clr" scoped="" ref="0x40ac7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40ae9820" loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40ae9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40ae99f8"/>
        <function-ref name="disable" scoped="" ref="0x40ae9ad8"/>
        <function-ref name="captured" scoped="" ref="0x40ae9bb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ae9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ac7cc0" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ac7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ac7e98"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40aea010"/>
        <function-ref name="splitRead" scoped="" ref="0x40aea0f0"/>
        <function-ref name="write" scoped="" ref="0x40aea1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40ae6b48" loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ae6b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40536728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae5200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40adf420" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40adf420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40adf5f8"/>
        <function-ref name="isInput" scoped="" ref="0x40adf6d8"/>
        <function-ref name="toggle" scoped="" ref="0x40adf7b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40adf898"/>
        <function-ref name="get" scoped="" ref="0x40adf978"/>
        <function-ref name="makeOutput" scoped="" ref="0x40adfa58"/>
        <function-ref name="set" scoped="" ref="0x40adfb38"/>
        <function-ref name="clr" scoped="" ref="0x40adfc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40adb660" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40adb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40adf110"/>
        <function-ref name="test" scoped="" ref="0x40ae0be0"/>
        <function-ref name="get" scoped="" ref="0x40adbca8"/>
        <function-ref name="captured" scoped="" ref="0x40ae01d8"/>
        <function-ref name="reset" scoped="" ref="0x40ae0478"/>
        <function-ref name="isOn" scoped="" ref="0x40ae0e58"/>
        <function-ref name="set" scoped="" ref="0x40adbf20"/>
        <function-ref name="start" scoped="" ref="0x40ae06f0"/>
        <function-ref name="stop" scoped="" ref="0x40ae0968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40adfe20" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40adfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ada010"/>
        <function-ref name="isInput" scoped="" ref="0x40ada0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ada1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ada2b0"/>
        <function-ref name="get" scoped="" ref="0x40ada390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ada470"/>
        <function-ref name="set" scoped="" ref="0x40ada550"/>
        <function-ref name="clr" scoped="" ref="0x40ada630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40ae1030" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40ae1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ae1208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40ae5980" loc="39:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40ae5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40ae5b58"/>
        <function-ref name="disable" scoped="" ref="0x40ae5c38"/>
        <function-ref name="captured" scoped="" ref="0x40ae5d18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ae5df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40aed500" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40aed500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aed6d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40aed7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40af5aa8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40af5aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40af5c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ae4d98" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ae4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40af5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40af5e50" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40af5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40af4050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40af4130"/>
        <function-ref name="splitRead" scoped="" ref="0x40af4210"/>
        <function-ref name="write" scoped="" ref="0x40af42f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aedc50" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aedc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aede28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aedf08"/>
        <function-ref name="request" scoped="" ref="0x40af3010"/>
        <function-ref name="granted" scoped="" ref="0x40af30f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40af31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40b0f420" loc="296:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40b0f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b0f5f8"/>
        <function-ref name="runTask" scoped="" ref="0x40b0f6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40aecb38" loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40aecb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aecd10"/>
        <function-ref name="sendDone" scoped="" ref="0x40aecdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40afd100" loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40afd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40afd2d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40afd3b8"/>
        <function-ref name="request" scoped="" ref="0x40afd498"/>
        <function-ref name="granted" scoped="" ref="0x40afd578"/>
        <function-ref name="isOwner" scoped="" ref="0x40afd658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40aec198" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40aec198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40aec370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40af3d80" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40af3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aec010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40afe3d0" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40afe3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40afe5a8"/>
        <function-ref name="sleep" scoped="" ref="0x40b0da30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40afe768"/>
        <function-ref name="dataReady" scoped="" ref="0x40b0db10"/>
        <function-ref name="initMaster" scoped="" ref="0x40afe928"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40afea08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40afeae8"/>
        <function-ref name="read" scoped="" ref="0x40afebc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40afeca8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40afed88"/>
        <function-ref name="setClock" scoped="" ref="0x40afee68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b0d010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b0d0f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b0d250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b0d330"/>
        <function-ref name="write" scoped="" ref="0x40b0d410"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b0d4f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b0d5d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b0d6b0"/>
        <function-ref name="getClock" scoped="" ref="0x40b0d790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b0d870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40afe688"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40afe848"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b0d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40aec520" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40aec520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40aec6f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40aec7d8"/>
        <function-ref name="splitRead" scoped="" ref="0x40aec8b8"/>
        <function-ref name="write" scoped="" ref="0x40aec998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aeb2a8" loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aeb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aeb480"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aeb560"/>
        <function-ref name="request" scoped="" ref="0x40aeb640"/>
        <function-ref name="granted" scoped="" ref="0x40aeb720"/>
        <function-ref name="isOwner" scoped="" ref="0x40aeb800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40afd808" loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40afd808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40afd9e0"/>
        <function-ref name="userId" scoped="" ref="0x40afdac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40afdc88" loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40afdc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40afde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40b42070" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40b42070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b42248"/>
        <function-ref name="sleep" scoped="" ref="0x40b41630"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b42408"/>
        <function-ref name="dataReady" scoped="" ref="0x40b41710"/>
        <function-ref name="initMaster" scoped="" ref="0x40b425c8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b426a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b42788"/>
        <function-ref name="read" scoped="" ref="0x40b42868"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b42948"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b42a28"/>
        <function-ref name="setClock" scoped="" ref="0x40b42b08"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b42be8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b42cc8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b42e28"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b42f08"/>
        <function-ref name="write" scoped="" ref="0x40b41010"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b410f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b411d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b412b0"/>
        <function-ref name="getClock" scoped="" ref="0x40b41390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b41470"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b42328"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b424e8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b41550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40b39060" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40b39060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b39238"/>
        <function-ref name="isInput" scoped="" ref="0x40b39318"/>
        <function-ref name="toggle" scoped="" ref="0x40b393f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b394d8"/>
        <function-ref name="get" scoped="" ref="0x40b395b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b39698"/>
        <function-ref name="set" scoped="" ref="0x40b39778"/>
        <function-ref name="clr" scoped="" ref="0x40b39858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40b3cbf0" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40b3cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3cdc8"/>
        <function-ref name="isInput" scoped="" ref="0x40b3cea8"/>
        <function-ref name="toggle" scoped="" ref="0x40b3b010"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3b0f0"/>
        <function-ref name="get" scoped="" ref="0x40b3b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3b2b0"/>
        <function-ref name="set" scoped="" ref="0x40b3b390"/>
        <function-ref name="clr" scoped="" ref="0x40b3b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40b3c218" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40b3c218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3c3f0"/>
        <function-ref name="isInput" scoped="" ref="0x40b3c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x40b3c5b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3c690"/>
        <function-ref name="get" scoped="" ref="0x40b3c770"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3c850"/>
        <function-ref name="set" scoped="" ref="0x40b3c930"/>
        <function-ref name="clr" scoped="" ref="0x40b3ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40b3acd0" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b3acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b3aea8"/>
        <function-ref name="stop" scoped="" ref="0x40b3c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40b39a60" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40b39a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b39c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40b3e3a8" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40b3e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b3e580"/>
        <function-ref name="sleep" scoped="" ref="0x40b3d958"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b3e740"/>
        <function-ref name="dataReady" scoped="" ref="0x40b3da38"/>
        <function-ref name="initMaster" scoped="" ref="0x40b3e900"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b3e9e0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b3eac0"/>
        <function-ref name="read" scoped="" ref="0x40b3eba0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b3ec80"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b3ed60"/>
        <function-ref name="setClock" scoped="" ref="0x40b3ee40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b3ef20"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b3d018"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b3d178"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b3d258"/>
        <function-ref name="write" scoped="" ref="0x40b3d338"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b3d418"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b3d4f8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b3d5d8"/>
        <function-ref name="getClock" scoped="" ref="0x40b3d6b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b3d798"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b3e660"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b3e820"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b3d878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40b3b660" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40b3b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3b838"/>
        <function-ref name="isInput" scoped="" ref="0x40b3b918"/>
        <function-ref name="toggle" scoped="" ref="0x40b3b9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3bad8"/>
        <function-ref name="get" scoped="" ref="0x40b3bbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3bc98"/>
        <function-ref name="set" scoped="" ref="0x40b3bd78"/>
        <function-ref name="clr" scoped="" ref="0x40b3be58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b5d8d8" loc="86:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b5d8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b5dac0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b5dba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b5c208" loc="89:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b5c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b5c3f0"/>
        <function-ref name="configure" scoped="" ref="0x40b5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b5d198" loc="85:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b5d198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b5d380"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b5d460"/>
        <function-ref name="request" scoped="" ref="0x40b5d540"/>
        <function-ref name="granted" scoped="" ref="0x40b5d620"/>
        <function-ref name="isOwner" scoped="" ref="0x40b5d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b5dce0" loc="87:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b5dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b5deb8"/>
        <function-ref name="userId" scoped="" ref="0x40b5c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411db2e8" loc="44:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411db2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411db4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x411db620" loc="45:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x411db620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411db7f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x411db8d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411db9b8"/>
        <function-ref name="dequeue" scoped="" ref="0x411dba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411dad70" loc="52:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411dad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411d8010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411d86f0" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411d86f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411d88d8"/>
        <function-ref name="configure" scoped="" ref="0x411d89b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x411d8b18" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x411d8b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411d8cf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x411d8dd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411d8eb0"/>
        <function-ref name="dequeue" scoped="" ref="0x411d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411da630" loc="51:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411da630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411da818"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411da8f8"/>
        <function-ref name="request" scoped="" ref="0x411da9d8"/>
        <function-ref name="granted" scoped="" ref="0x411daab8"/>
        <function-ref name="isOwner" scoped="" ref="0x411dab98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411d8230" loc="53:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411d8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411d8408"/>
        <function-ref name="userId" scoped="" ref="0x411d84e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x411d7190" loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x411d7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411d7368"/>
        <function-ref name="runTask" scoped="" ref="0x411d7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b73218" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b73218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b733f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b734d0"/>
        <function-ref name="getControlA" scoped="" ref="0x40b735b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b73690"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b73770"/>
        <function-ref name="setControlB" scoped="" ref="0x40b73850"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b73930"/>
        <function-ref name="getControlB" scoped="" ref="0x40b73a10"/>
        <function-ref name="setControlC" scoped="" ref="0x40b73af0"/>
        <function-ref name="setControlA" scoped="" ref="0x40b73bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b73f08" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b73f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b789f0"/>
        <function-ref name="test" scoped="" ref="0x40b78500"/>
        <function-ref name="get" scoped="" ref="0x40b79578"/>
        <function-ref name="captured" scoped="" ref="0x40b79a90"/>
        <function-ref name="reset" scoped="" ref="0x40b79d30"/>
        <function-ref name="isOn" scoped="" ref="0x40b78778"/>
        <function-ref name="set" scoped="" ref="0x40b797f0"/>
        <function-ref name="start" scoped="" ref="0x40b78010"/>
        <function-ref name="stop" scoped="" ref="0x40b78288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b71120" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b71120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b70690"/>
        <function-ref name="fired" scoped="" ref="0x40b71c80"/>
        <function-ref name="get" scoped="" ref="0x40b71768"/>
        <function-ref name="reset" scoped="" ref="0x40b71ef8"/>
        <function-ref name="isOn" scoped="" ref="0x40b70908"/>
        <function-ref name="set" scoped="" ref="0x40b719e0"/>
        <function-ref name="start" scoped="" ref="0x40b701a0"/>
        <function-ref name="stop" scoped="" ref="0x40b70418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b7f830" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b7f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b7a2c0"/>
        <function-ref name="test" scoped="" ref="0x40b7bd90"/>
        <function-ref name="get" scoped="" ref="0x40b7fe78"/>
        <function-ref name="setScale" scoped="" ref="0x40b7a538"/>
        <function-ref name="getScale" scoped="" ref="0x40b7a7d8"/>
        <function-ref name="reset" scoped="" ref="0x40b7b628"/>
        <function-ref name="overflow" scoped="" ref="0x40b7b3b0"/>
        <function-ref name="isOn" scoped="" ref="0x40b7a048"/>
        <function-ref name="set" scoped="" ref="0x40b7b110"/>
        <function-ref name="start" scoped="" ref="0x40b7b8a0"/>
        <function-ref name="stop" scoped="" ref="0x40b7bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b91920" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b91920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b91af8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b91bd8"/>
        <function-ref name="getControlA" scoped="" ref="0x40b91cb8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b91d98"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b91e78"/>
        <function-ref name="setControlB" scoped="" ref="0x40b90010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b900f0"/>
        <function-ref name="getControlB" scoped="" ref="0x40b901d0"/>
        <function-ref name="setControlC" scoped="" ref="0x40b902b0"/>
        <function-ref name="setControlA" scoped="" ref="0x40b90390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b8d6c8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b8d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b8cc90"/>
        <function-ref name="fired" scoped="" ref="0x40b8c2b0"/>
        <function-ref name="get" scoped="" ref="0x40b8dd10"/>
        <function-ref name="reset" scoped="" ref="0x40b8c528"/>
        <function-ref name="isOn" scoped="" ref="0x40b8cf08"/>
        <function-ref name="set" scoped="" ref="0x40b8c010"/>
        <function-ref name="start" scoped="" ref="0x40b8c7a0"/>
        <function-ref name="stop" scoped="" ref="0x40b8ca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b906c8" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b906c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b8d288"/>
        <function-ref name="test" scoped="" ref="0x40b8fcb8"/>
        <function-ref name="get" scoped="" ref="0x40b90d10"/>
        <function-ref name="captured" scoped="" ref="0x40b8f2b0"/>
        <function-ref name="reset" scoped="" ref="0x40b8f550"/>
        <function-ref name="isOn" scoped="" ref="0x40b8d010"/>
        <function-ref name="set" scoped="" ref="0x40b8f010"/>
        <function-ref name="start" scoped="" ref="0x40b8f7c8"/>
        <function-ref name="stop" scoped="" ref="0x40b8fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b8b340" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b8b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b89898"/>
        <function-ref name="fired" scoped="" ref="0x40b8bea0"/>
        <function-ref name="get" scoped="" ref="0x40b8b988"/>
        <function-ref name="reset" scoped="" ref="0x40b89130"/>
        <function-ref name="isOn" scoped="" ref="0x40b89b10"/>
        <function-ref name="set" scoped="" ref="0x40b8bc00"/>
        <function-ref name="start" scoped="" ref="0x40b893a8"/>
        <function-ref name="stop" scoped="" ref="0x40b89620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b89f28" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b89f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b87500"/>
        <function-ref name="fired" scoped="" ref="0x40b88a98"/>
        <function-ref name="get" scoped="" ref="0x40b88580"/>
        <function-ref name="reset" scoped="" ref="0x40b88d10"/>
        <function-ref name="isOn" scoped="" ref="0x40b87778"/>
        <function-ref name="set" scoped="" ref="0x40b887f8"/>
        <function-ref name="start" scoped="" ref="0x40b87010"/>
        <function-ref name="stop" scoped="" ref="0x40b87288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b94640" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b94640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b910a8"/>
        <function-ref name="test" scoped="" ref="0x40b92ba0"/>
        <function-ref name="get" scoped="" ref="0x40b94c88"/>
        <function-ref name="setScale" scoped="" ref="0x40b91320"/>
        <function-ref name="getScale" scoped="" ref="0x40b915c0"/>
        <function-ref name="reset" scoped="" ref="0x40b92438"/>
        <function-ref name="overflow" scoped="" ref="0x40b921c0"/>
        <function-ref name="isOn" scoped="" ref="0x40b92e18"/>
        <function-ref name="set" scoped="" ref="0x40b94f00"/>
        <function-ref name="start" scoped="" ref="0x40b926b0"/>
        <function-ref name="stop" scoped="" ref="0x40b92928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40bbee38" loc="30:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40bbee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d4b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c07350"/>
        <function-ref name="fired" scoped="" ref="0x40bbdab8"/>
        <function-ref name="startAt" scoped="" ref="0x40c07010"/>
        <function-ref name="isRunning" scoped="" ref="0x40bbdd30"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c075c8"/>
        <function-ref name="start" scoped="" ref="0x40bbd5a0"/>
        <function-ref name="stop" scoped="" ref="0x40bbd840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bdfa78" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bdfa78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403525d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403525d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bdfc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40bdfe60" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bdfe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bd68d8"/>
        <function-ref name="test" scoped="" ref="0x40bd63e8"/>
        <function-ref name="get" scoped="" ref="0x40bde4d8"/>
        <function-ref name="setScale" scoped="" ref="0x40bd6b50"/>
        <function-ref name="getScale" scoped="" ref="0x40bd6df0"/>
        <function-ref name="reset" scoped="" ref="0x40bdec68"/>
        <function-ref name="overflow" scoped="" ref="0x40bde9f0"/>
        <function-ref name="isOn" scoped="" ref="0x40bd6660"/>
        <function-ref name="set" scoped="" ref="0x40bde750"/>
        <function-ref name="start" scoped="" ref="0x40bdeee0"/>
        <function-ref name="stop" scoped="" ref="0x40bd6170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4120aac0" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4120aac0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403523d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403523d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d4b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41208010"/>
        <function-ref name="fired" scoped="" ref="0x41209740"/>
        <function-ref name="startAt" scoped="" ref="0x41209c30"/>
        <function-ref name="isRunning" scoped="" ref="0x412099b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x41208288"/>
        <function-ref name="start" scoped="" ref="0x41209228"/>
        <function-ref name="stop" scoped="" ref="0x412094c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x412057e8" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x412057e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41204d58"/>
        <function-ref name="fired" scoped="" ref="0x41204378"/>
        <function-ref name="get" scoped="" ref="0x41205e30"/>
        <function-ref name="reset" scoped="" ref="0x412045f0"/>
        <function-ref name="isOn" scoped="" ref="0x41203010"/>
        <function-ref name="set" scoped="" ref="0x412040d8"/>
        <function-ref name="start" scoped="" ref="0x41204868"/>
        <function-ref name="stop" scoped="" ref="0x41204ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41208548" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41208548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41205010"/>
        <function-ref name="test" scoped="" ref="0x41207ab8"/>
        <function-ref name="get" scoped="" ref="0x41208b90"/>
        <function-ref name="setScale" scoped="" ref="0x41205288"/>
        <function-ref name="getScale" scoped="" ref="0x41205528"/>
        <function-ref name="reset" scoped="" ref="0x41207350"/>
        <function-ref name="overflow" scoped="" ref="0x412070d8"/>
        <function-ref name="isOn" scoped="" ref="0x41207d30"/>
        <function-ref name="set" scoped="" ref="0x41208e08"/>
        <function-ref name="start" scoped="" ref="0x412075c8"/>
        <function-ref name="stop" scoped="" ref="0x41207840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c06778" loc="39:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c06778"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c06dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c02868" loc="24:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c02868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d4b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bff010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bff500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bff288"/>
        <function-ref name="overflow" scoped="" ref="0x40bff778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bfd030" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bfd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d4b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfd780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bfdc70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bfd9f8"/>
        <function-ref name="overflow" scoped="" ref="0x40bfdee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c1b208" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c1b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40c1ac68"/>
        <function-ref name="test" scoped="" ref="0x40c1a778"/>
        <function-ref name="get" scoped="" ref="0x40c1b850"/>
        <function-ref name="setScale" scoped="" ref="0x40c1aee0"/>
        <function-ref name="getScale" scoped="" ref="0x40c191c0"/>
        <function-ref name="reset" scoped="" ref="0x40c1a010"/>
        <function-ref name="overflow" scoped="" ref="0x40c1bd68"/>
        <function-ref name="isOn" scoped="" ref="0x40c1a9f0"/>
        <function-ref name="set" scoped="" ref="0x40c1bac8"/>
        <function-ref name="start" scoped="" ref="0x40c1a288"/>
        <function-ref name="stop" scoped="" ref="0x40c1a500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40c305f8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40c305f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c30d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c2f288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c2f010"/>
        <function-ref name="overflow" scoped="" ref="0x40c2f500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c17320" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c17320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c17a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c30010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c17ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40c30288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c2e440" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c2e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c2ea88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40c2edd8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c2edd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c2c570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c2ca60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c2c7e8"/>
        <function-ref name="overflow" scoped="" ref="0x40c2ccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40c2a458" loc="36:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40c2a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40c2aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c54ea0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c54ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c510c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40c511a0"/>
        <function-ref name="start" scoped="" ref="0x40c51280"/>
        <function-ref name="stop" scoped="" ref="0x40c51360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c517c0" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c517c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c51998"/>
        <function-ref name="getPayload" scoped="" ref="0x40c51a78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c51b58"/>
        <function-ref name="cancel" scoped="" ref="0x40c51c38"/>
        <function-ref name="sendDone" scoped="" ref="0x40c51d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c504e8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c504e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c506c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c507a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c50880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c50960"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c50a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c50190" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c50190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c50368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c4fe68" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c4fe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c4e050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c4e130"/>
        <function-ref name="led1On" scoped="" ref="0x40c4e210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c4e2f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c4e3d0"/>
        <function-ref name="get" scoped="" ref="0x40c4e4b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c4e590"/>
        <function-ref name="led2Off" scoped="" ref="0x40c4e910"/>
        <function-ref name="set" scoped="" ref="0x40c4e670"/>
        <function-ref name="led0On" scoped="" ref="0x40c4e750"/>
        <function-ref name="led2On" scoped="" ref="0x40c4e830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c4f930" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c4f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c4fb08"/>
        <function-ref name="noAck" scoped="" ref="0x40c4fbe8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c4fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c50bd8" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c50bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c50db0"/>
        <function-ref name="source" scoped="" ref="0x40c50e90"/>
        <function-ref name="address" scoped="" ref="0x40c4f010"/>
        <function-ref name="destination" scoped="" ref="0x40c4f0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40c4f1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c4f2b0"/>
        <function-ref name="type" scoped="" ref="0x40c4f390"/>
        <function-ref name="setType" scoped="" ref="0x40c4f470"/>
        <function-ref name="isForMe" scoped="" ref="0x40c4f550"/>
        <function-ref name="setGroup" scoped="" ref="0x40c4f630"/>
        <function-ref name="localGroup" scoped="" ref="0x40c4f710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c94430" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c94430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c94608"/>
        <function-ref name="getPayload" scoped="" ref="0x40c946e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c947c8"/>
        <function-ref name="cancel" scoped="" ref="0x40c948a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c94988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c94ae8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c94ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c94cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c77180" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c77180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c77368"/>
        <function-ref name="getPayload" scoped="" ref="0x40c77448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c77528"/>
        <function-ref name="cancel" scoped="" ref="0x40c77608"/>
        <function-ref name="sendDone" scoped="" ref="0x40c776e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c76850" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c76850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c76a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c76b08"/>
        <function-ref name="getPayload" scoped="" ref="0x40c76be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c76cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c76da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c778c0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c778c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c77aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c76ee8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c76ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c940e0"/>
        <function-ref name="noAck" scoped="" ref="0x40c941c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c942a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c77be8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c77be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c77dc0"/>
        <function-ref name="source" scoped="" ref="0x40c77ea0"/>
        <function-ref name="address" scoped="" ref="0x40c76010"/>
        <function-ref name="destination" scoped="" ref="0x40c760f0"/>
        <function-ref name="setSource" scoped="" ref="0x40c761d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c762b0"/>
        <function-ref name="type" scoped="" ref="0x40c76390"/>
        <function-ref name="setType" scoped="" ref="0x40c76470"/>
        <function-ref name="isForMe" scoped="" ref="0x40c76550"/>
        <function-ref name="setGroup" scoped="" ref="0x40c76630"/>
        <function-ref name="localGroup" scoped="" ref="0x40c76710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c903a8" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c903a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c90580"/>
        <function-ref name="stopDone" scoped="" ref="0x40c90660"/>
        <function-ref name="start" scoped="" ref="0x40c90740"/>
        <function-ref name="stop" scoped="" ref="0x40c90820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c8f288" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c8f288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40500d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c8f460"/>
        <function-ref name="getPayload" scoped="" ref="0x40c8f540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8f620"/>
        <function-ref name="cancel" scoped="" ref="0x40c8f700"/>
        <function-ref name="sendDone" scoped="" ref="0x40c8f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c90010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c90010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c901e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c90c68" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c90c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40500d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c90e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cb6e80" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cb6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c8e070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c8e150"/>
        <function-ref name="led1On" scoped="" ref="0x40c8e230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c8e310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c8e3f0"/>
        <function-ref name="get" scoped="" ref="0x40c8e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c8e5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40c8e930"/>
        <function-ref name="set" scoped="" ref="0x40c8e690"/>
        <function-ref name="led0On" scoped="" ref="0x40c8e770"/>
        <function-ref name="led2On" scoped="" ref="0x40c8e850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40cb6978" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40cb6978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40500d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40cb6b50"/>
        <function-ref name="offset" scoped="" ref="0x40cb6c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40cb6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ca53d8" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ca53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ca55b0"/>
        <function-ref name="stopDone" scoped="" ref="0x40ca5690"/>
        <function-ref name="start" scoped="" ref="0x40ca5770"/>
        <function-ref name="stop" scoped="" ref="0x40ca5850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40ced350" loc="332:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40ced350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ced528"/>
        <function-ref name="runTask" scoped="" ref="0x40ced608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40cc33d8" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40cc33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cc35b0"/>
        <function-ref name="stop" scoped="" ref="0x40cc3690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40ce1788" loc="191:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40ce1788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ce1960"/>
        <function-ref name="runTask" scoped="" ref="0x40ce1a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ca5040" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ca5040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ca5218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40cc23c0" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40cc23c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40cc2598"/>
        <function-ref name="flush" scoped="" ref="0x40cc2678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40cefbd0" loc="322:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40cefbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cefda8"/>
        <function-ref name="runTask" scoped="" ref="0x40cefe88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40cc7e88" loc="72:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40cc7e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40ccb070"/>
        <function-ref name="resetSend" scoped="" ref="0x40ccb150"/>
        <function-ref name="dataReceived" scoped="" ref="0x40ccb230"/>
        <function-ref name="resetReceive" scoped="" ref="0x40ccb310"/>
        <function-ref name="putData" scoped="" ref="0x40ccb3f0"/>
        <function-ref name="putDone" scoped="" ref="0x40ccb4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40ccb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ccb720" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ccb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ccb8f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ccb9d8"/>
        <function-ref name="led1On" scoped="" ref="0x40ccbab8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ccbb98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ccbc78"/>
        <function-ref name="get" scoped="" ref="0x40ccbd58"/>
        <function-ref name="led1Off" scoped="" ref="0x40ccbe38"/>
        <function-ref name="led2Off" scoped="" ref="0x40cc91d0"/>
        <function-ref name="set" scoped="" ref="0x40ccbf18"/>
        <function-ref name="led0On" scoped="" ref="0x40cc9010"/>
        <function-ref name="led2On" scoped="" ref="0x40cc90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40cea010" loc="341:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40cea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cea1e8"/>
        <function-ref name="runTask" scoped="" ref="0x40cea2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40cccb00" loc="67:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40cccb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40ccccd8"/>
        <function-ref name="nextByte" scoped="" ref="0x40cccdb8"/>
        <function-ref name="startSend" scoped="" ref="0x40ccce98"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40ca4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40ccac50" loc="68:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40ccac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40ccae28"/>
        <function-ref name="byteReceived" scoped="" ref="0x40ccaf08"/>
        <function-ref name="endPacket" scoped="" ref="0x40ca3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40d5b030" loc="275:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40d5b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d5b208"/>
        <function-ref name="runTask" scoped="" ref="0x40d5b2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d5ec60" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d5ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40500d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d5ee48"/>
        <function-ref name="getPayload" scoped="" ref="0x40d5ef28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d5d018"/>
        <function-ref name="cancel" scoped="" ref="0x40d5d0f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d5d1d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40d5b468" loc="158:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40d5b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d5b640"/>
        <function-ref name="runTask" scoped="" ref="0x40d5b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d5e8a0" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d5e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40500d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d5ea88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40d5d400" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40d5d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40500d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40d5d5e8"/>
        <function-ref name="offset" scoped="" ref="0x40d5d6c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40d5d7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d5c3f0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d5c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d5c5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d5c6a8"/>
        <function-ref name="led1On" scoped="" ref="0x40d5c788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d5c868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d5c948"/>
        <function-ref name="get" scoped="" ref="0x40d5ca28"/>
        <function-ref name="led1Off" scoped="" ref="0x40d5cb08"/>
        <function-ref name="led2On" scoped="" ref="0x40d5ce88"/>
        <function-ref name="set" scoped="" ref="0x40d5ccc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40d5cbe8"/>
        <function-ref name="led0On" scoped="" ref="0x40d5cda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40d5ddc0" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40d5ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40d5c010"/>
        <function-ref name="nextByte" scoped="" ref="0x40d5c0f0"/>
        <function-ref name="startSend" scoped="" ref="0x40d5c1d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40d5c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40d5d8e8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d5d8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40d5dac0"/>
        <function-ref name="byteReceived" scoped="" ref="0x40d5dba0"/>
        <function-ref name="endPacket" scoped="" ref="0x40d5dc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40d7eb80" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d7eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d7ed58"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d7ee38"/>
        <function-ref name="receive" scoped="" ref="0x40d7ef18"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d56010"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d560f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d561d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40d5a868" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40d5a868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40d5aa40"/>
        <function-ref name="resetSend" scoped="" ref="0x40d5ab20"/>
        <function-ref name="dataReceived" scoped="" ref="0x40d5ac00"/>
        <function-ref name="resetReceive" scoped="" ref="0x40d5ace0"/>
        <function-ref name="putData" scoped="" ref="0x40d5adc0"/>
        <function-ref name="putDone" scoped="" ref="0x40d5aea0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40d57010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d56420" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d56420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d565f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d566d8"/>
        <function-ref name="led1On" scoped="" ref="0x40d567b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d56898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d56978"/>
        <function-ref name="get" scoped="" ref="0x40d56a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40d56b38"/>
        <function-ref name="led2Off" scoped="" ref="0x40d56eb8"/>
        <function-ref name="set" scoped="" ref="0x40d56c18"/>
        <function-ref name="led0On" scoped="" ref="0x40d56cf8"/>
        <function-ref name="led2On" scoped="" ref="0x40d56dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d9a6e8" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d9a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d9a8c0"/>
        <function-ref name="receive" scoped="" ref="0x40d9a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d59870" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d59870"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d59a48"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d59b28"/>
        <function-ref name="receive" scoped="" ref="0x40d59c08"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d59ce8"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d59dc8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d59ea8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d6e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d593f0" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d593f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d595c8"/>
        <function-ref name="stop" scoped="" ref="0x40d596a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d995d8" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d995d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d997b0"/>
        <function-ref name="receive" scoped="" ref="0x40d99890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d99a58" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d99a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d99c30"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d99d10"/>
        <function-ref name="receive" scoped="" ref="0x40d99df0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d99ed0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d98010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d980f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d981d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d98530" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d98530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d98c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d961a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d98ef8"/>
        <function-ref name="overflow" scoped="" ref="0x40d96418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d99168" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d99168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d99340"/>
        <function-ref name="stop" scoped="" ref="0x40d99420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d95e28" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d95e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d94050"/>
        <function-ref name="receive" scoped="" ref="0x40d94130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40d94b28" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40d94b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d94d00"/>
        <function-ref name="stop" scoped="" ref="0x40d94de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d956d8" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d956d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d958b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d94290" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d94290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d94468"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d94548"/>
        <function-ref name="receive" scoped="" ref="0x40d94628"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d94708"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d947e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d948c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d949a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d9d0a0" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d9d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d9d7f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d9dce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d9da68"/>
        <function-ref name="overflow" scoped="" ref="0x40dcb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40d9e448" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40d9e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d9e620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d9e700"/>
        <function-ref name="rxDone" scoped="" ref="0x40d9e7e0"/>
        <function-ref name="txDone" scoped="" ref="0x40d9e8c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d9e9a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d9ea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d9eb60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d9ec40"/>
        <function-ref name="tx" scoped="" ref="0x40d9ed20"/>
        <function-ref name="rx" scoped="" ref="0x40d9ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d95a10" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d95a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d95be8"/>
        <function-ref name="stop" scoped="" ref="0x40d95cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40d9e010" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40d9e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d9e1e8"/>
        <function-ref name="stop" scoped="" ref="0x40d9e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40db8508" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40db8508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40db86e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40db87c0"/>
        <function-ref name="rxDone" scoped="" ref="0x40db88a0"/>
        <function-ref name="txDone" scoped="" ref="0x40db8980"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40db8a60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40db8b40"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40db8c20"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40db8d00"/>
        <function-ref name="tx" scoped="" ref="0x40db8de0"/>
        <function-ref name="rx" scoped="" ref="0x40db8ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40db7b80" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40db7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40db7d58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40db7e38"/>
        <function-ref name="rxDone" scoped="" ref="0x40db7f18"/>
        <function-ref name="txDone" scoped="" ref="0x40db6010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40db60f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40db61d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40db62b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40db6390"/>
        <function-ref name="tx" scoped="" ref="0x40db6470"/>
        <function-ref name="rx" scoped="" ref="0x40db6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40db8010" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40db8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40db81e8"/>
        <function-ref name="stop" scoped="" ref="0x40db82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40db7178" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40db7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40db7350"/>
        <function-ref name="stop" scoped="" ref="0x40db7430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40db7688" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40db7688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40db7860"/>
        <function-ref name="stop" scoped="" ref="0x40db7940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40db9a80" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40db9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40db9c58"/>
        <function-ref name="stop" scoped="" ref="0x40db9d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40db6d80" loc="114:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40db6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40de6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40de6cd0" loc="117:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40de6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40de6ea8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40de5010"/>
        <function-ref name="rxDone" scoped="" ref="0x40de50f0"/>
        <function-ref name="txDone" scoped="" ref="0x40de51d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40de52b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40de5390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40de5470"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40de5550"/>
        <function-ref name="tx" scoped="" ref="0x40de5630"/>
        <function-ref name="rx" scoped="" ref="0x40de5710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40de5920" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40de5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40de5af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40de4880" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40de4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40de4a58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40de4b38"/>
        <function-ref name="rxDone" scoped="" ref="0x40de4c18"/>
        <function-ref name="txDone" scoped="" ref="0x40de4cf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40de4dd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40de4eb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40de3010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40de30f0"/>
        <function-ref name="tx" scoped="" ref="0x40de31d0"/>
        <function-ref name="rx" scoped="" ref="0x40de32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40de67b8" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40de67b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de6990"/>
        <function-ref name="stop" scoped="" ref="0x40de6a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40de5d70" loc="120:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40de5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de4010"/>
        <function-ref name="stop" scoped="" ref="0x40de40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40de4368" loc="121:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40de4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de4540"/>
        <function-ref name="stop" scoped="" ref="0x40de4620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40de34a8" loc="124:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40de34a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40de3680"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40de3760"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40de3840"/>
        <function-ref name="actualMicro" scoped="" ref="0x40de3920"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40de3a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40de3be8" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40de3be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40de3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40de6288" loc="115:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40de6288"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de6460"/>
        <function-ref name="stop" scoped="" ref="0x40de6540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40d9b878" loc="24:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d9b878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e0e010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e0e500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e0e288"/>
        <function-ref name="overflow" scoped="" ref="0x40e0e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e0b3c0" loc="24:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e0b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d4d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e0bb10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e0a010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e0bd88"/>
        <function-ref name="overflow" scoped="" ref="0x40e0a288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e04090" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e04090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40e04268"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e04348"/>
        <function-ref name="getControlA" scoped="" ref="0x40e04428"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e04508"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e045e8"/>
        <function-ref name="setControlB" scoped="" ref="0x40e046c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e047a8"/>
        <function-ref name="getControlB" scoped="" ref="0x40e04888"/>
        <function-ref name="setControlC" scoped="" ref="0x40e04968"/>
        <function-ref name="setControlA" scoped="" ref="0x40e04a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e04d80" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e04d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e01810"/>
        <function-ref name="test" scoped="" ref="0x40e01320"/>
        <function-ref name="get" scoped="" ref="0x40e033e0"/>
        <function-ref name="captured" scoped="" ref="0x40e038f8"/>
        <function-ref name="reset" scoped="" ref="0x40e03b98"/>
        <function-ref name="isOn" scoped="" ref="0x40e01598"/>
        <function-ref name="set" scoped="" ref="0x40e03658"/>
        <function-ref name="start" scoped="" ref="0x40e03e10"/>
        <function-ref name="stop" scoped="" ref="0x40e010a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40e01f20" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40e01f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40dff500"/>
        <function-ref name="fired" scoped="" ref="0x40e00a98"/>
        <function-ref name="get" scoped="" ref="0x40e00580"/>
        <function-ref name="reset" scoped="" ref="0x40e00d10"/>
        <function-ref name="isOn" scoped="" ref="0x40dff778"/>
        <function-ref name="set" scoped="" ref="0x40e007f8"/>
        <function-ref name="start" scoped="" ref="0x40dff010"/>
        <function-ref name="stop" scoped="" ref="0x40dff288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e0ad20" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e0ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e057b0"/>
        <function-ref name="test" scoped="" ref="0x40e052c0"/>
        <function-ref name="get" scoped="" ref="0x40e07390"/>
        <function-ref name="setScale" scoped="" ref="0x40e05a28"/>
        <function-ref name="getScale" scoped="" ref="0x40e05cc8"/>
        <function-ref name="reset" scoped="" ref="0x40e07b20"/>
        <function-ref name="overflow" scoped="" ref="0x40e078a8"/>
        <function-ref name="isOn" scoped="" ref="0x40e05538"/>
        <function-ref name="set" scoped="" ref="0x40e07608"/>
        <function-ref name="start" scoped="" ref="0x40e07d98"/>
        <function-ref name="stop" scoped="" ref="0x40e05048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e2b770" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e2b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40e2b948"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e2ba28"/>
        <function-ref name="getControlA" scoped="" ref="0x40e2bb08"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e2bbe8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e2bcc8"/>
        <function-ref name="setControlB" scoped="" ref="0x40e2bda8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e2be88"/>
        <function-ref name="getControlB" scoped="" ref="0x40e2a010"/>
        <function-ref name="setControlC" scoped="" ref="0x40e2a0f0"/>
        <function-ref name="setControlA" scoped="" ref="0x40e2a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40e27450" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40e27450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e269f0"/>
        <function-ref name="fired" scoped="" ref="0x40e26010"/>
        <function-ref name="get" scoped="" ref="0x40e27a98"/>
        <function-ref name="reset" scoped="" ref="0x40e26288"/>
        <function-ref name="isOn" scoped="" ref="0x40e26c68"/>
        <function-ref name="set" scoped="" ref="0x40e27d10"/>
        <function-ref name="start" scoped="" ref="0x40e26500"/>
        <function-ref name="stop" scoped="" ref="0x40e26778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e2a508" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e2a508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e27010"/>
        <function-ref name="test" scoped="" ref="0x40e28a90"/>
        <function-ref name="get" scoped="" ref="0x40e2ab50"/>
        <function-ref name="captured" scoped="" ref="0x40e28088"/>
        <function-ref name="reset" scoped="" ref="0x40e28328"/>
        <function-ref name="isOn" scoped="" ref="0x40e28d08"/>
        <function-ref name="set" scoped="" ref="0x40e2adc8"/>
        <function-ref name="start" scoped="" ref="0x40e285a0"/>
        <function-ref name="stop" scoped="" ref="0x40e28818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40e250b8" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40e250b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e23620"/>
        <function-ref name="fired" scoped="" ref="0x40e25c18"/>
        <function-ref name="get" scoped="" ref="0x40e25700"/>
        <function-ref name="reset" scoped="" ref="0x40e25e90"/>
        <function-ref name="isOn" scoped="" ref="0x40e23898"/>
        <function-ref name="set" scoped="" ref="0x40e25978"/>
        <function-ref name="start" scoped="" ref="0x40e23130"/>
        <function-ref name="stop" scoped="" ref="0x40e233a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40e23cb0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40e23cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e21288"/>
        <function-ref name="fired" scoped="" ref="0x40e22820"/>
        <function-ref name="get" scoped="" ref="0x40e22308"/>
        <function-ref name="reset" scoped="" ref="0x40e22a98"/>
        <function-ref name="isOn" scoped="" ref="0x40e21500"/>
        <function-ref name="set" scoped="" ref="0x40e22580"/>
        <function-ref name="start" scoped="" ref="0x40e22d10"/>
        <function-ref name="stop" scoped="" ref="0x40e21010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e2d438" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e2d438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e2cee0"/>
        <function-ref name="test" scoped="" ref="0x40e2c9f0"/>
        <function-ref name="get" scoped="" ref="0x40e2da80"/>
        <function-ref name="setScale" scoped="" ref="0x40e2b170"/>
        <function-ref name="getScale" scoped="" ref="0x40e2b410"/>
        <function-ref name="reset" scoped="" ref="0x40e2c288"/>
        <function-ref name="overflow" scoped="" ref="0x40e2c010"/>
        <function-ref name="isOn" scoped="" ref="0x40e2cc68"/>
        <function-ref name="set" scoped="" ref="0x40e2dcf8"/>
        <function-ref name="start" scoped="" ref="0x40e2c500"/>
        <function-ref name="stop" scoped="" ref="0x40e2c778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e74860" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e74860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403525d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403525d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e74a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e74c48" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e74c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e726a0"/>
        <function-ref name="test" scoped="" ref="0x40e721b0"/>
        <function-ref name="get" scoped="" ref="0x40e732a8"/>
        <function-ref name="setScale" scoped="" ref="0x40e72918"/>
        <function-ref name="getScale" scoped="" ref="0x40e72bb8"/>
        <function-ref name="reset" scoped="" ref="0x40e73a38"/>
        <function-ref name="overflow" scoped="" ref="0x40e737c0"/>
        <function-ref name="isOn" scoped="" ref="0x40e72428"/>
        <function-ref name="set" scoped="" ref="0x40e73520"/>
        <function-ref name="start" scoped="" ref="0x40e73cb0"/>
        <function-ref name="stop" scoped="" ref="0x40e73f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e76e40" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e76e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d4d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e755e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e75ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e75858"/>
        <function-ref name="overflow" scoped="" ref="0x40e75d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e6f050" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e6f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e6da98"/>
        <function-ref name="test" scoped="" ref="0x40e6d5a8"/>
        <function-ref name="get" scoped="" ref="0x40e6f698"/>
        <function-ref name="setScale" scoped="" ref="0x40e6dd10"/>
        <function-ref name="getScale" scoped="" ref="0x40e6c010"/>
        <function-ref name="reset" scoped="" ref="0x40e6fe28"/>
        <function-ref name="overflow" scoped="" ref="0x40e6fbb0"/>
        <function-ref name="isOn" scoped="" ref="0x40e6d820"/>
        <function-ref name="set" scoped="" ref="0x40e6f910"/>
        <function-ref name="start" scoped="" ref="0x40e6d0b8"/>
        <function-ref name="stop" scoped="" ref="0x40e6d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40e690e0" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40e690e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d4d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e69830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e69d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e69aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40e68010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e0ce68" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e0ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ad8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403ada90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e6a5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e6aad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e6a858"/>
        <function-ref name="overflow" scoped="" ref="0x40e6ad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40e66928" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40e66928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40e66b00"/>
        <function-ref name="offset" scoped="" ref="0x40e66be0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40e66cc0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403faed0" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403fa360" loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40407168" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40407010" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404007b8" loc="31:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40400df0" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40400c98" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404084e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40408390" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40408a40" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40410e00" loc="44:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4040f210" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40410670" loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4040f9e0" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40410a30" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4040f5e8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4040bf08" loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404102c0" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x400329d0" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4036a3b0" loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40032e10" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4036b2d0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4036b7e8" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d8b90" loc="76:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403ede90" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40392010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403ed1a8" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40503738" loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405035e0" loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40502730" loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405025d8" loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40506d00" loc="104:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40503c48" loc="130:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40547558" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
              <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40547010" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x405471f0" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405473d0" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40554168" loc="177:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40554010" loc="177:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4055aa10" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4055a8b8" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40549938" loc="68:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4055a010" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40549e78" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40558378" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40558010" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40558218" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40559668" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40559300" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40559508" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40556a68" loc="147:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40556910" loc="147:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x405555e8" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405552b8" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40555488" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e2778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40558f18" loc="136:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40558dc0" loc="136:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40554de8" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40554a88" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40554c88" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4055f670" loc="195:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x405462a0" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40546148" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40546c70" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40546b18" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40551c00" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405518a0" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40551a80" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405512b8" loc="106:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x405508f8" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405505b8" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40550798" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40568460" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x405688a8" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40568d28" loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405675b0" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x405652b8" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40565760" loc="117:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40567168" loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40565ea0" loc="134:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40565d48" loc="134:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40568038" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40567a30" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40567e58" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40540a08" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x405404a8" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405406c0" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405408a0" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4054a5c0" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054a260" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4054a440" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4054bce8" loc="123:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4054c6c8" loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054c570" loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4054b3e0" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054b088" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4054b280" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x405ae3e0" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x405ae068" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405ae280" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x405b5590" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b51f8" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x405b5430" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x405c4088" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b5ef8" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x405b7ce0" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x405b7660" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x405b7508" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x405afc88" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405afb30" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x405b97c8" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b9670" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x405ba2a0" loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ba148" loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x405c0168" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c0010" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x405c34e0" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c3148" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x405c3380" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x405c27e8" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c2690" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x405c2170" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c3d20" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x405c2010" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x405c0a88" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c0930" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x405be300" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x405ade08" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x405adcb0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x405be800" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x405bb240" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405bb240"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405bb3a8" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bb3a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x405ca5b0" loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bb3a8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ca458" loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x405cb088" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405caef0" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x405bba30" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb8d8" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405cbb48" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bb3a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cb7d8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405cb9e8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bb3a8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x405cec00" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x405cec00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x405dbee0" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dbd88" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405db8c0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x405cec00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405db768" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x405db2a0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405db148" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405d9698" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x405cec00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d9320" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405d9538" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x405cec00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405e1bb0" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405e1bb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405e20c8" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x405d6c40" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d6ae8" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x405ee4a8" loc="120:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x405efb78" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x405ef578" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x405ee038" loc="102:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405eeba0" loc="128:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x405fcd08" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fcbb0" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x405fc138" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405fc738" loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fc5e0" loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405facc8" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fa928" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405fab68" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405fa528" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fa188" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405fa3c8" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x405f9850" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40534d30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f96f8" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x405f8010" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40534d30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f9c30" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x405f9e60" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40534d30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405f92a0" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f9148" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x405f8450" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40534d30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405f4940" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x405f43e0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405f45f8" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405f47d8" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405f2b98" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f2838" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405f2a18" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405f22d8" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405f32e0" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f3188" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405f3cc0" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f3968" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405f3b60" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x4061f6b0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x4061e010" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4060edd8" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x40627860" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40627708" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x406265e8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40626490" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40617ae0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40617988" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40605d38" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40605be0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40627298" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40617f10" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40627138" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40617510" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406171a8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406173b0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40626010" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40627c88" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40627e88" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x4061a010" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x4061a618" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40619c48" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40619af0" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x4061acc8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061ab70" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x406194a0" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40619348" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x406360c8" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40637880" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x405369d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40637728" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x405369d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40637ca8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40637210" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40636588" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x405369d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x406326a0" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40632548" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40635ca8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40635b50" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x406349d8" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40634518" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406341b8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x406343b8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x406355b0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40635458" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40632088" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40634f00" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x406073e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4060cec0" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4060cd68" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40607ac8" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40607970" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x40606038" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40606768" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40606610" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x4060e188" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4060e030" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40613b18" loc="86:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40613680" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40613308" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40613520" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40616668" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40616510" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x40616d30" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40616bd8" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40614680" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40614308" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40614520" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x406096f0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40616010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40609c38" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40609e00" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40614d98" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40614c40" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x4062ed38" loc="131:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062ebe0" loc="131:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x4062fed8" loc="120:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062fd80" loc="120:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x40624e38" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40624ae8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x40624cd8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x40621220" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406210c8" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x4062a190" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062be10" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4062a030" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x40623b58" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40623a00" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x4062e728" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062e3e8" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x4062e5c8" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x406201c8" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40621e10" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40620068" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x4062b998" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062b840" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x406234b8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40623360" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x406311c0" loc="99:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40631068" loc="99:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x40620ad0" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40620758" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40620970" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x406298b8" loc="178:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40533010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x4062a7b8" loc="162:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062a660" loc="162:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40629418" loc="173:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40534d30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x4062b370" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062b010" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4062b210" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x406218d0" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40621778" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x4062f8c8" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062f578" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x4062f768" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x4062d548" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062d1f8" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x4062d3e8" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40629e90" loc="185:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40629d38" loc="185:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x406319c8" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406316a0" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40631868" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x40624630" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406244d8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4062aec8" loc="168:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062ad70" loc="168:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x4062db78" loc="141:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4062da20" loc="141:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x4062f090" loc="110:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40631f20" loc="110:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40611d08" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406119a8" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40611ba8" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x4060f1a8" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40608e78" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40608d20" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x406114d8" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40611380" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x4061d488" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061d330" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x4061ed90" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061ec38" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x4061d980" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x4061c058" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4061dee0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40678420" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40678420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40678588" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40678588"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40676848" loc="109:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40678588"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40677528" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40676200" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40678588"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40678588"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40677ea0" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40678588"/></type-var>
          </variable>
          <variable name="dt" ref="0x406760a0" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40678588"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40677998" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40676cd8" loc="116:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40678588"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40678bb8" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40678588"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40678a60" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40678588"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406770c8" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x4067e410" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x4067e9e0" loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x4067d038" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x4067e010" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x4069eee8" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069ed90" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4069a010" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069be08" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4069b870" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069b518" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4069b710" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40699010" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
              <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069ae38" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x406a19a0" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x406b4258" loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x406a1e10" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x406a14b0" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x406a1148" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e29d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x406a1350" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x407099b0" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40706010" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40708be0" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40708720" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40705298" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40705798" loc="98:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40713530" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40707eb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407133d8" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40707eb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x407141c8" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40714888" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40707eb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40714730" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40707eb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40714e38" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40707eb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x407e54c0" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
              <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407e5348" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x407e8cc8" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407e8b70" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407f0200" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407f00a8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x407f0660" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407df780" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407df628" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407dfca8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407dfb50" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x407dd168" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407dd010" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x407dde10" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407ddcb8" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x407dd818" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407dd6c0" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x407f4598" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407f4440" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x407e0a88" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407e0930" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e2c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x4083cac0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408394e8" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40839b10" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x408399b8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40838010" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40839010" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40838530" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x4083b590" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4083b438" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40836210" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4083bce8" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4083bb90" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x408901c8" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40878cf8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40895580" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40895580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40895bd0" loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40895580"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40895a78" loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40895580"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x408b48e0" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b4788" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408b8580" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b8428" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x408b8d50" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b8a10" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x408b8bf0" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408b4350" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b41f8" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x408d0330" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408d01d8" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x408d3ce8" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4091c398" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4091c398"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40919c28" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4091ba00" loc="83:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4091abc0" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4091a878" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4091aa60" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4091a3d0" loc="98:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x409185c0" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40918090" loc="144:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4091be90" loc="92:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4091c9f0" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4091c898" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40919608" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x409192c0" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x409194a8" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4091b168" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4091b010" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40214848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4091b638" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40910c88" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40910c88"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40910df0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40910df0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4092b2f0" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40910df0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4092bd18" loc="76:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4092b818" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40929138" loc="82:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x4094a2b8" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4092e818" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x4092f438" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4092edd8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x4092ec80" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x4092e3a8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4092e250" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4094a880" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4094a728" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x4092f888" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x4092fe00" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4092fca8" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x40940010" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x40943ca0" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x409420f8" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x409425d8" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x409404d0" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x40942ab8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x409431c8" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bc618"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403bc840"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x409437c0" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bc618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403bc840"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40943668" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403bc618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403bc840"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40931858" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40931858"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40947830" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40948760" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40931d50" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40931858"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40948b68" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40947c90" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40948320" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40931858"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409481c8" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40931858"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40947010" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40947408" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40937508" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40937508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40934d28" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40934498" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409379f8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40937508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x409332e0" loc="104:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40933188" loc="104:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40933770" loc="110:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40935860" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40935440" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40934900" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40935010" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40937508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40937e18" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40937508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40935c68" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40934070" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a526d0" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a526d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a52838" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a52838"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40a52e50" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a52838"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a52cf8" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a52838"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40a55e08" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40a4f7e8" loc="66:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a4f3a0" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a4f248" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40a55900" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40a54210" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a540b8" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40a54df8" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a54ca0" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40a54720" loc="68:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a53450" loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a532f8" loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40ae1808" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae1808"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40adb318" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40adb1c0" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40add910" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40ae1d00" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae1808"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40ade888" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae1808"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ade730" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae1808"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40adecc8" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40addd70" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ade2b0" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae1808"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ade158" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae1808"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40add0f8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40add4f0" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40af1368" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40af4d38" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40af1010" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40af1200" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40af09a8" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40af0228" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40af0440" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40af0630" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40af0838" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40af5870" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40af5718" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40b07460" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40b01b20" loc="126:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40b04ca8" loc="117:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40b00168" loc="128:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40b00010" loc="128:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40b07010" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40b03c20" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40b03ac8" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40b05ec8" loc="113:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40b05d70" loc="113:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40b07cf0" loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40afe218" loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40afe0c0" loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40b04338" loc="114:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40b00af0" loc="131:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40b00998" loc="131:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40aff3a8" loc="136:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40b016d8" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40b01580" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40affc70" loc="140:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40b03258" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40b03100" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40b052b8" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b05160" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40b04888" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40b04730" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40b010f8" loc="123:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40b00590" loc="129:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40b00f00" loc="132:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40aff800" loc="138:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40b03690" loc="120:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40b07888" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40b05880" loc="109:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b05728" loc="109:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40b3a500" loc="95:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b3a9e8" loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40b77a68" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b74010" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40b771f0" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b74a40" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b745d0" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b74478" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40b76588" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b76430" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b73020" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b74eb0" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40b77640" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40b76b00" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b769a8" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40b76010" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b77e88" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40c6f488" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c6f148" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c6f328" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40c6b190" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c6dd78" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c6b010" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40c6d818" loc="112:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c6e168" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c6e010" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40c6ee00" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c6eaa8" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40c6eca0" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40cb63a0" loc="31:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cb6010" loc="31:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40cb6240" loc="31:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40cb80c8" loc="15:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40cb8998" loc="23:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cb8620" loc="23:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405411f0"/>
                <typename><typedef-ref name="message_t" ref="0x40540010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40cb8838" loc="23:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40cc9b40" loc="95:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40cc3038" loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40cc2210" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40cc3db0" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40ca39b8" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40cc8698" loc="72:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40cc7790" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cc7638" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40cc8bc0" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40cc8168" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cc8010" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40cc7c98" loc="100:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40cc7138" loc="85:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40cceaa0" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40ccc090" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40cce490" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40cce338" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40ccc7c8" loc="91:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ccc670" loc="91:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40ca49c8" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40cca1e0" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cca088" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40cca878" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40cca720" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d57af0" loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d577a0" loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d57990" loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40d82e88" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d82d30" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40d7f6a8" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d7f358" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d7f548" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40d822f0" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40d7e560" loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d7e010" loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d7e200" loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d7e3f8" loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40d82878" loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40d81968" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d81418" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d81608" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402141e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d81800" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d6e8b8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d6e760" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40d9a170" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d6ede8" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40d9a010" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40d8e850" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40d8e010" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40d8de38" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d8dce0" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40d8d538" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40d91728" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40d91b68" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40d8e450" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40368da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40d8ec50" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40d8d188" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d8d030" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40d8d908" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40213b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
