<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:RSSILocAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40419a20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4041f2a0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4041f2a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40420a28"/></to>
    </wire>
    <wire loc="21:RSSILocAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40419d88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4051d010"/></to>
    </wire>
    <wire loc="51:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4051d010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40523698"/></to>
    </wire>
    <wire loc="22:RSSILocAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x405494b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4058a330"/></to>
    </wire>
    <wire loc="52:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4058a330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405921b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:RSSILocAppC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x405723c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c95010"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c95010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x410378d0"/></to>
    </wire>
    <wire loc="24:RSSILocAppC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x40578470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c956a8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c956a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41036010"/></to>
    </wire>
    <wire loc="25:RSSILocAppC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4057e410"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c3d938"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40c3d938"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41037238"/></to>
    </wire>
    <wire loc="26:RSSILocAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4057cde0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4068ae78"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4068ae78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406b8010"/></to>
    </wire>
    <wire loc="27:RSSILocAppC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40576010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c92d30"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c92d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4069a158"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:RSSILocAppC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405854f8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x406db580"/></to>
    </wire>
    <wire loc="305:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x406db580"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a211c0"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41000ae8"/></to>
    </wire>
    <wire loc="119:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40a32590"/></to>
    </wire>
    <wire loc="52:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097b5f8"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40f5cd68"/></to>
    </wire>
    <wire loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408d5040"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f41be8"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ed34b8"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405a0af0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40420dc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403675f0"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403675f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403d6820"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40517400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40ad2698"/></to>
    </wire>
    <wire loc="122:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40517400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a33f10"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40517400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4041d0b0"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4041d0b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40426b98"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40517808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404260f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bca480"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40422968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4050c010"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4042a418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404fcbf8"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4042a010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40539a38"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4042a010"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40425410"/></to>
    </wire>
    <wire loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40425410"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404303d0"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404257e0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404260f8"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x404359e8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x4043adc8"/></to>
    </wire>
    <wire loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4043adc8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40487170"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4042f4a8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404257e0"/></to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x40458210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404dc0b0"/></to>
    </wire>
    <wire loc="165:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4044a750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404a0090"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404a0090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d623b0"/></to>
    </wire>
    <wire loc="176:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4044dce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404a3d68"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404a3d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db3538"/></to>
    </wire>
    <wire loc="185:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40452ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404b27d0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404b27d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ddb228"/></to>
    </wire>
    <wire loc="196:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x4045f750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404e6880"/></to>
    </wire>
    <wire loc="143:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404382f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404864f0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404864f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc5538"/></to>
    </wire>
    <wire loc="183:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40453a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b34f0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404b34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ddfde0"/></to>
    </wire>
    <wire loc="146:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40441750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4048d3d8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4048d3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cef418"/></to>
    </wire>
    <wire loc="157:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x40445ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4049b170"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4049b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d3c228"/></to>
    </wire>
    <wire loc="168:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40448670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4049fd68"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4049fd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d5d228"/></to>
    </wire>
    <wire loc="179:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40455c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404adac8"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404adac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dae538"/></to>
    </wire>
    <wire loc="138:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40427f20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40489410"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40489410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ccd010"/></to>
    </wire>
    <wire loc="149:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4043f670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4048b030"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4048b030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cea228"/></to>
    </wire>
    <wire loc="160:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x40443ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4049ae48"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4049ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d370b0"/></to>
    </wire>
    <wire loc="171:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404504b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4049cac8"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4049cac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d850b0"/></to>
    </wire>
    <wire loc="188:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4045ace8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404b04f0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404b04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dd50b0"/></to>
    </wire>
    <wire loc="194:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404562f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404e0880"/></to>
    </wire>
    <wire loc="174:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4044f8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404a4a80"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404a4a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db6010"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40487170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc8010"/></to>
    </wire>
    <wire loc="152:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x4043d590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4048ac88"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4048ac88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d120b0"/></to>
    </wire>
    <wire loc="192:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40458e08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404d9880"/></to>
    </wire>
    <wire loc="155:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40446a08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40492dc8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40492dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d15de8"/></to>
    </wire>
    <wire loc="166:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x40449210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404a09e8"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404a09e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d61d70"/></to>
    </wire>
    <wire loc="177:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4044c750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404a2790"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404a2790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db1010"/></to>
    </wire>
    <wire loc="186:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404518e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404b1170"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404b1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dd9c08"/></to>
    </wire>
    <wire loc="144:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40438ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40486e48"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40486e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc3010"/></to>
    </wire>
    <wire loc="147:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x40440210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4048dd30"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4048dd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ceede0"/></to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404448e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4049bac8"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4049bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d3bc08"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404470a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4049e790"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4049e790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d5bc08"/></to>
    </wire>
    <wire loc="180:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40454670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404ac4f0"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404ac4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dac010"/></to>
    </wire>
    <wire loc="139:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x4043b930"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40489d68"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40489d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ccc9e8"/></to>
    </wire>
    <wire loc="150:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4043e0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4048b988"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4048b988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ce9c08"/></to>
    </wire>
    <wire loc="161:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x40442750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404997d0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404997d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d36a88"/></to>
    </wire>
    <wire loc="189:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40459750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404b0e48"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404b0e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dd4a88"/></to>
    </wire>
    <wire loc="164:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4044bc08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404a16f8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404a16f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d64938"/></to>
    </wire>
    <wire loc="175:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4044d2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404a3410"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404a3410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db59e8"/></to>
    </wire>
    <wire loc="184:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404524b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b3e48"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404b3e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ddd7f8"/></to>
    </wire>
    <wire loc="195:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40456ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404e80b0"/></to>
    </wire>
    <wire loc="142:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40439830"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40487ac8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40487ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc79e8"/></to>
    </wire>
    <wire loc="153:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40446010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404956b0"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404956b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d10a88"/></to>
    </wire>
    <wire loc="182:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404530a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404a8b00"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404a8b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de0418"/></to>
    </wire>
    <wire loc="156:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404454b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40490790"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40490790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d3e7f8"/></to>
    </wire>
    <wire loc="167:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40449c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4049f410"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4049f410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d5f7f8"/></to>
    </wire>
    <wire loc="178:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x40455210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404ad170"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404ad170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db09e8"/></to>
    </wire>
    <wire loc="187:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4045a2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404b1ac8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404b1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dd76c0"/></to>
    </wire>
    <wire loc="137:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40427528"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4047ea28"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4047ea28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ccf538"/></to>
    </wire>
    <wire loc="148:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40440c08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4048c6b0"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4048c6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cec7f8"/></to>
    </wire>
    <wire loc="159:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404432f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4049a4f0"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4049a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d396c0"/></to>
    </wire>
    <wire loc="170:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40447a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4049c170"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4049c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d596c0"/></to>
    </wire>
    <wire loc="193:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40457830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404e20b0"/></to>
    </wire>
    <wire loc="173:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40450ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404a4128"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404a4128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d88538"/></to>
    </wire>
    <wire loc="162:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4044b210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40498170"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40498170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d34538"/></to>
    </wire>
    <wire loc="140:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x4043a3d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40488790"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40488790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cca538"/></to>
    </wire>
    <wire loc="151:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x4043eb18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4048a330"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4048a330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ce76c0"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403d5100"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d5d68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40362728"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e9218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40613f20"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40539a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40523350"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40522400"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x4051cba8"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4051cba8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x4043b930"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40522de8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x4053a680"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4053a680"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40427f20"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4052f820"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x405390b0"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405390b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40427528"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405921b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4059c2b0"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4059c2b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40662600"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405a0af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405a89f8"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x405a6310"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406800a0"/></to>
    </wire>
    <wire loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405a89f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4063b418"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40685968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405a5720"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40656a48"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x405a41c8"/></to>
    </wire>
    <wire loc="36:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x405a41c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4063b850"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40680a38"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x405aada0"/></to>
    </wire>
    <wire loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x405aada0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40639340"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40639340"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e59a88"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4063b418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e5cbe8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4063b850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e5b030"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e58c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405ff550"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405ff550"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406065f8"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40e56ec0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405fc878"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405fc878"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406048d0"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e548d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405fb418"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405fb418"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40603418"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40e522e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40609010"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40609010"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40612398"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x406534d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40682bc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406b8010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406cb140"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40696f08"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406b6010"/></to>
    </wire>
    <wire loc="84:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406b6010"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406c91b0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40699270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b5190"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406b5190"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406c7110"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4069b770"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406b88e8"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406b88e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406cba18"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4069a7f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406b7960"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406b7960"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406cab10"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406a1830"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x406b4b38"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406b4b38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x406d1978"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4069a158"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406b72c8"/></to>
    </wire>
    <wire loc="82:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406b72c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406ca478"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406a5b10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406b45b0"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406b45b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d13f0"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406af1b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x406b31b8"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406b31b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x406d0010"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40699960"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b5880"/></to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406b5880"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406c8380"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406b0bb8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x406b38d0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406b38d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x406d0728"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x406ab7c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406c0a28"/></to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406c0a28"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406ec8c0"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406ad1a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406bc488"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406bc488"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406ea3a0"/></to>
    </wire>
    <wire loc="215:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406cb140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40902b88"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x406c38a0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x406db580"/></to>
    </wire>
    <wire loc="270:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406ea3a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409b9108"/></to>
    </wire>
    <wire loc="124:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406c91b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x407d03d0"/></to>
    </wire>
    <wire loc="126:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406c7110"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407d2d48"/></to>
    </wire>
    <wire loc="121:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406cba18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407d1490"/></to>
    </wire>
    <wire loc="123:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406cab10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x407d0010"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x406c4530"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x406dd218"/></to>
    </wire>
    <wire loc="303:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x406dd218"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a24e18"/></to>
    </wire>
    <wire loc="216:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406d1978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40919150"/></to>
    </wire>
    <wire loc="122:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406ca478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407d1bd0"/></to>
    </wire>
    <wire loc="269:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406ec8c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409e98f8"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406bee70"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x406dacd8"/></to>
    </wire>
    <wire loc="307:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406dacd8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a1c138"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x406c50e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x406d0e18"/></to>
    </wire>
    <wire loc="304:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x406d0e18"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a1f960"/></to>
    </wire>
    <wire loc="248:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d13f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4098eb18"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406b6710"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x406c98b0"/></to>
    </wire>
    <wire loc="128:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406c98b0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x407d07b0"/></to>
    </wire>
    <wire loc="187:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406d0010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x408f1488"/></to>
    </wire>
    <wire loc="125:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406c8380"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407d2170"/></to>
    </wire>
    <wire loc="224:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406d0728"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4090ec20"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406be978"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406da7e0"/></to>
    </wire>
    <wire loc="306:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406da7e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a1dc00"/></to>
    </wire>
    <wire loc="87:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406b6df0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x406c8010"/></to>
    </wire>
    <wire loc="129:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406c8010"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x407d0b90"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40902b88"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40919758"/></to>
    </wire>
    <wire loc="88:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a211c0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a2fd18"/></to>
    </wire>
    <wire loc="160:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x406c6778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4084b190"/></to>
    </wire>
    <wire loc="148:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x406d2f18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407ec170"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407ec170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ed27f0"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x407d03d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40ed0ef0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407d1490"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ed0010"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x407d0010"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40ed0b30"/></to>
    </wire>
    <wire loc="161:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x406df098"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x408c4e30"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x408c4e30"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40f37e38"/></to>
    </wire>
    <wire loc="162:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x406dfbf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408180e8"/></to>
    </wire>
    <wire loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a24e18"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a309b0"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40919150"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40f5f448"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407d2d48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e9b850"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407d1bd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ed0750"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409e98f8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40fb23e0"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a1c138"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ad51e0"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a1f960"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a2a520"/></to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x406d5ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40818780"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x407d07b0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40ecf2e8"/></to>
    </wire>
    <wire loc="117:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x408f1488"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40906830"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4090ec20"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40f5a980"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407d2170"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40e9cc40"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409b9108"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40fb7c20"/></to>
    </wire>
    <wire loc="159:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x406c6328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40818e38"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a1dc00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a29768"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x407d0b90"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40ecf6c8"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4070eb80"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408c5450"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408c5450"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40f38490"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40720118"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40756790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4071cde8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409e98f8"/></to>
    </wire>
    <wire loc="105:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x4071c420"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a24478"/></to>
    </wire>
    <wire loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a24478"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a30010"/></to>
    </wire>
    <wire loc="110:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40768088"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a1cb98"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a1cb98"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ab3698"/></to>
    </wire>
    <wire loc="116:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x407cfee0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x407081f0"/></to>
    </wire>
    <wire loc="117:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407cf6b0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x407e1ab0"/></to>
    </wire>
    <wire loc="118:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407cfba8"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x4085b528"/></to>
    </wire>
    <wire loc="119:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407d0f08"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x4085b860"/></to>
    </wire>
    <wire loc="137:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407e04e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407ec170"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407e0010"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x4085b030"/></to>
    </wire>
    <wire loc="153:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4084b4d8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408c5450"/></to>
    </wire>
    <wire loc="154:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408496c8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40844050"/></to>
    </wire>
    <wire loc="155:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40849bc0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40844548"/></to>
    </wire>
    <wire loc="156:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4084af10"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40844880"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4085a050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408bf1d8"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408bf1d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f41318"/></to>
    </wire>
    <wire loc="170:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4085a548"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f1170"/></to>
    </wire>
    <wire loc="114:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408f1170"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40908858"/></to>
    </wire>
    <wire loc="171:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4085a880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x408c3890"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408c3890"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40f36890"/></to>
    </wire>
    <wire loc="176:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408c2090"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x408f1b20"/></to>
    </wire>
    <wire loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408f1b20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40908b90"/></to>
    </wire>
    <wire loc="181:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408f4428"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40700d70"/></to>
    </wire>
    <wire loc="182:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408bfaf8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408f2c08"/></to>
    </wire>
    <wire loc="113:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408f2c08"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40908360"/></to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40906318"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4098eb18"/></to>
    </wire>
    <wire loc="193:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40908360"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40901178"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40901178"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40919d30"/></to>
    </wire>
    <wire loc="194:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40908858"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40901670"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40901670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40912250"/></to>
    </wire>
    <wire loc="195:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40908b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40901988"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40901988"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40912588"/></to>
    </wire>
    <wire loc="211:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40919758"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4090fd98"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4090fd98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f5c790"/></to>
    </wire>
    <wire loc="212:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40919d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4090e410"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4090e410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f5a170"/></to>
    </wire>
    <wire loc="213:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40912250"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4090e908"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4090e908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f5a668"/></to>
    </wire>
    <wire loc="214:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40912588"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409e6010"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409e6010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40fb1a78"/></to>
    </wire>
    <wire loc="221:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4094a8f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40964538"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40964538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40f71768"/></to>
    </wire>
    <wire loc="222:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4094add0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408bf6b0"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408bf6b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40f417f0"/></to>
    </wire>
    <wire loc="223:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4094a180"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a0e940"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40a0e940"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40a0a760"/></to>
    </wire>
    <wire loc="228:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408f4010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40964a10"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40964a10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40f71c40"/></to>
    </wire>
    <wire loc="237:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4097fe20"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x406fbc58"/></to>
    </wire>
    <wire loc="238:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40964e58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4098e248"/></to>
    </wire>
    <wire loc="239:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4097f370"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4098e720"/></to>
    </wire>
    <wire loc="240:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4097f768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40756790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x409b2988"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a02490"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4098c950"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40756790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409b2030"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x406f0688"/></to>
    </wire>
    <wire loc="253:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4098c060"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409c23f0"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409c23f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409be330"/></to>
    </wire>
    <wire loc="254:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4098c558"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409c28c8"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409c28c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409be828"/></to>
    </wire>
    <wire loc="259:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409bd828"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x407071c0"/></to>
    </wire>
    <wire loc="260:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409be330"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a0d150"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40a0d150"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a09010"/></to>
    </wire>
    <wire loc="261:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409be828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a0d628"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a0d628"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a09508"/></to>
    </wire>
    <wire loc="262:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x409bec40"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a24010"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a24010"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a31b58"/></to>
    </wire>
    <wire loc="267:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409e6868"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a1c138"/></to>
    </wire>
    <wire loc="268:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409e5108"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a02a58"/></to>
    </wire>
    <wire loc="271:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x409e58a0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a02490"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a01280"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a24478"/></to>
    </wire>
    <wire loc="286:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a084f0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x407071c0"/></to>
    </wire>
    <wire loc="287:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a09010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a25610"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40a25610"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a311b0"/></to>
    </wire>
    <wire loc="288:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a09508"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a25b68"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a25b68"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a31708"/></to>
    </wire>
    <wire loc="289:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40a0a760"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a06e18"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40a06e18"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a32910"/></to>
    </wire>
    <wire loc="301:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a19650"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x406f5248"/></to>
    </wire>
    <wire loc="302:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a18010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409e98f8"/></to>
    </wire>
    <wire loc="309:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a177d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a02490"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a17e68"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a02490"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a37538"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a02490"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a37b58"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40756790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40756790"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40eac8a8"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40eaa0c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40768088"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40ea9a50"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4076a220"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40ecc3f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407c7820"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ecfa40"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407d0f08"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ecd250"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407cf6b0"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ecd748"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407cfba8"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40ecda80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x407cfee0"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x407ec8b0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40ed1010"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407eccb8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ed1418"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40ed18d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4081b208"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40ed1d00"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40ed37f0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f04350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f35070"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407c7820"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f35648"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408c2090"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40f3feb8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408da438"/></to>
    </wire>
    <wire loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408da438"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408d53d8"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40f3e580"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40f3d9c0"/></to>
    </wire>
    <wire loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40f3d9c0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408d5e00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f3f010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408bfaf8"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f3f508"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408f4010"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x40f3f900"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408f4428"/></to>
    </wire>
    <wire loc="118:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40906f08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40906318"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40f5ae88"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4094a180"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40f59610"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4076a220"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40f59bc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4094a8f8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40f57150"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4094add0"/></to>
    </wire>
    <wire loc="189:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40f579c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x40f57df8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x40f57588"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40fa50a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40964e58"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40fa4458"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4097fe20"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40fa5598"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4097f370"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40fa5990"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4097f768"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40fa4040"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097d948"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4097d948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40978478"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x40fa4a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4097d088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4097bb18"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40981de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097b5f8"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409aee40"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409c1c50"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409c2cc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409bec40"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409adc20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409c0a80"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409c1150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409bd090"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409c18e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409bd828"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x409ad908"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x409c0748"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x409ad430"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x409c0250"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40faeb48"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409e5108"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40faf8e8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409e6868"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40fae2d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409eec50"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409eec50"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x405a6310"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40faf280"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x409e58a0"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a0fb50"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a0c938"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a0da20"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40a09920"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a0de18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a09d38"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a0c5d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a084f0"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40a0e628"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40a0a428"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40a0e150"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40a0cf10"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40ab3698"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ba9c88"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a20598"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a2c100"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ad51e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bf1578"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a40bc0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a19650"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a3e448"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a177d0"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a3eae0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40a17e68"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a3d258"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a37538"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a3da60"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a18010"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a40258"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ad51e0"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a3b8a0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a37b58"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a29b80"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40ab61f0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40ab61f0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40441750"/></to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a28698"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40ab6c10"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40ab6c10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ae5588"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a45d10"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ab5380"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40ab5380"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ae25f0"/></to>
    </wire>
    <wire loc="107:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a273d0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40ab59f8"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40ab59f8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40446010"/></to>
    </wire>
    <wire loc="108:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a27db8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40ab44a0"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40ab44a0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x404382f0"/></to>
    </wire>
    <wire loc="110:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a42f18"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40ab4e88"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40ab4e88"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40ad2010"/></to>
    </wire>
    <wire loc="111:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a3b280"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4076a220"/></to>
    </wire>
    <wire loc="112:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a3f770"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40c12010"/></to>
    </wire>
    <wire loc="847:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40a931e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40ba9c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4101d138"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40ae25f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40adedb8"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40bf1578"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c18f18"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40acbae0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40447a98"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40aca598"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x40448670"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40accd40"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b67b28"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40b67b28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b7c258"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40ae0dc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40adb450"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40ae2248"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40adea30"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ad3578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ade6d0"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ae5588"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40adbb80"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40ad88c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b4cca0"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b4cca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ffde18"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40aed010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b4b890"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b4b890"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ffc9b0"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40aeebc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40adc9c0"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40adc9c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40b2fd58"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40aed490"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></to>
    </wire>
    <wire loc="296:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40affbe0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40b26598"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40b27ca0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40441750"/></to>
    </wire>
    <wire loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40b29730"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x40440210"/></to>
    </wire>
    <wire loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40b28128"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40440c08"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40b28b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x4043f670"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b4b488"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40ffc5a8"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40ffce70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b4bd40"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40ffb2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41000e20"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40ffb8a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b62e10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b58530"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b464b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b5a230"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b60d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b7a128"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b60d50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b79d20"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b60d50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b76950"/></to>
    </wire>
    <wire loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x4101cb38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b464b0"/></to>
    </wire>
    <wire loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x41019dd8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b60d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bca868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b464b0"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c178c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bebe60"/></to>
    </wire>
    <wire loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40c1a0e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bed690"/></to>
    </wire>
    <wire loc="31:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bed690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40be8e90"/></to>
    </wire>
    <wire loc="32:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c05078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b464b0"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41037238"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41033998"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x410378d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40699270"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41036010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40699960"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40c94330"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41036c08"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41036c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406a5b10"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41030080"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c4c9f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41030718"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40699960"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c4c9f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c9f908"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40c9e0a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4069b770"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c9e750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40699960"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c9d3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40699270"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40c9dac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40c9df00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c91070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40699270"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c91708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40699960"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RSSILocC" loc="5:RSSILocC.nc">
      <module/>
    </component>
    <component qname="RSSILocAppC.Timer0" loc="44(RSSILocAppC.Timer0):/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405ad948"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RSSILocAppC.AMSenderC" loc="47(RSSILocAppC.AMSenderC):/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RSSILocAppC.AMSenderC.SenderC" loc="47(RSSILocAppC.AMSenderC.SenderC):/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RSSILocAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(RSSILocAppC.AMSenderC.SenderC.AMQueueEntryP):/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RSSILocAppC.AMReceiverC" loc="43(RSSILocAppC.AMReceiverC):/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4045d5d8" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4045d7f0" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4045da08" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404689e0" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40468c08" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40468e30" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40465030" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404b6088" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404b62b0" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404b64d8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404b66c8" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x405ad948" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405ad948"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405adb08" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x405b3c50" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405b3c50"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405b3e10" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40647328" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40647328"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40664838" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40664838"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40664a18" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40691010" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40691010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x407ee7e8" loc="83:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x407fb570" loc="42:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40bcbc38" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bcbc38"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40bcbe58" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40bcd938" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40bcd938"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bcdd80" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bcdd80"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40bbe010" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40be9470" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40be9470"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40be98b8" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40be98b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40c005e0" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40c005e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40c00a40" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40c00a40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40c00ca8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40c00ca8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40bff148" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40bff148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40bff3b0" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40bff838" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40bff838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c3b010" loc="47:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c39b90" loc="47:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40c5d6b8" loc="43:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40c70010" loc="45:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40c93610" loc="43:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x4041fec8" loc="58:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4041fec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404210c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4041f2a0" loc="57:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4041f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4041f478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404260f8" loc="52:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404260f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404262d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4041d0b0" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4041d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041d288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40422968" loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40422968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40422b40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40422c20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40422d00"/>
        <function-ref name="actualMicro" scoped="" ref="0x40422de0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40422ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x4042a010" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x4042a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40426b98" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40426b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40426d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4042a418" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4042a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042a5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404257e0" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404257e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404259b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40425410" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40425410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404255e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4042f4a8" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4042f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x404359e8" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x404359e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40435ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40435d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40435e60"/>
        <function-ref name="get" scoped="" ref="0x4042f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f0f0"/>
        <function-ref name="set" scoped="" ref="0x4042f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4042f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404303d0" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404303d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404305a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x40458210" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x40458210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404585e8"/>
        <function-ref name="isInput" scoped="" ref="0x404586c8"/>
        <function-ref name="toggle" scoped="" ref="0x404587a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40458888"/>
        <function-ref name="get" scoped="" ref="0x40458968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40458a48"/>
        <function-ref name="set" scoped="" ref="0x40458b28"/>
        <function-ref name="clr" scoped="" ref="0x40458c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4044a750" loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4044a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044a928"/>
        <function-ref name="isInput" scoped="" ref="0x4044aa08"/>
        <function-ref name="toggle" scoped="" ref="0x4044aae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044abc8"/>
        <function-ref name="get" scoped="" ref="0x4044aca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044ad88"/>
        <function-ref name="set" scoped="" ref="0x4044ae68"/>
        <function-ref name="clr" scoped="" ref="0x40449010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4044dce8" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4044dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044dec0"/>
        <function-ref name="isInput" scoped="" ref="0x4044c010"/>
        <function-ref name="toggle" scoped="" ref="0x4044c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044c1d0"/>
        <function-ref name="get" scoped="" ref="0x4044c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044c390"/>
        <function-ref name="set" scoped="" ref="0x4044c470"/>
        <function-ref name="clr" scoped="" ref="0x4044c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40452ea8" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40452ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404510c0"/>
        <function-ref name="isInput" scoped="" ref="0x404511a0"/>
        <function-ref name="toggle" scoped="" ref="0x40451280"/>
        <function-ref name="isOutput" scoped="" ref="0x40451360"/>
        <function-ref name="get" scoped="" ref="0x40451440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451520"/>
        <function-ref name="set" scoped="" ref="0x40451600"/>
        <function-ref name="clr" scoped="" ref="0x404516e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x4045f750" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x4045f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f928"/>
        <function-ref name="isInput" scoped="" ref="0x4045fa08"/>
        <function-ref name="toggle" scoped="" ref="0x4045fae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045fbc8"/>
        <function-ref name="get" scoped="" ref="0x4045fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045fd88"/>
        <function-ref name="set" scoped="" ref="0x4045fe68"/>
        <function-ref name="clr" scoped="" ref="0x4045e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404382f0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404382f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404384c8"/>
        <function-ref name="isInput" scoped="" ref="0x404385a8"/>
        <function-ref name="toggle" scoped="" ref="0x40438688"/>
        <function-ref name="isOutput" scoped="" ref="0x40438768"/>
        <function-ref name="get" scoped="" ref="0x40438848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438928"/>
        <function-ref name="set" scoped="" ref="0x40438a08"/>
        <function-ref name="clr" scoped="" ref="0x40438ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40453a98" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40453a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453c70"/>
        <function-ref name="isInput" scoped="" ref="0x40453d50"/>
        <function-ref name="toggle" scoped="" ref="0x40453e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40453f10"/>
        <function-ref name="get" scoped="" ref="0x40452010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404520f0"/>
        <function-ref name="set" scoped="" ref="0x404521d0"/>
        <function-ref name="clr" scoped="" ref="0x404522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40441750" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40441750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40441928"/>
        <function-ref name="isInput" scoped="" ref="0x40441a08"/>
        <function-ref name="toggle" scoped="" ref="0x40441ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40441bc8"/>
        <function-ref name="get" scoped="" ref="0x40441ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40441d88"/>
        <function-ref name="set" scoped="" ref="0x40441e68"/>
        <function-ref name="clr" scoped="" ref="0x40440010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x40445ea8" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x40445ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404440c0"/>
        <function-ref name="isInput" scoped="" ref="0x404441a0"/>
        <function-ref name="toggle" scoped="" ref="0x40444280"/>
        <function-ref name="isOutput" scoped="" ref="0x40444360"/>
        <function-ref name="get" scoped="" ref="0x40444440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40444520"/>
        <function-ref name="set" scoped="" ref="0x40444600"/>
        <function-ref name="clr" scoped="" ref="0x404446e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40448670" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40448670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448848"/>
        <function-ref name="isInput" scoped="" ref="0x40448928"/>
        <function-ref name="toggle" scoped="" ref="0x40448a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40448ae8"/>
        <function-ref name="get" scoped="" ref="0x40448bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448ca8"/>
        <function-ref name="set" scoped="" ref="0x40448d88"/>
        <function-ref name="clr" scoped="" ref="0x40448e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40455c08" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40455c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40455de0"/>
        <function-ref name="isInput" scoped="" ref="0x40455ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40454010"/>
        <function-ref name="isOutput" scoped="" ref="0x404540f0"/>
        <function-ref name="get" scoped="" ref="0x404541d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404542b0"/>
        <function-ref name="set" scoped="" ref="0x40454390"/>
        <function-ref name="clr" scoped="" ref="0x40454470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40427f20" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40427f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b110"/>
        <function-ref name="isInput" scoped="" ref="0x4043b1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4043b2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b3b0"/>
        <function-ref name="get" scoped="" ref="0x4043b490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b570"/>
        <function-ref name="set" scoped="" ref="0x4043b650"/>
        <function-ref name="clr" scoped="" ref="0x4043b730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4043f670" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4043f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043f848"/>
        <function-ref name="isInput" scoped="" ref="0x4043f928"/>
        <function-ref name="toggle" scoped="" ref="0x4043fa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4043fae8"/>
        <function-ref name="get" scoped="" ref="0x4043fbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043fca8"/>
        <function-ref name="set" scoped="" ref="0x4043fd88"/>
        <function-ref name="clr" scoped="" ref="0x4043fe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x40443ce8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x40443ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40443ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40442010"/>
        <function-ref name="toggle" scoped="" ref="0x404420f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404421d0"/>
        <function-ref name="get" scoped="" ref="0x404422b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40442390"/>
        <function-ref name="set" scoped="" ref="0x40442470"/>
        <function-ref name="clr" scoped="" ref="0x40442550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404504b0" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404504b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40450688"/>
        <function-ref name="isInput" scoped="" ref="0x40450768"/>
        <function-ref name="toggle" scoped="" ref="0x40450848"/>
        <function-ref name="isOutput" scoped="" ref="0x40450928"/>
        <function-ref name="get" scoped="" ref="0x40450a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450ae8"/>
        <function-ref name="set" scoped="" ref="0x40450bc8"/>
        <function-ref name="clr" scoped="" ref="0x40450ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4045ace8" loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4045ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045aec0"/>
        <function-ref name="isInput" scoped="" ref="0x40459010"/>
        <function-ref name="toggle" scoped="" ref="0x404590f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404591d0"/>
        <function-ref name="get" scoped="" ref="0x404592b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459390"/>
        <function-ref name="set" scoped="" ref="0x40459470"/>
        <function-ref name="clr" scoped="" ref="0x40459550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404562f0" loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404564c8"/>
        <function-ref name="isInput" scoped="" ref="0x404565a8"/>
        <function-ref name="toggle" scoped="" ref="0x40456688"/>
        <function-ref name="isOutput" scoped="" ref="0x40456768"/>
        <function-ref name="get" scoped="" ref="0x40456848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40456928"/>
        <function-ref name="set" scoped="" ref="0x40456a08"/>
        <function-ref name="clr" scoped="" ref="0x40456ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4044f8e0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4044f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044fab8"/>
        <function-ref name="isInput" scoped="" ref="0x4044fb98"/>
        <function-ref name="toggle" scoped="" ref="0x4044fc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4044fd58"/>
        <function-ref name="get" scoped="" ref="0x4044fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044ff18"/>
        <function-ref name="set" scoped="" ref="0x4044d010"/>
        <function-ref name="clr" scoped="" ref="0x4044d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4043adc8" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4043adc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439010"/>
        <function-ref name="isInput" scoped="" ref="0x404390f0"/>
        <function-ref name="toggle" scoped="" ref="0x404391d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404392b0"/>
        <function-ref name="get" scoped="" ref="0x40439390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439470"/>
        <function-ref name="set" scoped="" ref="0x40439550"/>
        <function-ref name="clr" scoped="" ref="0x40439630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x4043d590" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x4043d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043d768"/>
        <function-ref name="isInput" scoped="" ref="0x4043d848"/>
        <function-ref name="toggle" scoped="" ref="0x4043d928"/>
        <function-ref name="isOutput" scoped="" ref="0x4043da08"/>
        <function-ref name="get" scoped="" ref="0x4043dae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043dbc8"/>
        <function-ref name="set" scoped="" ref="0x4043dca8"/>
        <function-ref name="clr" scoped="" ref="0x4043dd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40458e08" loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40458e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457010"/>
        <function-ref name="isInput" scoped="" ref="0x404570f0"/>
        <function-ref name="toggle" scoped="" ref="0x404571d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404572b0"/>
        <function-ref name="get" scoped="" ref="0x40457390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457470"/>
        <function-ref name="set" scoped="" ref="0x40457550"/>
        <function-ref name="clr" scoped="" ref="0x40457630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40446a08" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40446a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40446be0"/>
        <function-ref name="isInput" scoped="" ref="0x40446cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40446da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40446e80"/>
        <function-ref name="get" scoped="" ref="0x40445010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404450f0"/>
        <function-ref name="set" scoped="" ref="0x404451d0"/>
        <function-ref name="clr" scoped="" ref="0x404452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x40449210" loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x40449210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404493e8"/>
        <function-ref name="isInput" scoped="" ref="0x404494c8"/>
        <function-ref name="toggle" scoped="" ref="0x404495a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40449688"/>
        <function-ref name="get" scoped="" ref="0x40449768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449848"/>
        <function-ref name="set" scoped="" ref="0x40449928"/>
        <function-ref name="clr" scoped="" ref="0x40449a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4044c750" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4044c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044c928"/>
        <function-ref name="isInput" scoped="" ref="0x4044ca08"/>
        <function-ref name="toggle" scoped="" ref="0x4044cae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044cbc8"/>
        <function-ref name="get" scoped="" ref="0x4044cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044cd88"/>
        <function-ref name="set" scoped="" ref="0x4044ce68"/>
        <function-ref name="clr" scoped="" ref="0x40455010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404518e0" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404518e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40451b98"/>
        <function-ref name="toggle" scoped="" ref="0x40451c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40451d58"/>
        <function-ref name="get" scoped="" ref="0x40451e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451f18"/>
        <function-ref name="set" scoped="" ref="0x4045a010"/>
        <function-ref name="clr" scoped="" ref="0x4045a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40438ce8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40438ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40441010"/>
        <function-ref name="toggle" scoped="" ref="0x404410f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404411d0"/>
        <function-ref name="get" scoped="" ref="0x404412b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40441390"/>
        <function-ref name="set" scoped="" ref="0x40441470"/>
        <function-ref name="clr" scoped="" ref="0x40441550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x40440210" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x40440210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404403e8"/>
        <function-ref name="isInput" scoped="" ref="0x404404c8"/>
        <function-ref name="toggle" scoped="" ref="0x404405a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40440688"/>
        <function-ref name="get" scoped="" ref="0x40440768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440848"/>
        <function-ref name="set" scoped="" ref="0x40440928"/>
        <function-ref name="clr" scoped="" ref="0x40440a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404448e0" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404448e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40444b98"/>
        <function-ref name="toggle" scoped="" ref="0x40444c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40444d58"/>
        <function-ref name="get" scoped="" ref="0x40444e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40444f18"/>
        <function-ref name="set" scoped="" ref="0x40443010"/>
        <function-ref name="clr" scoped="" ref="0x404430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404470a0" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447278"/>
        <function-ref name="isInput" scoped="" ref="0x40447358"/>
        <function-ref name="toggle" scoped="" ref="0x40447438"/>
        <function-ref name="isOutput" scoped="" ref="0x40447518"/>
        <function-ref name="get" scoped="" ref="0x404475f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404476d8"/>
        <function-ref name="set" scoped="" ref="0x404477b8"/>
        <function-ref name="clr" scoped="" ref="0x40447898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40454670" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40454670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454848"/>
        <function-ref name="isInput" scoped="" ref="0x40454928"/>
        <function-ref name="toggle" scoped="" ref="0x40454a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40454ae8"/>
        <function-ref name="get" scoped="" ref="0x40454bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40454ca8"/>
        <function-ref name="set" scoped="" ref="0x40454d88"/>
        <function-ref name="clr" scoped="" ref="0x40454e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x4043b930" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x4043b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043bb08"/>
        <function-ref name="isInput" scoped="" ref="0x4043bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x4043bcc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043bda8"/>
        <function-ref name="get" scoped="" ref="0x4043be88"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a010"/>
        <function-ref name="set" scoped="" ref="0x4043a0f0"/>
        <function-ref name="clr" scoped="" ref="0x4043a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4043e0a0" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4043e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043e2f8"/>
        <function-ref name="isInput" scoped="" ref="0x4043e3d8"/>
        <function-ref name="toggle" scoped="" ref="0x4043e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043e598"/>
        <function-ref name="get" scoped="" ref="0x4043e678"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043e758"/>
        <function-ref name="set" scoped="" ref="0x4043e838"/>
        <function-ref name="clr" scoped="" ref="0x4043e918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x40442750" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x40442750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40442928"/>
        <function-ref name="isInput" scoped="" ref="0x40442a08"/>
        <function-ref name="toggle" scoped="" ref="0x40442ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40442bc8"/>
        <function-ref name="get" scoped="" ref="0x40442ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40442d88"/>
        <function-ref name="set" scoped="" ref="0x40442e68"/>
        <function-ref name="clr" scoped="" ref="0x4044b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40459750" loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40459750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459928"/>
        <function-ref name="isInput" scoped="" ref="0x40459a08"/>
        <function-ref name="toggle" scoped="" ref="0x40459ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40459bc8"/>
        <function-ref name="get" scoped="" ref="0x40459ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459d88"/>
        <function-ref name="set" scoped="" ref="0x40459e68"/>
        <function-ref name="clr" scoped="" ref="0x40458010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4044bc08" loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4044bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044bee0"/>
        <function-ref name="isInput" scoped="" ref="0x4044a010"/>
        <function-ref name="toggle" scoped="" ref="0x4044a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044a1d0"/>
        <function-ref name="get" scoped="" ref="0x4044a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044a390"/>
        <function-ref name="set" scoped="" ref="0x4044a470"/>
        <function-ref name="clr" scoped="" ref="0x4044a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4044d2f0" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4044d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4044d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4044d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4044d768"/>
        <function-ref name="get" scoped="" ref="0x4044d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044d928"/>
        <function-ref name="set" scoped="" ref="0x4044da08"/>
        <function-ref name="clr" scoped="" ref="0x4044dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404524b0" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404524b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452688"/>
        <function-ref name="isInput" scoped="" ref="0x40452768"/>
        <function-ref name="toggle" scoped="" ref="0x40452848"/>
        <function-ref name="isOutput" scoped="" ref="0x40452928"/>
        <function-ref name="get" scoped="" ref="0x40452a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452ae8"/>
        <function-ref name="set" scoped="" ref="0x40452bc8"/>
        <function-ref name="clr" scoped="" ref="0x40452ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40456ce8" loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40456ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40456ec0"/>
        <function-ref name="isInput" scoped="" ref="0x4045f010"/>
        <function-ref name="toggle" scoped="" ref="0x4045f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f1d0"/>
        <function-ref name="get" scoped="" ref="0x4045f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f390"/>
        <function-ref name="set" scoped="" ref="0x4045f470"/>
        <function-ref name="clr" scoped="" ref="0x4045f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40439830" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40439830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439a08"/>
        <function-ref name="isInput" scoped="" ref="0x40439ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40439bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40439ca8"/>
        <function-ref name="get" scoped="" ref="0x40439d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439e68"/>
        <function-ref name="set" scoped="" ref="0x40438010"/>
        <function-ref name="clr" scoped="" ref="0x404380f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40446010" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40446010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404461e8"/>
        <function-ref name="isInput" scoped="" ref="0x404462c8"/>
        <function-ref name="toggle" scoped="" ref="0x404463a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40446488"/>
        <function-ref name="get" scoped="" ref="0x40446568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446648"/>
        <function-ref name="set" scoped="" ref="0x40446728"/>
        <function-ref name="clr" scoped="" ref="0x40446808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404530a0" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453278"/>
        <function-ref name="isInput" scoped="" ref="0x40453358"/>
        <function-ref name="toggle" scoped="" ref="0x40453438"/>
        <function-ref name="isOutput" scoped="" ref="0x40453518"/>
        <function-ref name="get" scoped="" ref="0x404535f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404536d8"/>
        <function-ref name="set" scoped="" ref="0x404537b8"/>
        <function-ref name="clr" scoped="" ref="0x40453898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404454b0" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404454b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40445688"/>
        <function-ref name="isInput" scoped="" ref="0x40445768"/>
        <function-ref name="toggle" scoped="" ref="0x40445848"/>
        <function-ref name="isOutput" scoped="" ref="0x40445928"/>
        <function-ref name="get" scoped="" ref="0x40445a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40445ae8"/>
        <function-ref name="set" scoped="" ref="0x40445bc8"/>
        <function-ref name="clr" scoped="" ref="0x40445ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40449c08" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40449c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449de0"/>
        <function-ref name="isInput" scoped="" ref="0x40449ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40448010"/>
        <function-ref name="isOutput" scoped="" ref="0x404480f0"/>
        <function-ref name="get" scoped="" ref="0x404481d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404482b0"/>
        <function-ref name="set" scoped="" ref="0x40448390"/>
        <function-ref name="clr" scoped="" ref="0x40448470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x40455210" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x40455210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404553e8"/>
        <function-ref name="isInput" scoped="" ref="0x404554c8"/>
        <function-ref name="toggle" scoped="" ref="0x404555a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40455688"/>
        <function-ref name="get" scoped="" ref="0x40455768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40455848"/>
        <function-ref name="set" scoped="" ref="0x40455928"/>
        <function-ref name="clr" scoped="" ref="0x40455a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4045a2f0" loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4045a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4045a5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4045a688"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a768"/>
        <function-ref name="get" scoped="" ref="0x4045a848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a928"/>
        <function-ref name="set" scoped="" ref="0x4045aa08"/>
        <function-ref name="clr" scoped="" ref="0x4045aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40427528" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40427528"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427700"/>
        <function-ref name="isInput" scoped="" ref="0x404277e0"/>
        <function-ref name="toggle" scoped="" ref="0x404278c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404279a0"/>
        <function-ref name="get" scoped="" ref="0x40427a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x40427b60"/>
        <function-ref name="set" scoped="" ref="0x40427c40"/>
        <function-ref name="clr" scoped="" ref="0x40427d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40440c08" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40440c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440de0"/>
        <function-ref name="isInput" scoped="" ref="0x40440ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4043f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f0f0"/>
        <function-ref name="get" scoped="" ref="0x4043f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f2b0"/>
        <function-ref name="set" scoped="" ref="0x4043f390"/>
        <function-ref name="clr" scoped="" ref="0x4043f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404432f0" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404434c8"/>
        <function-ref name="isInput" scoped="" ref="0x404435a8"/>
        <function-ref name="toggle" scoped="" ref="0x40443688"/>
        <function-ref name="isOutput" scoped="" ref="0x40443768"/>
        <function-ref name="get" scoped="" ref="0x40443848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40443928"/>
        <function-ref name="set" scoped="" ref="0x40443a08"/>
        <function-ref name="clr" scoped="" ref="0x40443ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40447a98" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40447a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447c70"/>
        <function-ref name="isInput" scoped="" ref="0x40447d50"/>
        <function-ref name="toggle" scoped="" ref="0x40447e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40447f10"/>
        <function-ref name="get" scoped="" ref="0x40450010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404500f0"/>
        <function-ref name="set" scoped="" ref="0x404501d0"/>
        <function-ref name="clr" scoped="" ref="0x404502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40457830" loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40457830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457a08"/>
        <function-ref name="isInput" scoped="" ref="0x40457ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40457bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40457ca8"/>
        <function-ref name="get" scoped="" ref="0x40457d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457e68"/>
        <function-ref name="set" scoped="" ref="0x40456010"/>
        <function-ref name="clr" scoped="" ref="0x404560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40450ea8" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40450ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4044f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4044f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4044f360"/>
        <function-ref name="get" scoped="" ref="0x4044f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f520"/>
        <function-ref name="set" scoped="" ref="0x4044f600"/>
        <function-ref name="clr" scoped="" ref="0x4044f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4044b210" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4044b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044b3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4044b4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4044b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044b688"/>
        <function-ref name="get" scoped="" ref="0x4044b768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044b848"/>
        <function-ref name="set" scoped="" ref="0x4044b928"/>
        <function-ref name="clr" scoped="" ref="0x4044ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x4043a3d0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x4043a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a5a8"/>
        <function-ref name="isInput" scoped="" ref="0x4043a688"/>
        <function-ref name="toggle" scoped="" ref="0x4043a768"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a848"/>
        <function-ref name="get" scoped="" ref="0x4043a928"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043aa08"/>
        <function-ref name="set" scoped="" ref="0x4043aae8"/>
        <function-ref name="clr" scoped="" ref="0x4043abc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x4043eb18" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x4043eb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043ecf0"/>
        <function-ref name="isInput" scoped="" ref="0x4043edd0"/>
        <function-ref name="toggle" scoped="" ref="0x4043eeb0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043d010"/>
        <function-ref name="get" scoped="" ref="0x4043d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043d1d0"/>
        <function-ref name="set" scoped="" ref="0x4043d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4043d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40489d68" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40489d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488010"/>
        <function-ref name="isInput" scoped="" ref="0x404880f0"/>
        <function-ref name="toggle" scoped="" ref="0x404881d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404882b0"/>
        <function-ref name="get" scoped="" ref="0x40488390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488470"/>
        <function-ref name="set" scoped="" ref="0x40488550"/>
        <function-ref name="clr" scoped="" ref="0x40488630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40487ac8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40487ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40487d80"/>
        <function-ref name="toggle" scoped="" ref="0x40487e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40486010"/>
        <function-ref name="get" scoped="" ref="0x404860f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404861d0"/>
        <function-ref name="set" scoped="" ref="0x404862b0"/>
        <function-ref name="clr" scoped="" ref="0x40486390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4047ea28" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4047ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047ec00"/>
        <function-ref name="isInput" scoped="" ref="0x4047ece0"/>
        <function-ref name="toggle" scoped="" ref="0x4047edc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047eea0"/>
        <function-ref name="get" scoped="" ref="0x40489010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404890f0"/>
        <function-ref name="set" scoped="" ref="0x404891d0"/>
        <function-ref name="clr" scoped="" ref="0x404892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40488790" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40488790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488968"/>
        <function-ref name="isInput" scoped="" ref="0x40488a48"/>
        <function-ref name="toggle" scoped="" ref="0x40488b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40488c08"/>
        <function-ref name="get" scoped="" ref="0x40488ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488dc8"/>
        <function-ref name="set" scoped="" ref="0x40488ea8"/>
        <function-ref name="clr" scoped="" ref="0x40487010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404864f0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404864f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404866c8"/>
        <function-ref name="isInput" scoped="" ref="0x404867a8"/>
        <function-ref name="toggle" scoped="" ref="0x40486888"/>
        <function-ref name="isOutput" scoped="" ref="0x40486968"/>
        <function-ref name="get" scoped="" ref="0x40486a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40486b28"/>
        <function-ref name="set" scoped="" ref="0x40486c08"/>
        <function-ref name="clr" scoped="" ref="0x40486ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40489410" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40489410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404895e8"/>
        <function-ref name="isInput" scoped="" ref="0x404896c8"/>
        <function-ref name="toggle" scoped="" ref="0x404897a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40489888"/>
        <function-ref name="get" scoped="" ref="0x40489968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489a48"/>
        <function-ref name="set" scoped="" ref="0x40489b28"/>
        <function-ref name="clr" scoped="" ref="0x40489c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40487170" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40487170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487348"/>
        <function-ref name="isInput" scoped="" ref="0x40487428"/>
        <function-ref name="toggle" scoped="" ref="0x40487508"/>
        <function-ref name="isOutput" scoped="" ref="0x404875e8"/>
        <function-ref name="get" scoped="" ref="0x404876c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404877a8"/>
        <function-ref name="set" scoped="" ref="0x40487888"/>
        <function-ref name="clr" scoped="" ref="0x40487968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40486e48" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40486e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485050"/>
        <function-ref name="isInput" scoped="" ref="0x40485130"/>
        <function-ref name="toggle" scoped="" ref="0x40485210"/>
        <function-ref name="isOutput" scoped="" ref="0x404852f0"/>
        <function-ref name="get" scoped="" ref="0x404853d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404854b0"/>
        <function-ref name="set" scoped="" ref="0x40485590"/>
        <function-ref name="clr" scoped="" ref="0x40485670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ccf538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ccf538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ccf710"/>
        <function-ref name="isInput" scoped="" ref="0x40ccf7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ccf8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ccf9b0"/>
        <function-ref name="get" scoped="" ref="0x40ccfa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ccfb70"/>
        <function-ref name="set" scoped="" ref="0x40ccfc50"/>
        <function-ref name="clr" scoped="" ref="0x40ccfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ccd010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ccd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ccd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ccd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ccd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ccd488"/>
        <function-ref name="get" scoped="" ref="0x40ccd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ccd648"/>
        <function-ref name="set" scoped="" ref="0x40ccd728"/>
        <function-ref name="clr" scoped="" ref="0x40ccd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ccc9e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ccc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cccbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40cccca0"/>
        <function-ref name="toggle" scoped="" ref="0x40cccd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ccce60"/>
        <function-ref name="get" scoped="" ref="0x40ccb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ccb0f0"/>
        <function-ref name="set" scoped="" ref="0x40ccb1d0"/>
        <function-ref name="clr" scoped="" ref="0x40ccb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cca538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cca538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cca710"/>
        <function-ref name="isInput" scoped="" ref="0x40cca7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cca8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cca9b0"/>
        <function-ref name="get" scoped="" ref="0x40ccaa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ccab70"/>
        <function-ref name="set" scoped="" ref="0x40ccac50"/>
        <function-ref name="clr" scoped="" ref="0x40ccad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc8010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc81e8"/>
        <function-ref name="isInput" scoped="" ref="0x40cc82c8"/>
        <function-ref name="toggle" scoped="" ref="0x40cc83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc8488"/>
        <function-ref name="get" scoped="" ref="0x40cc8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc8648"/>
        <function-ref name="set" scoped="" ref="0x40cc8728"/>
        <function-ref name="clr" scoped="" ref="0x40cc8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc79e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc7bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40cc7ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40cc7d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc7e60"/>
        <function-ref name="get" scoped="" ref="0x40cc6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc60f0"/>
        <function-ref name="set" scoped="" ref="0x40cc61d0"/>
        <function-ref name="clr" scoped="" ref="0x40cc62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc5538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc5538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc5710"/>
        <function-ref name="isInput" scoped="" ref="0x40cc57f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cc58d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc59b0"/>
        <function-ref name="get" scoped="" ref="0x40cc5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc5b70"/>
        <function-ref name="set" scoped="" ref="0x40cc5c50"/>
        <function-ref name="clr" scoped="" ref="0x40cc5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc3010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc31e8"/>
        <function-ref name="isInput" scoped="" ref="0x40cc32c8"/>
        <function-ref name="toggle" scoped="" ref="0x40cc33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc3488"/>
        <function-ref name="get" scoped="" ref="0x40cc3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc3648"/>
        <function-ref name="set" scoped="" ref="0x40cc3728"/>
        <function-ref name="clr" scoped="" ref="0x40cc3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4048c6b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4048c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c888"/>
        <function-ref name="isInput" scoped="" ref="0x4048c968"/>
        <function-ref name="toggle" scoped="" ref="0x4048ca48"/>
        <function-ref name="isOutput" scoped="" ref="0x4048cb28"/>
        <function-ref name="get" scoped="" ref="0x4048cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048cce8"/>
        <function-ref name="set" scoped="" ref="0x4048cdc8"/>
        <function-ref name="clr" scoped="" ref="0x4048cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4048a330" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4048a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048a508"/>
        <function-ref name="isInput" scoped="" ref="0x4048a5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4048a6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4048a7a8"/>
        <function-ref name="get" scoped="" ref="0x4048a888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a968"/>
        <function-ref name="set" scoped="" ref="0x4048aa48"/>
        <function-ref name="clr" scoped="" ref="0x4048ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4048d3d8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4048d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048d5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4048d690"/>
        <function-ref name="toggle" scoped="" ref="0x4048d770"/>
        <function-ref name="isOutput" scoped="" ref="0x4048d850"/>
        <function-ref name="get" scoped="" ref="0x4048d930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048da10"/>
        <function-ref name="set" scoped="" ref="0x4048daf0"/>
        <function-ref name="clr" scoped="" ref="0x4048dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4048b030" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4048b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b208"/>
        <function-ref name="isInput" scoped="" ref="0x4048b2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4048b3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b4a8"/>
        <function-ref name="get" scoped="" ref="0x4048b588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b668"/>
        <function-ref name="set" scoped="" ref="0x4048b748"/>
        <function-ref name="clr" scoped="" ref="0x4048b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4048ac88" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4048ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048ae60"/>
        <function-ref name="isInput" scoped="" ref="0x40495010"/>
        <function-ref name="toggle" scoped="" ref="0x404950f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404951d0"/>
        <function-ref name="get" scoped="" ref="0x404952b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40495390"/>
        <function-ref name="set" scoped="" ref="0x40495470"/>
        <function-ref name="clr" scoped="" ref="0x40495550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4048dd30" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4048dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048df08"/>
        <function-ref name="isInput" scoped="" ref="0x4048c010"/>
        <function-ref name="toggle" scoped="" ref="0x4048c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c1d0"/>
        <function-ref name="get" scoped="" ref="0x4048c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048c390"/>
        <function-ref name="set" scoped="" ref="0x4048c470"/>
        <function-ref name="clr" scoped="" ref="0x4048c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4048b988" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4048b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048bb60"/>
        <function-ref name="isInput" scoped="" ref="0x4048bc40"/>
        <function-ref name="toggle" scoped="" ref="0x4048bd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4048be00"/>
        <function-ref name="get" scoped="" ref="0x4048bee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a010"/>
        <function-ref name="set" scoped="" ref="0x4048a0f0"/>
        <function-ref name="clr" scoped="" ref="0x4048a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404956b0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404956b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40495888"/>
        <function-ref name="isInput" scoped="" ref="0x40495968"/>
        <function-ref name="toggle" scoped="" ref="0x40495a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40495b28"/>
        <function-ref name="get" scoped="" ref="0x40495c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40495ce8"/>
        <function-ref name="set" scoped="" ref="0x40495dc8"/>
        <function-ref name="clr" scoped="" ref="0x40495ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cef418" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cef418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cef5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40cef6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40cef7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cef890"/>
        <function-ref name="get" scoped="" ref="0x40cef970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cefa50"/>
        <function-ref name="set" scoped="" ref="0x40cefb30"/>
        <function-ref name="clr" scoped="" ref="0x40cefc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ceede0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ceede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ced010"/>
        <function-ref name="isInput" scoped="" ref="0x40ced0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ced1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ced2b0"/>
        <function-ref name="get" scoped="" ref="0x40ced390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ced470"/>
        <function-ref name="set" scoped="" ref="0x40ced550"/>
        <function-ref name="clr" scoped="" ref="0x40ced630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cec7f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cec7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cec9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40cecab0"/>
        <function-ref name="toggle" scoped="" ref="0x40cecb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40cecc70"/>
        <function-ref name="get" scoped="" ref="0x40cecd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cece30"/>
        <function-ref name="set" scoped="" ref="0x40cecf10"/>
        <function-ref name="clr" scoped="" ref="0x40ceb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cea228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cea228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cea400"/>
        <function-ref name="isInput" scoped="" ref="0x40cea4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40cea5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cea6a0"/>
        <function-ref name="get" scoped="" ref="0x40cea780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cea860"/>
        <function-ref name="set" scoped="" ref="0x40cea940"/>
        <function-ref name="clr" scoped="" ref="0x40ceaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ce9c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ce9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce9de0"/>
        <function-ref name="isInput" scoped="" ref="0x40ce9ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40ce8010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce80f0"/>
        <function-ref name="get" scoped="" ref="0x40ce81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce82b0"/>
        <function-ref name="set" scoped="" ref="0x40ce8390"/>
        <function-ref name="clr" scoped="" ref="0x40ce8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ce76c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ce76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce7898"/>
        <function-ref name="isInput" scoped="" ref="0x40ce7978"/>
        <function-ref name="toggle" scoped="" ref="0x40ce7a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce7b38"/>
        <function-ref name="get" scoped="" ref="0x40ce7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce7cf8"/>
        <function-ref name="set" scoped="" ref="0x40ce7dd8"/>
        <function-ref name="clr" scoped="" ref="0x40ce7eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d120b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d120b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d12288"/>
        <function-ref name="isInput" scoped="" ref="0x40d12368"/>
        <function-ref name="toggle" scoped="" ref="0x40d12448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d12528"/>
        <function-ref name="get" scoped="" ref="0x40d12608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d126e8"/>
        <function-ref name="set" scoped="" ref="0x40d127c8"/>
        <function-ref name="clr" scoped="" ref="0x40d128a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d10a88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d10a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d10c60"/>
        <function-ref name="isInput" scoped="" ref="0x40d10d40"/>
        <function-ref name="toggle" scoped="" ref="0x40d10e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40d10f00"/>
        <function-ref name="get" scoped="" ref="0x40d0f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d0f0f0"/>
        <function-ref name="set" scoped="" ref="0x40d0f1d0"/>
        <function-ref name="clr" scoped="" ref="0x40d0f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4049b170" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4049b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049b348"/>
        <function-ref name="isInput" scoped="" ref="0x4049b428"/>
        <function-ref name="toggle" scoped="" ref="0x4049b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4049b5e8"/>
        <function-ref name="get" scoped="" ref="0x4049b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049b7a8"/>
        <function-ref name="set" scoped="" ref="0x4049b888"/>
        <function-ref name="clr" scoped="" ref="0x4049b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4049ae48" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4049ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40499050"/>
        <function-ref name="isInput" scoped="" ref="0x40499130"/>
        <function-ref name="toggle" scoped="" ref="0x40499210"/>
        <function-ref name="isOutput" scoped="" ref="0x404992f0"/>
        <function-ref name="get" scoped="" ref="0x404993d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404994b0"/>
        <function-ref name="set" scoped="" ref="0x40499590"/>
        <function-ref name="clr" scoped="" ref="0x40499670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40492dc8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40492dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490010"/>
        <function-ref name="isInput" scoped="" ref="0x404900f0"/>
        <function-ref name="toggle" scoped="" ref="0x404901d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404902b0"/>
        <function-ref name="get" scoped="" ref="0x40490390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490470"/>
        <function-ref name="set" scoped="" ref="0x40490550"/>
        <function-ref name="clr" scoped="" ref="0x40490630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4049bac8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4049bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049bca0"/>
        <function-ref name="isInput" scoped="" ref="0x4049bd80"/>
        <function-ref name="toggle" scoped="" ref="0x4049be60"/>
        <function-ref name="isOutput" scoped="" ref="0x4049a010"/>
        <function-ref name="get" scoped="" ref="0x4049a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049a1d0"/>
        <function-ref name="set" scoped="" ref="0x4049a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4049a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404997d0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404997d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404999a8"/>
        <function-ref name="isInput" scoped="" ref="0x40499a88"/>
        <function-ref name="toggle" scoped="" ref="0x40499b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40499c48"/>
        <function-ref name="get" scoped="" ref="0x40499d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40499e08"/>
        <function-ref name="set" scoped="" ref="0x40499ee8"/>
        <function-ref name="clr" scoped="" ref="0x40498010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40490790" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40490790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490968"/>
        <function-ref name="isInput" scoped="" ref="0x40490a48"/>
        <function-ref name="toggle" scoped="" ref="0x40490b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40490c08"/>
        <function-ref name="get" scoped="" ref="0x40490ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490dc8"/>
        <function-ref name="set" scoped="" ref="0x40490ea8"/>
        <function-ref name="clr" scoped="" ref="0x4049b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4049a4f0" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4049a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4049a7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4049a888"/>
        <function-ref name="isOutput" scoped="" ref="0x4049a968"/>
        <function-ref name="get" scoped="" ref="0x4049aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049ab28"/>
        <function-ref name="set" scoped="" ref="0x4049ac08"/>
        <function-ref name="clr" scoped="" ref="0x4049ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40498170" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40498170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40498348"/>
        <function-ref name="isInput" scoped="" ref="0x40498428"/>
        <function-ref name="toggle" scoped="" ref="0x40498508"/>
        <function-ref name="isOutput" scoped="" ref="0x404985e8"/>
        <function-ref name="get" scoped="" ref="0x404986c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404987a8"/>
        <function-ref name="set" scoped="" ref="0x40498888"/>
        <function-ref name="clr" scoped="" ref="0x40498968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d15de8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d15de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d3f010"/>
        <function-ref name="isInput" scoped="" ref="0x40d3f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d3f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d3f2b0"/>
        <function-ref name="get" scoped="" ref="0x40d3f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d3f470"/>
        <function-ref name="set" scoped="" ref="0x40d3f550"/>
        <function-ref name="clr" scoped="" ref="0x40d3f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d3e7f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d3e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d3e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d3eab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d3eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d3ec70"/>
        <function-ref name="get" scoped="" ref="0x40d3ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d3ee30"/>
        <function-ref name="set" scoped="" ref="0x40d3ef10"/>
        <function-ref name="clr" scoped="" ref="0x40d3d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d3c228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d3c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d3c400"/>
        <function-ref name="isInput" scoped="" ref="0x40d3c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d3c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d3c6a0"/>
        <function-ref name="get" scoped="" ref="0x40d3c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d3c860"/>
        <function-ref name="set" scoped="" ref="0x40d3c940"/>
        <function-ref name="clr" scoped="" ref="0x40d3ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d3bc08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d3bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d3bde0"/>
        <function-ref name="isInput" scoped="" ref="0x40d3bec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d3a010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d3a0f0"/>
        <function-ref name="get" scoped="" ref="0x40d3a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d3a2b0"/>
        <function-ref name="set" scoped="" ref="0x40d3a390"/>
        <function-ref name="clr" scoped="" ref="0x40d3a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d396c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d396c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d39898"/>
        <function-ref name="isInput" scoped="" ref="0x40d39978"/>
        <function-ref name="toggle" scoped="" ref="0x40d39a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d39b38"/>
        <function-ref name="get" scoped="" ref="0x40d39c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d39cf8"/>
        <function-ref name="set" scoped="" ref="0x40d39dd8"/>
        <function-ref name="clr" scoped="" ref="0x40d39eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d370b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d370b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d37288"/>
        <function-ref name="isInput" scoped="" ref="0x40d37368"/>
        <function-ref name="toggle" scoped="" ref="0x40d37448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d37528"/>
        <function-ref name="get" scoped="" ref="0x40d37608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d376e8"/>
        <function-ref name="set" scoped="" ref="0x40d377c8"/>
        <function-ref name="clr" scoped="" ref="0x40d378a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d36a88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d36a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d36c60"/>
        <function-ref name="isInput" scoped="" ref="0x40d36d40"/>
        <function-ref name="toggle" scoped="" ref="0x40d36e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40d36f00"/>
        <function-ref name="get" scoped="" ref="0x40d35010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d350f0"/>
        <function-ref name="set" scoped="" ref="0x40d351d0"/>
        <function-ref name="clr" scoped="" ref="0x40d352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d34538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d34538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d34710"/>
        <function-ref name="isInput" scoped="" ref="0x40d347f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d348d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d349b0"/>
        <function-ref name="get" scoped="" ref="0x40d34a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d34b70"/>
        <function-ref name="set" scoped="" ref="0x40d34c50"/>
        <function-ref name="clr" scoped="" ref="0x40d34d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404a09e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404a09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x404a0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x404a0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x404a0e60"/>
        <function-ref name="get" scoped="" ref="0x4049f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049f0f0"/>
        <function-ref name="set" scoped="" ref="0x4049f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4049f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4049e790" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4049e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049e968"/>
        <function-ref name="isInput" scoped="" ref="0x4049ea48"/>
        <function-ref name="toggle" scoped="" ref="0x4049eb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4049ec08"/>
        <function-ref name="get" scoped="" ref="0x4049ece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049edc8"/>
        <function-ref name="set" scoped="" ref="0x4049eea8"/>
        <function-ref name="clr" scoped="" ref="0x4049c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404a16f8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404a16f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a18d0"/>
        <function-ref name="isInput" scoped="" ref="0x404a19b0"/>
        <function-ref name="toggle" scoped="" ref="0x404a1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x404a1b70"/>
        <function-ref name="get" scoped="" ref="0x404a1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a1d30"/>
        <function-ref name="set" scoped="" ref="0x404a1e10"/>
        <function-ref name="clr" scoped="" ref="0x404a1ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4049f410" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4049f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049f5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4049f6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4049f7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049f888"/>
        <function-ref name="get" scoped="" ref="0x4049f968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049fa48"/>
        <function-ref name="set" scoped="" ref="0x4049fb28"/>
        <function-ref name="clr" scoped="" ref="0x4049fc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4049c170" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4049c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049c348"/>
        <function-ref name="isInput" scoped="" ref="0x4049c428"/>
        <function-ref name="toggle" scoped="" ref="0x4049c508"/>
        <function-ref name="isOutput" scoped="" ref="0x4049c5e8"/>
        <function-ref name="get" scoped="" ref="0x4049c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049c7a8"/>
        <function-ref name="set" scoped="" ref="0x4049c888"/>
        <function-ref name="clr" scoped="" ref="0x4049c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404a0090" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404a0090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a0268"/>
        <function-ref name="isInput" scoped="" ref="0x404a0348"/>
        <function-ref name="toggle" scoped="" ref="0x404a0428"/>
        <function-ref name="isOutput" scoped="" ref="0x404a0508"/>
        <function-ref name="get" scoped="" ref="0x404a05e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a06c8"/>
        <function-ref name="set" scoped="" ref="0x404a07a8"/>
        <function-ref name="clr" scoped="" ref="0x404a0888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4049fd68" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4049fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049e010"/>
        <function-ref name="isInput" scoped="" ref="0x4049e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4049e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049e2b0"/>
        <function-ref name="get" scoped="" ref="0x4049e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049e470"/>
        <function-ref name="set" scoped="" ref="0x4049e550"/>
        <function-ref name="clr" scoped="" ref="0x4049e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4049cac8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4049cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049cca0"/>
        <function-ref name="isInput" scoped="" ref="0x4049cd80"/>
        <function-ref name="toggle" scoped="" ref="0x4049ce60"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7010"/>
        <function-ref name="get" scoped="" ref="0x404a70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a71d0"/>
        <function-ref name="set" scoped="" ref="0x404a72b0"/>
        <function-ref name="clr" scoped="" ref="0x404a7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d64938" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d64938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d64b10"/>
        <function-ref name="isInput" scoped="" ref="0x40d64bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40d64cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d64db0"/>
        <function-ref name="get" scoped="" ref="0x40d64e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d63010"/>
        <function-ref name="set" scoped="" ref="0x40d630f0"/>
        <function-ref name="clr" scoped="" ref="0x40d631d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d623b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d623b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d62588"/>
        <function-ref name="isInput" scoped="" ref="0x40d62668"/>
        <function-ref name="toggle" scoped="" ref="0x40d62748"/>
        <function-ref name="isOutput" scoped="" ref="0x40d62828"/>
        <function-ref name="get" scoped="" ref="0x40d62908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d629e8"/>
        <function-ref name="set" scoped="" ref="0x40d62ac8"/>
        <function-ref name="clr" scoped="" ref="0x40d62ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d61d70" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d61d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d60010"/>
        <function-ref name="isInput" scoped="" ref="0x40d600f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d601d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d602b0"/>
        <function-ref name="get" scoped="" ref="0x40d60390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d60470"/>
        <function-ref name="set" scoped="" ref="0x40d60550"/>
        <function-ref name="clr" scoped="" ref="0x40d60630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d5f7f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d5f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d5f9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d5fab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d5fb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d5fc70"/>
        <function-ref name="get" scoped="" ref="0x40d5fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d5fe30"/>
        <function-ref name="set" scoped="" ref="0x40d5ff10"/>
        <function-ref name="clr" scoped="" ref="0x40d5e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d5d228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d5d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d5d400"/>
        <function-ref name="isInput" scoped="" ref="0x40d5d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d5d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d5d6a0"/>
        <function-ref name="get" scoped="" ref="0x40d5d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d5d860"/>
        <function-ref name="set" scoped="" ref="0x40d5d940"/>
        <function-ref name="clr" scoped="" ref="0x40d5da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d5bc08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d5bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d5bde0"/>
        <function-ref name="isInput" scoped="" ref="0x40d5bec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d5a010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d5a0f0"/>
        <function-ref name="get" scoped="" ref="0x40d5a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d5a2b0"/>
        <function-ref name="set" scoped="" ref="0x40d5a390"/>
        <function-ref name="clr" scoped="" ref="0x40d5a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d596c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d596c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d59898"/>
        <function-ref name="isInput" scoped="" ref="0x40d59978"/>
        <function-ref name="toggle" scoped="" ref="0x40d59a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d59b38"/>
        <function-ref name="get" scoped="" ref="0x40d59c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d59cf8"/>
        <function-ref name="set" scoped="" ref="0x40d59dd8"/>
        <function-ref name="clr" scoped="" ref="0x40d59eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d850b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d850b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d85288"/>
        <function-ref name="isInput" scoped="" ref="0x40d85368"/>
        <function-ref name="toggle" scoped="" ref="0x40d85448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d85528"/>
        <function-ref name="get" scoped="" ref="0x40d85608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d856e8"/>
        <function-ref name="set" scoped="" ref="0x40d857c8"/>
        <function-ref name="clr" scoped="" ref="0x40d858a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404a3410" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404a3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a35e8"/>
        <function-ref name="isInput" scoped="" ref="0x404a36c8"/>
        <function-ref name="toggle" scoped="" ref="0x404a37a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a3888"/>
        <function-ref name="get" scoped="" ref="0x404a3968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a3a48"/>
        <function-ref name="set" scoped="" ref="0x404a3b28"/>
        <function-ref name="clr" scoped="" ref="0x404a3c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404ad170" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404ad170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad348"/>
        <function-ref name="isInput" scoped="" ref="0x404ad428"/>
        <function-ref name="toggle" scoped="" ref="0x404ad508"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad5e8"/>
        <function-ref name="get" scoped="" ref="0x404ad6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad7a8"/>
        <function-ref name="set" scoped="" ref="0x404ad888"/>
        <function-ref name="clr" scoped="" ref="0x404ad968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404a4128" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404a4128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a4300"/>
        <function-ref name="isInput" scoped="" ref="0x404a43e0"/>
        <function-ref name="toggle" scoped="" ref="0x404a44c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a45a0"/>
        <function-ref name="get" scoped="" ref="0x404a4680"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a4760"/>
        <function-ref name="set" scoped="" ref="0x404a4840"/>
        <function-ref name="clr" scoped="" ref="0x404a4920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404a3d68" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404a3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a2010"/>
        <function-ref name="isInput" scoped="" ref="0x404a20f0"/>
        <function-ref name="toggle" scoped="" ref="0x404a21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a22b0"/>
        <function-ref name="get" scoped="" ref="0x404a2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a2470"/>
        <function-ref name="set" scoped="" ref="0x404a2550"/>
        <function-ref name="clr" scoped="" ref="0x404a2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404adac8" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404adac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404adca0"/>
        <function-ref name="isInput" scoped="" ref="0x404add80"/>
        <function-ref name="toggle" scoped="" ref="0x404ade60"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac010"/>
        <function-ref name="get" scoped="" ref="0x404ac0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac1d0"/>
        <function-ref name="set" scoped="" ref="0x404ac2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ac390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404a4a80" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404a4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a4c58"/>
        <function-ref name="isInput" scoped="" ref="0x404a4d38"/>
        <function-ref name="toggle" scoped="" ref="0x404a4e18"/>
        <function-ref name="isOutput" scoped="" ref="0x404a4ef8"/>
        <function-ref name="get" scoped="" ref="0x404a3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a30f0"/>
        <function-ref name="set" scoped="" ref="0x404a31d0"/>
        <function-ref name="clr" scoped="" ref="0x404a32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404a2790" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404a2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a2968"/>
        <function-ref name="isInput" scoped="" ref="0x404a2a48"/>
        <function-ref name="toggle" scoped="" ref="0x404a2b28"/>
        <function-ref name="isOutput" scoped="" ref="0x404a2c08"/>
        <function-ref name="get" scoped="" ref="0x404a2ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a2dc8"/>
        <function-ref name="set" scoped="" ref="0x404a2ea8"/>
        <function-ref name="clr" scoped="" ref="0x404ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404ac4f0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404ac4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ac7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ac888"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac968"/>
        <function-ref name="get" scoped="" ref="0x404aca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404acb28"/>
        <function-ref name="set" scoped="" ref="0x404acc08"/>
        <function-ref name="clr" scoped="" ref="0x404acce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d88538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d88538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d88710"/>
        <function-ref name="isInput" scoped="" ref="0x40d887f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d888d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d889b0"/>
        <function-ref name="get" scoped="" ref="0x40d88a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d88b70"/>
        <function-ref name="set" scoped="" ref="0x40d88c50"/>
        <function-ref name="clr" scoped="" ref="0x40d88d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db6010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db61e8"/>
        <function-ref name="isInput" scoped="" ref="0x40db62c8"/>
        <function-ref name="toggle" scoped="" ref="0x40db63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40db6488"/>
        <function-ref name="get" scoped="" ref="0x40db6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db6648"/>
        <function-ref name="set" scoped="" ref="0x40db6728"/>
        <function-ref name="clr" scoped="" ref="0x40db6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db59e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db5bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40db5ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40db5d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40db5e60"/>
        <function-ref name="get" scoped="" ref="0x40db4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db40f0"/>
        <function-ref name="set" scoped="" ref="0x40db41d0"/>
        <function-ref name="clr" scoped="" ref="0x40db42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db3538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db3710"/>
        <function-ref name="isInput" scoped="" ref="0x40db37f0"/>
        <function-ref name="toggle" scoped="" ref="0x40db38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40db39b0"/>
        <function-ref name="get" scoped="" ref="0x40db3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db3b70"/>
        <function-ref name="set" scoped="" ref="0x40db3c50"/>
        <function-ref name="clr" scoped="" ref="0x40db3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db1010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db11e8"/>
        <function-ref name="isInput" scoped="" ref="0x40db12c8"/>
        <function-ref name="toggle" scoped="" ref="0x40db13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40db1488"/>
        <function-ref name="get" scoped="" ref="0x40db1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db1648"/>
        <function-ref name="set" scoped="" ref="0x40db1728"/>
        <function-ref name="clr" scoped="" ref="0x40db1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db09e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40db0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40db0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40db0e60"/>
        <function-ref name="get" scoped="" ref="0x40daf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40daf0f0"/>
        <function-ref name="set" scoped="" ref="0x40daf1d0"/>
        <function-ref name="clr" scoped="" ref="0x40daf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dae538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dae538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dae710"/>
        <function-ref name="isInput" scoped="" ref="0x40dae7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40dae8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40dae9b0"/>
        <function-ref name="get" scoped="" ref="0x40daea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40daeb70"/>
        <function-ref name="set" scoped="" ref="0x40daec50"/>
        <function-ref name="clr" scoped="" ref="0x40daed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dac010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dac1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40dac2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40dac3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40dac488"/>
        <function-ref name="get" scoped="" ref="0x40dac568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dac648"/>
        <function-ref name="set" scoped="" ref="0x40dac728"/>
        <function-ref name="clr" scoped="" ref="0x40dac808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b3e48" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2050"/>
        <function-ref name="isInput" scoped="" ref="0x404b2130"/>
        <function-ref name="toggle" scoped="" ref="0x404b2210"/>
        <function-ref name="isOutput" scoped="" ref="0x404b22f0"/>
        <function-ref name="get" scoped="" ref="0x404b23d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b24b0"/>
        <function-ref name="set" scoped="" ref="0x404b2590"/>
        <function-ref name="clr" scoped="" ref="0x404b2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404b1ac8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404b1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404b1d80"/>
        <function-ref name="toggle" scoped="" ref="0x404b1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0010"/>
        <function-ref name="get" scoped="" ref="0x404b00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b01d0"/>
        <function-ref name="set" scoped="" ref="0x404b02b0"/>
        <function-ref name="clr" scoped="" ref="0x404b0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404a8b00" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404a8b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a8cd8"/>
        <function-ref name="isInput" scoped="" ref="0x404a8db8"/>
        <function-ref name="toggle" scoped="" ref="0x404a8e98"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3010"/>
        <function-ref name="get" scoped="" ref="0x404b30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b31d0"/>
        <function-ref name="set" scoped="" ref="0x404b32b0"/>
        <function-ref name="clr" scoped="" ref="0x404b3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404b27d0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404b27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b29a8"/>
        <function-ref name="isInput" scoped="" ref="0x404b2a88"/>
        <function-ref name="toggle" scoped="" ref="0x404b2b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2c48"/>
        <function-ref name="get" scoped="" ref="0x404b2d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2e08"/>
        <function-ref name="set" scoped="" ref="0x404b2ee8"/>
        <function-ref name="clr" scoped="" ref="0x404b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404b04f0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404b04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b06c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b07a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b0888"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0968"/>
        <function-ref name="get" scoped="" ref="0x404b0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0b28"/>
        <function-ref name="set" scoped="" ref="0x404b0c08"/>
        <function-ref name="clr" scoped="" ref="0x404b0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b34f0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b36c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b37a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b3888"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3968"/>
        <function-ref name="get" scoped="" ref="0x404b3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3b28"/>
        <function-ref name="set" scoped="" ref="0x404b3c08"/>
        <function-ref name="clr" scoped="" ref="0x404b3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404b1170" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404b1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1348"/>
        <function-ref name="isInput" scoped="" ref="0x404b1428"/>
        <function-ref name="toggle" scoped="" ref="0x404b1508"/>
        <function-ref name="isOutput" scoped="" ref="0x404b15e8"/>
        <function-ref name="get" scoped="" ref="0x404b16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b17a8"/>
        <function-ref name="set" scoped="" ref="0x404b1888"/>
        <function-ref name="clr" scoped="" ref="0x404b1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404b0e48" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404b0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af050"/>
        <function-ref name="isInput" scoped="" ref="0x404af130"/>
        <function-ref name="toggle" scoped="" ref="0x404af210"/>
        <function-ref name="isOutput" scoped="" ref="0x404af2f0"/>
        <function-ref name="get" scoped="" ref="0x404af3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af4b0"/>
        <function-ref name="set" scoped="" ref="0x404af590"/>
        <function-ref name="clr" scoped="" ref="0x404af670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de0418" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de0418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de05f0"/>
        <function-ref name="isInput" scoped="" ref="0x40de06d0"/>
        <function-ref name="toggle" scoped="" ref="0x40de07b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40de0890"/>
        <function-ref name="get" scoped="" ref="0x40de0970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de0a50"/>
        <function-ref name="set" scoped="" ref="0x40de0b30"/>
        <function-ref name="clr" scoped="" ref="0x40de0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ddfde0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ddfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dde010"/>
        <function-ref name="isInput" scoped="" ref="0x40dde0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40dde1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40dde2b0"/>
        <function-ref name="get" scoped="" ref="0x40dde390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dde470"/>
        <function-ref name="set" scoped="" ref="0x40dde550"/>
        <function-ref name="clr" scoped="" ref="0x40dde630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ddd7f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ddd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ddd9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40dddab0"/>
        <function-ref name="toggle" scoped="" ref="0x40dddb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40dddc70"/>
        <function-ref name="get" scoped="" ref="0x40dddd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ddde30"/>
        <function-ref name="set" scoped="" ref="0x40dddf10"/>
        <function-ref name="clr" scoped="" ref="0x40ddc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ddb228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ddb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ddb400"/>
        <function-ref name="isInput" scoped="" ref="0x40ddb4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ddb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ddb6a0"/>
        <function-ref name="get" scoped="" ref="0x40ddb780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ddb860"/>
        <function-ref name="set" scoped="" ref="0x40ddb940"/>
        <function-ref name="clr" scoped="" ref="0x40ddba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dd9c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dd9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dd9de0"/>
        <function-ref name="isInput" scoped="" ref="0x40dd9ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40dd8010"/>
        <function-ref name="isOutput" scoped="" ref="0x40dd80f0"/>
        <function-ref name="get" scoped="" ref="0x40dd81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dd82b0"/>
        <function-ref name="set" scoped="" ref="0x40dd8390"/>
        <function-ref name="clr" scoped="" ref="0x40dd8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dd76c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dd76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dd7898"/>
        <function-ref name="isInput" scoped="" ref="0x40dd7978"/>
        <function-ref name="toggle" scoped="" ref="0x40dd7a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40dd7b38"/>
        <function-ref name="get" scoped="" ref="0x40dd7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dd7cf8"/>
        <function-ref name="set" scoped="" ref="0x40dd7dd8"/>
        <function-ref name="clr" scoped="" ref="0x40dd7eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dd50b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dd50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dd5288"/>
        <function-ref name="isInput" scoped="" ref="0x40dd5368"/>
        <function-ref name="toggle" scoped="" ref="0x40dd5448"/>
        <function-ref name="isOutput" scoped="" ref="0x40dd5528"/>
        <function-ref name="get" scoped="" ref="0x40dd5608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dd56e8"/>
        <function-ref name="set" scoped="" ref="0x40dd57c8"/>
        <function-ref name="clr" scoped="" ref="0x40dd58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dd4a88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dd4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dd4c60"/>
        <function-ref name="isInput" scoped="" ref="0x40dd4d40"/>
        <function-ref name="toggle" scoped="" ref="0x40dd4e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40dd4f00"/>
        <function-ref name="get" scoped="" ref="0x40dd3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dd30f0"/>
        <function-ref name="set" scoped="" ref="0x40dd31d0"/>
        <function-ref name="clr" scoped="" ref="0x40dd32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b7010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b71e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b72c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7488"/>
        <function-ref name="get" scoped="" ref="0x404b7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7648"/>
        <function-ref name="set" scoped="" ref="0x404b7728"/>
        <function-ref name="clr" scoped="" ref="0x404b7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c07b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c07b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0990"/>
        <function-ref name="isInput" scoped="" ref="0x404c0a70"/>
        <function-ref name="toggle" scoped="" ref="0x404c0b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0c30"/>
        <function-ref name="get" scoped="" ref="0x404c0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0df0"/>
        <function-ref name="set" scoped="" ref="0x404c0ed0"/>
        <function-ref name="clr" scoped="" ref="0x404cb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c9010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c91e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c92c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9488"/>
        <function-ref name="get" scoped="" ref="0x404c9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c9648"/>
        <function-ref name="set" scoped="" ref="0x404c9728"/>
        <function-ref name="clr" scoped="" ref="0x404c9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c77b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c77b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7990"/>
        <function-ref name="isInput" scoped="" ref="0x404c7a70"/>
        <function-ref name="toggle" scoped="" ref="0x404c7b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7c30"/>
        <function-ref name="get" scoped="" ref="0x404c7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7df0"/>
        <function-ref name="set" scoped="" ref="0x404c7ed0"/>
        <function-ref name="clr" scoped="" ref="0x404c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404cf010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404cf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404cf2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404cf3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf488"/>
        <function-ref name="get" scoped="" ref="0x404cf568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf648"/>
        <function-ref name="set" scoped="" ref="0x404cf728"/>
        <function-ref name="clr" scoped="" ref="0x404cf808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404cd7b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404cd7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd990"/>
        <function-ref name="isInput" scoped="" ref="0x404cda70"/>
        <function-ref name="toggle" scoped="" ref="0x404cdb50"/>
        <function-ref name="isOutput" scoped="" ref="0x404cdc30"/>
        <function-ref name="get" scoped="" ref="0x404cdd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cddf0"/>
        <function-ref name="set" scoped="" ref="0x404cded0"/>
        <function-ref name="clr" scoped="" ref="0x404cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d5080" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5258"/>
        <function-ref name="isInput" scoped="" ref="0x404d5338"/>
        <function-ref name="toggle" scoped="" ref="0x404d5418"/>
        <function-ref name="isOutput" scoped="" ref="0x404d54f8"/>
        <function-ref name="get" scoped="" ref="0x404d55d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d56b8"/>
        <function-ref name="set" scoped="" ref="0x404d5798"/>
        <function-ref name="clr" scoped="" ref="0x404d5878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d3840" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3a18"/>
        <function-ref name="isInput" scoped="" ref="0x404d3af8"/>
        <function-ref name="toggle" scoped="" ref="0x404d3bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d3cb8"/>
        <function-ref name="get" scoped="" ref="0x404d3d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d3e78"/>
        <function-ref name="set" scoped="" ref="0x404d2010"/>
        <function-ref name="clr" scoped="" ref="0x404d20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404dc0b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404dc0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc288"/>
        <function-ref name="isInput" scoped="" ref="0x404dc368"/>
        <function-ref name="toggle" scoped="" ref="0x404dc448"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc528"/>
        <function-ref name="get" scoped="" ref="0x404dc608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc6e8"/>
        <function-ref name="set" scoped="" ref="0x404dc7c8"/>
        <function-ref name="clr" scoped="" ref="0x404dc8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d9880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d9a58"/>
        <function-ref name="isInput" scoped="" ref="0x404d9b38"/>
        <function-ref name="toggle" scoped="" ref="0x404d9c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404d9cf8"/>
        <function-ref name="get" scoped="" ref="0x404d9dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d9eb8"/>
        <function-ref name="set" scoped="" ref="0x404d8010"/>
        <function-ref name="clr" scoped="" ref="0x404d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e20b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e2288"/>
        <function-ref name="isInput" scoped="" ref="0x404e2368"/>
        <function-ref name="toggle" scoped="" ref="0x404e2448"/>
        <function-ref name="isOutput" scoped="" ref="0x404e2528"/>
        <function-ref name="get" scoped="" ref="0x404e2608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e26e8"/>
        <function-ref name="set" scoped="" ref="0x404e27c8"/>
        <function-ref name="clr" scoped="" ref="0x404e28a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e0880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e0a58"/>
        <function-ref name="isInput" scoped="" ref="0x404e0b38"/>
        <function-ref name="toggle" scoped="" ref="0x404e0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404e0cf8"/>
        <function-ref name="get" scoped="" ref="0x404e0dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e0eb8"/>
        <function-ref name="set" scoped="" ref="0x404df010"/>
        <function-ref name="clr" scoped="" ref="0x404df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e80b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e80b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8288"/>
        <function-ref name="isInput" scoped="" ref="0x404e8368"/>
        <function-ref name="toggle" scoped="" ref="0x404e8448"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8528"/>
        <function-ref name="get" scoped="" ref="0x404e8608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e86e8"/>
        <function-ref name="set" scoped="" ref="0x404e87c8"/>
        <function-ref name="clr" scoped="" ref="0x404e88a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e6880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e6a58"/>
        <function-ref name="isInput" scoped="" ref="0x404e6b38"/>
        <function-ref name="toggle" scoped="" ref="0x404e6c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404e6cf8"/>
        <function-ref name="get" scoped="" ref="0x404e6dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e6eb8"/>
        <function-ref name="set" scoped="" ref="0x404e5010"/>
        <function-ref name="clr" scoped="" ref="0x404e50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404fcbf8" loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404fcbf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404fcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4050c010" loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4050c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4050c1e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4050c2c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4050c3a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x4050c488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4050c568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40517808" loc="60:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40517808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405179e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40420a28" loc="57:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40420a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40420c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40517400" loc="59:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40517400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405175d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40420dc0" loc="58:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40420dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40517010"/>
        <function-ref name="taskLoop" scoped="" ref="0x405170f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x405171d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40368d58" loc="48:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40363010"/>
        <function-ref name="runTask" scoped="" ref="0x403630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403675f0" loc="47:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403675f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403677c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403678a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x40367988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403d5100" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403d52d8"/>
        <function-ref name="runTask" scoped="" ref="0x403d53b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d5d68" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d5d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403d6820" loc="55:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403d6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d69f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403d6ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x403d6bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e9218" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e9218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e93f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40362728" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40362728"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40362900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403ea420" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403ea5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4051d010" loc="46:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4051d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4051d1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4051d2c8"/>
        <function-ref name="led1On" scoped="" ref="0x4051d3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4051d488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4051d568"/>
        <function-ref name="get" scoped="" ref="0x4051d648"/>
        <function-ref name="led1Off" scoped="" ref="0x4051d728"/>
        <function-ref name="led2Off" scoped="" ref="0x4051daa8"/>
        <function-ref name="set" scoped="" ref="0x4051d808"/>
        <function-ref name="led0On" scoped="" ref="0x4051d8e8"/>
        <function-ref name="led2On" scoped="" ref="0x4051d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40522400" loc="50:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40522400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405225d8"/>
        <function-ref name="isInput" scoped="" ref="0x405226b8"/>
        <function-ref name="toggle" scoped="" ref="0x40522798"/>
        <function-ref name="isOutput" scoped="" ref="0x40522878"/>
        <function-ref name="get" scoped="" ref="0x40522958"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522a38"/>
        <function-ref name="set" scoped="" ref="0x40522b18"/>
        <function-ref name="clr" scoped="" ref="0x40522bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40523350" loc="46:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40523350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40523528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40522de8" loc="51:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40522de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052f010"/>
        <function-ref name="isInput" scoped="" ref="0x4052f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4052f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052f2b0"/>
        <function-ref name="get" scoped="" ref="0x4052f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052f470"/>
        <function-ref name="set" scoped="" ref="0x4052f550"/>
        <function-ref name="clr" scoped="" ref="0x4052f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40523698" loc="47:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40523698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40523870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40523950"/>
        <function-ref name="led1On" scoped="" ref="0x40523a30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40523b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40523bf0"/>
        <function-ref name="get" scoped="" ref="0x40523cd0"/>
        <function-ref name="led1Off" scoped="" ref="0x40523db0"/>
        <function-ref name="led2Off" scoped="" ref="0x405221d0"/>
        <function-ref name="set" scoped="" ref="0x40523e90"/>
        <function-ref name="led0On" scoped="" ref="0x40522010"/>
        <function-ref name="led2On" scoped="" ref="0x405220f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4052f820" loc="52:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4052f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052f9f8"/>
        <function-ref name="isInput" scoped="" ref="0x4052fad8"/>
        <function-ref name="toggle" scoped="" ref="0x4052fbb8"/>
        <function-ref name="isOutput" scoped="" ref="0x4052fc98"/>
        <function-ref name="get" scoped="" ref="0x4052fd78"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052fe58"/>
        <function-ref name="set" scoped="" ref="0x4052e010"/>
        <function-ref name="clr" scoped="" ref="0x4052e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x4051cba8" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4051cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051cd80"/>
        <function-ref name="isInput" scoped="" ref="0x4051ce60"/>
        <function-ref name="toggle" scoped="" ref="0x4053a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4053a0f0"/>
        <function-ref name="get" scoped="" ref="0x4053a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053a2b0"/>
        <function-ref name="set" scoped="" ref="0x4053a390"/>
        <function-ref name="clr" scoped="" ref="0x4053a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x4053a680" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4053a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053a858"/>
        <function-ref name="isInput" scoped="" ref="0x4053a938"/>
        <function-ref name="toggle" scoped="" ref="0x4053aa18"/>
        <function-ref name="isOutput" scoped="" ref="0x4053aaf8"/>
        <function-ref name="get" scoped="" ref="0x4053abd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053acb8"/>
        <function-ref name="set" scoped="" ref="0x4053ad98"/>
        <function-ref name="clr" scoped="" ref="0x4053ae78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40539a38" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40539a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40539c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x405390b0" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405390b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40539288"/>
        <function-ref name="isInput" scoped="" ref="0x40539368"/>
        <function-ref name="toggle" scoped="" ref="0x40539448"/>
        <function-ref name="isOutput" scoped="" ref="0x40539528"/>
        <function-ref name="get" scoped="" ref="0x40539608"/>
        <function-ref name="makeOutput" scoped="" ref="0x405396e8"/>
        <function-ref name="set" scoped="" ref="0x405397c8"/>
        <function-ref name="clr" scoped="" ref="0x405398a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x405494b8" loc="8:RSSILocC.nc">
      <component-ref qname="RSSILocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x405494b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40548010"/>
        <function-ref name="fired" scoped="" ref="0x40542268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40542970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40542718"/>
        <function-ref name="getdt" scoped="" ref="0x405484c0"/>
        <function-ref name="gett0" scoped="" ref="0x40548268"/>
        <function-ref name="isRunning" scoped="" ref="0x405424c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40549ae0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40542c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40549d60"/>
        <function-ref name="stop" scoped="" ref="0x40542010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x405854f8" loc="16:RSSILocC.nc">
      <component-ref qname="RSSILocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405854f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057b0d8"/>
        <function-ref name="get" scoped="" ref="0x40585e00"/>
        <function-ref name="isSet" scoped="" ref="0x40585b40"/>
        <function-ref name="set" scoped="" ref="0x4057b398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40419a20" loc="6:RSSILocC.nc">
      <component-ref qname="RSSILocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40419a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40419bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x40578470" loc="11:RSSILocC.nc">
      <component-ref qname="RSSILocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x40578470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40578648"/>
        <function-ref name="source" scoped="" ref="0x40578728"/>
        <function-ref name="address" scoped="" ref="0x40578808"/>
        <function-ref name="destination" scoped="" ref="0x405788e8"/>
        <function-ref name="setSource" scoped="" ref="0x405789c8"/>
        <function-ref name="setDestination" scoped="" ref="0x40578aa8"/>
        <function-ref name="type" scoped="" ref="0x40578b88"/>
        <function-ref name="setType" scoped="" ref="0x40578c68"/>
        <function-ref name="isForMe" scoped="" ref="0x40578d48"/>
        <function-ref name="setGroup" scoped="" ref="0x40578e28"/>
        <function-ref name="localGroup" scoped="" ref="0x40578f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x405723c8" loc="10:RSSILocC.nc">
      <component-ref qname="RSSILocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x405723c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405725a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40572680"/>
        <function-ref name="getPayload" scoped="" ref="0x40572760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40572840"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40572920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x4057cde0" loc="13:RSSILocC.nc">
      <component-ref qname="RSSILocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x4057cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40546010"/>
        <function-ref name="stopDone" scoped="" ref="0x405460f0"/>
        <function-ref name="start" scoped="" ref="0x405461d0"/>
        <function-ref name="stop" scoped="" ref="0x405462b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40576010" loc="14:RSSILocC.nc">
      <component-ref qname="RSSILocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40576010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405761e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40419d88" loc="7:RSSILocC.nc">
      <component-ref qname="RSSILocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40419d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40543010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405430f0"/>
        <function-ref name="led1On" scoped="" ref="0x405431d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405432b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40543390"/>
        <function-ref name="get" scoped="" ref="0x40543470"/>
        <function-ref name="led1Off" scoped="" ref="0x40543550"/>
        <function-ref name="led2Off" scoped="" ref="0x405438d0"/>
        <function-ref name="set" scoped="" ref="0x40543630"/>
        <function-ref name="led0On" scoped="" ref="0x40543710"/>
        <function-ref name="led2On" scoped="" ref="0x405437f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4057e410" loc="12:RSSILocC.nc">
      <component-ref qname="RSSILocC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4057e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4057e5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4057e6c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4057e7a8"/>
        <function-ref name="cancel" scoped="" ref="0x4057e888"/>
        <function-ref name="sendDone" scoped="" ref="0x4057e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4058a330" loc="45:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="RSSILocAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4058a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4068be38"/>
        <function-ref name="fired" scoped="" ref="0x4068b0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4068b7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4068b5a0"/>
        <function-ref name="getdt" scoped="" ref="0x4068a310"/>
        <function-ref name="gett0" scoped="" ref="0x4068a0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x4068b348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4058a958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4068bb18"/>
        <function-ref name="startOneShot" scoped="" ref="0x4058abd8"/>
        <function-ref name="stop" scoped="" ref="0x4058ae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405921b0" loc="49:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405921b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405a1d58"/>
        <function-ref name="fired" scoped="" ref="0x405a1010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405a1718"/>
        <function-ref name="isOneShot" scoped="" ref="0x405a14c0"/>
        <function-ref name="getdt" scoped="" ref="0x405a0268"/>
        <function-ref name="gett0" scoped="" ref="0x405a0010"/>
        <function-ref name="isRunning" scoped="" ref="0x405a1268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405927d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405a1a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40592a58"/>
        <function-ref name="stop" scoped="" ref="0x40592cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4059c2b0" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4059c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4059bd90"/>
        <function-ref name="fired" scoped="" ref="0x4059b048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4059b750"/>
        <function-ref name="isOneShot" scoped="" ref="0x4059b4f8"/>
        <function-ref name="getdt" scoped="" ref="0x4059a268"/>
        <function-ref name="gett0" scoped="" ref="0x4059a010"/>
        <function-ref name="isRunning" scoped="" ref="0x4059b2a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4059c8d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4059ba70"/>
        <function-ref name="startOneShot" scoped="" ref="0x4059cb58"/>
        <function-ref name="stop" scoped="" ref="0x4059cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x405a6310" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x405a6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405a6958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405a0af0" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405a0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405a0cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x405aada0" loc="29:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x405aada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405ae508"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405ae9f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405ae780"/>
        <function-ref name="overflow" scoped="" ref="0x405aec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405a89f8" loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405a89f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405a8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x405a41c8" loc="28:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x405a41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405a3690"/>
        <function-ref name="fired" scoped="" ref="0x405a4e30"/>
        <function-ref name="startAt" scoped="" ref="0x405a3350"/>
        <function-ref name="isRunning" scoped="" ref="0x405a30d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x405a3908"/>
        <function-ref name="start" scoped="" ref="0x405a4918"/>
        <function-ref name="stop" scoped="" ref="0x405a4bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4063b850" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4063b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4063ad58"/>
        <function-ref name="fired" scoped="" ref="0x4063a528"/>
        <function-ref name="startAt" scoped="" ref="0x4063aa18"/>
        <function-ref name="isRunning" scoped="" ref="0x4063a7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40639010"/>
        <function-ref name="start" scoped="" ref="0x4063a010"/>
        <function-ref name="stop" scoped="" ref="0x4063a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4063b418" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4063b418"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034f5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034f5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4063b5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40639340" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40639340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40639a90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40649010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40639d08"/>
        <function-ref name="overflow" scoped="" ref="0x40649288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40e56ec0" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e56ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e540c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e541a0"/>
        <function-ref name="getControlA" scoped="" ref="0x40e54280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e54360"/>
        <function-ref name="setControlB" scoped="" ref="0x40e54440"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e54520"/>
        <function-ref name="getControlB" scoped="" ref="0x40e54600"/>
        <function-ref name="setControlA" scoped="" ref="0x40e546e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e5b030" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e5b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e594e0"/>
        <function-ref name="fired" scoped="" ref="0x40e5bc98"/>
        <function-ref name="startAt" scoped="" ref="0x40e591a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40e5bf10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e59758"/>
        <function-ref name="start" scoped="" ref="0x40e5b780"/>
        <function-ref name="stop" scoped="" ref="0x40e5ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e5cbe8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e5cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e5cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e59a88" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e59a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e58200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e586f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e58478"/>
        <function-ref name="overflow" scoped="" ref="0x40e58968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40e522e8" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40e522e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40e524c0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40e525a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x40e52680"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40e52760"/>
        <function-ref name="countBusy" scoped="" ref="0x40e52840"/>
        <function-ref name="compareABusy" scoped="" ref="0x40e52920"/>
        <function-ref name="getAssr" scoped="" ref="0x40e52a00"/>
        <function-ref name="setAssr" scoped="" ref="0x40e52ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40e548d0" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40e548d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e53e28"/>
        <function-ref name="fired" scoped="" ref="0x40e53448"/>
        <function-ref name="get" scoped="" ref="0x40e54f18"/>
        <function-ref name="reset" scoped="" ref="0x40e536c0"/>
        <function-ref name="isOn" scoped="" ref="0x40e520b8"/>
        <function-ref name="set" scoped="" ref="0x40e531a8"/>
        <function-ref name="start" scoped="" ref="0x40e53938"/>
        <function-ref name="stop" scoped="" ref="0x40e53bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e58c58" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e58c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e56778"/>
        <function-ref name="test" scoped="" ref="0x40e56288"/>
        <function-ref name="get" scoped="" ref="0x40e572e8"/>
        <function-ref name="setScale" scoped="" ref="0x40e569f0"/>
        <function-ref name="getScale" scoped="" ref="0x40e56c90"/>
        <function-ref name="reset" scoped="" ref="0x40e57a78"/>
        <function-ref name="overflow" scoped="" ref="0x40e57800"/>
        <function-ref name="isOn" scoped="" ref="0x40e56500"/>
        <function-ref name="set" scoped="" ref="0x40e57560"/>
        <function-ref name="start" scoped="" ref="0x40e57cf0"/>
        <function-ref name="stop" scoped="" ref="0x40e56010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405fc878" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405fc878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405fca50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405fcb30"/>
        <function-ref name="getControlA" scoped="" ref="0x405fcc10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405fccf0"/>
        <function-ref name="setControlB" scoped="" ref="0x405fcdd0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405fceb0"/>
        <function-ref name="getControlB" scoped="" ref="0x405fb010"/>
        <function-ref name="setControlA" scoped="" ref="0x405fb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40609010" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40609010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x406091e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x406092c8"/>
        <function-ref name="controlABusy" scoped="" ref="0x406093a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40609488"/>
        <function-ref name="countBusy" scoped="" ref="0x40609568"/>
        <function-ref name="compareABusy" scoped="" ref="0x40609648"/>
        <function-ref name="getAssr" scoped="" ref="0x40609728"/>
        <function-ref name="setAssr" scoped="" ref="0x40609808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405fb418" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405fb418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405fa9f0"/>
        <function-ref name="fired" scoped="" ref="0x405fa010"/>
        <function-ref name="get" scoped="" ref="0x405fba60"/>
        <function-ref name="reset" scoped="" ref="0x405fa288"/>
        <function-ref name="isOn" scoped="" ref="0x405fac68"/>
        <function-ref name="set" scoped="" ref="0x405fbcd8"/>
        <function-ref name="start" scoped="" ref="0x405fa500"/>
        <function-ref name="stop" scoped="" ref="0x405fa778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405ff550" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405ff550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405fc010"/>
        <function-ref name="test" scoped="" ref="0x405fdab8"/>
        <function-ref name="get" scoped="" ref="0x405ffb98"/>
        <function-ref name="setScale" scoped="" ref="0x405fc288"/>
        <function-ref name="getScale" scoped="" ref="0x405fc528"/>
        <function-ref name="reset" scoped="" ref="0x405fd350"/>
        <function-ref name="overflow" scoped="" ref="0x405fd0d8"/>
        <function-ref name="isOn" scoped="" ref="0x405fdd30"/>
        <function-ref name="set" scoped="" ref="0x405ffe10"/>
        <function-ref name="start" scoped="" ref="0x405fd5c8"/>
        <function-ref name="stop" scoped="" ref="0x405fd840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406048d0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406048d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40604aa8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40604b88"/>
        <function-ref name="getControlA" scoped="" ref="0x40604c68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40604d48"/>
        <function-ref name="setControlB" scoped="" ref="0x40604e28"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40604f08"/>
        <function-ref name="getControlB" scoped="" ref="0x40603010"/>
        <function-ref name="setControlA" scoped="" ref="0x406030f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40613f20" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40613f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40612110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40612398" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40612398"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40612570"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40612650"/>
        <function-ref name="controlABusy" scoped="" ref="0x40612730"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40612810"/>
        <function-ref name="countBusy" scoped="" ref="0x406128f0"/>
        <function-ref name="compareABusy" scoped="" ref="0x406129d0"/>
        <function-ref name="getAssr" scoped="" ref="0x40612ab0"/>
        <function-ref name="setAssr" scoped="" ref="0x40612b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40603418" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40603418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406139f0"/>
        <function-ref name="fired" scoped="" ref="0x40613010"/>
        <function-ref name="get" scoped="" ref="0x40603a60"/>
        <function-ref name="reset" scoped="" ref="0x40613288"/>
        <function-ref name="isOn" scoped="" ref="0x40613c68"/>
        <function-ref name="set" scoped="" ref="0x40603cd8"/>
        <function-ref name="start" scoped="" ref="0x40613500"/>
        <function-ref name="stop" scoped="" ref="0x40613778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406065f8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406065f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40604068"/>
        <function-ref name="test" scoped="" ref="0x40605b50"/>
        <function-ref name="get" scoped="" ref="0x40606c40"/>
        <function-ref name="setScale" scoped="" ref="0x406042e0"/>
        <function-ref name="getScale" scoped="" ref="0x40604580"/>
        <function-ref name="reset" scoped="" ref="0x406053e8"/>
        <function-ref name="overflow" scoped="" ref="0x40605170"/>
        <function-ref name="isOn" scoped="" ref="0x40605dc8"/>
        <function-ref name="set" scoped="" ref="0x40606eb8"/>
        <function-ref name="start" scoped="" ref="0x40605660"/>
        <function-ref name="stop" scoped="" ref="0x406058d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x406534d8" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x406534d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406536b0"/>
        <function-ref name="runTask" scoped="" ref="0x40653790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40656a48" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40656a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40653010"/>
        <function-ref name="fired" scoped="" ref="0x40654718"/>
        <function-ref name="startAt" scoped="" ref="0x40654c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40654990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40653288"/>
        <function-ref name="start" scoped="" ref="0x40654200"/>
        <function-ref name="stop" scoped="" ref="0x406544a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405a5720" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405a5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40656248"/>
        <function-ref name="fired" scoped="" ref="0x406574e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40657bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40657998"/>
        <function-ref name="getdt" scoped="" ref="0x406566f8"/>
        <function-ref name="gett0" scoped="" ref="0x406564a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40657740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405a5d48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40657f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40657010"/>
        <function-ref name="stop" scoped="" ref="0x40657290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40682bc8" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40682bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40682da0"/>
        <function-ref name="runTask" scoped="" ref="0x40682e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40685968" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40685968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406824c8"/>
        <function-ref name="fired" scoped="" ref="0x40683768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40683e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40683c18"/>
        <function-ref name="getdt" scoped="" ref="0x40682978"/>
        <function-ref name="gett0" scoped="" ref="0x40682720"/>
        <function-ref name="isRunning" scoped="" ref="0x406839c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40683010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406821a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40683290"/>
        <function-ref name="stop" scoped="" ref="0x40683510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40662600" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40662600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406851a8"/>
        <function-ref name="fired" scoped="" ref="0x406863d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40686b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x406868a8"/>
        <function-ref name="getdt" scoped="" ref="0x40685678"/>
        <function-ref name="gett0" scoped="" ref="0x40685410"/>
        <function-ref name="isRunning" scoped="" ref="0x40686640"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40662c38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40686e40"/>
        <function-ref name="startOneShot" scoped="" ref="0x40662ec8"/>
        <function-ref name="stop" scoped="" ref="0x40686170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406800a0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406806e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40680a38" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40680a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4068d200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4068d6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4068d478"/>
        <function-ref name="overflow" scoped="" ref="0x4068d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4068ae78" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4068ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4069b070"/>
        <function-ref name="stopDone" scoped="" ref="0x4069b150"/>
        <function-ref name="start" scoped="" ref="0x4069b230"/>
        <function-ref name="stop" scoped="" ref="0x4069b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40696f08" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40696f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406990f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40699270" loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40699270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40699448"/>
        <function-ref name="payloadLength" scoped="" ref="0x40699528"/>
        <function-ref name="getPayload" scoped="" ref="0x40699608"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406996e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4069b770" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4069b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4069b948"/>
        <function-ref name="getPayload" scoped="" ref="0x4069ba28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4069bb08"/>
        <function-ref name="cancel" scoped="" ref="0x4069bbe8"/>
        <function-ref name="sendDone" scoped="" ref="0x4069bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4069a7f0" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4069a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4069a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406a1830" loc="52:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406a1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406a1a08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406a1ae8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406a1bc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406a1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4069a158" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4069a158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4069a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406a5b10" loc="51:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406a5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406a5ce8"/>
        <function-ref name="noAck" scoped="" ref="0x406a5dc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x406a5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406af1b8" loc="53:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406af1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406af390"/>
        <function-ref name="setRetries" scoped="" ref="0x406af470"/>
        <function-ref name="getRetries" scoped="" ref="0x406af550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x406af630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406af710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40699960" loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40699960"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40699b38"/>
        <function-ref name="source" scoped="" ref="0x40699c18"/>
        <function-ref name="address" scoped="" ref="0x40699cf8"/>
        <function-ref name="destination" scoped="" ref="0x40699dd8"/>
        <function-ref name="setSource" scoped="" ref="0x40699eb8"/>
        <function-ref name="setDestination" scoped="" ref="0x40697010"/>
        <function-ref name="type" scoped="" ref="0x406970f0"/>
        <function-ref name="setType" scoped="" ref="0x406971d0"/>
        <function-ref name="isForMe" scoped="" ref="0x406972b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40697390"/>
        <function-ref name="localGroup" scoped="" ref="0x40697470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406b0bb8" loc="54:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406b0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406b0d90"/>
        <function-ref name="setChannel" scoped="" ref="0x406b0e70"/>
        <function-ref name="getChannel" scoped="" ref="0x406a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x406ab7c0" loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x406ab7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406a42d8"/>
        <function-ref name="clear" scoped="" ref="0x406a4688"/>
        <function-ref name="isValid" scoped="" ref="0x406abf10"/>
        <function-ref name="set" scoped="" ref="0x406a4a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406ad1a0" loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406ad1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406add20"/>
        <function-ref name="clear" scoped="" ref="0x406a9108"/>
        <function-ref name="isValid" scoped="" ref="0x406ad970"/>
        <function-ref name="set" scoped="" ref="0x406a94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406b8010" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406b81e8"/>
        <function-ref name="stopDone" scoped="" ref="0x406b82c8"/>
        <function-ref name="start" scoped="" ref="0x406b83a8"/>
        <function-ref name="stop" scoped="" ref="0x406b8488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x406c38a0" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x406c38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c14a0"/>
        <function-ref name="get" scoped="" ref="0x406c11e0"/>
        <function-ref name="isSet" scoped="" ref="0x406c3ee8"/>
        <function-ref name="set" scoped="" ref="0x406c1760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406bc488" loc="71:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406bc488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406cf010"/>
        <function-ref name="clear" scoped="" ref="0x406cf3c0"/>
        <function-ref name="isValid" scoped="" ref="0x406bcbd8"/>
        <function-ref name="set" scoped="" ref="0x406cf770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406b6010" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406b61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406b5190" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406b5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406b5368"/>
        <function-ref name="payloadLength" scoped="" ref="0x406b5448"/>
        <function-ref name="getPayload" scoped="" ref="0x406b5528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406b5608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406b56e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406b88e8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406b88e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406b8ac0"/>
        <function-ref name="getPayload" scoped="" ref="0x406b8ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406b8c80"/>
        <function-ref name="cancel" scoped="" ref="0x406b8d60"/>
        <function-ref name="sendDone" scoped="" ref="0x406b8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406b7960" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406b7960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406b7b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x406c4530" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x406c4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c3118"/>
        <function-ref name="get" scoped="" ref="0x406c4e38"/>
        <function-ref name="isSet" scoped="" ref="0x406c4b78"/>
        <function-ref name="set" scoped="" ref="0x406c33d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406b4b38" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406b4b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406b4d10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406b4df0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406b4ed0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406b72c8" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406b72c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406b74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x406c0a28" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406c0a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406bd5b0"/>
        <function-ref name="clear" scoped="" ref="0x406bd960"/>
        <function-ref name="isValid" scoped="" ref="0x406bd200"/>
        <function-ref name="set" scoped="" ref="0x406bdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406bee70" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406bee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406c04d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x406c50e0" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x406c50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c5ca8"/>
        <function-ref name="get" scoped="" ref="0x406c59e8"/>
        <function-ref name="isSet" scoped="" ref="0x406c5728"/>
        <function-ref name="set" scoped="" ref="0x406c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406b45b0" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406b45b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406b4788"/>
        <function-ref name="noAck" scoped="" ref="0x406b4868"/>
        <function-ref name="wasAcked" scoped="" ref="0x406b4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406b6710" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406b6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406b68e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406b31b8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406b31b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406b3390"/>
        <function-ref name="setRetries" scoped="" ref="0x406b3470"/>
        <function-ref name="getRetries" scoped="" ref="0x406b3550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x406b3630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406b3710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406b5880" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406b5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406b5a58"/>
        <function-ref name="source" scoped="" ref="0x406b5b38"/>
        <function-ref name="address" scoped="" ref="0x406b5c18"/>
        <function-ref name="destination" scoped="" ref="0x406b5cf8"/>
        <function-ref name="setSource" scoped="" ref="0x406b5dd8"/>
        <function-ref name="setDestination" scoped="" ref="0x406b5eb8"/>
        <function-ref name="type" scoped="" ref="0x406b4010"/>
        <function-ref name="setType" scoped="" ref="0x406b40f0"/>
        <function-ref name="isForMe" scoped="" ref="0x406b41d0"/>
        <function-ref name="setGroup" scoped="" ref="0x406b42b0"/>
        <function-ref name="localGroup" scoped="" ref="0x406b4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406b38d0" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406b38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406b3b28"/>
        <function-ref name="setChannel" scoped="" ref="0x406b3c08"/>
        <function-ref name="getChannel" scoped="" ref="0x406b3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x406be978" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406be978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x406beb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406b6df0" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406b6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406cb140" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406cb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406cb318"/>
        <function-ref name="stopDone" scoped="" ref="0x406cb3f8"/>
        <function-ref name="start" scoped="" ref="0x406cb4d8"/>
        <function-ref name="stop" scoped="" ref="0x406cb5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x406db580" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x406db580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406da170"/>
        <function-ref name="get" scoped="" ref="0x406dbe88"/>
        <function-ref name="isSet" scoped="" ref="0x406dbbc8"/>
        <function-ref name="set" scoped="" ref="0x406da430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x406c6778" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x406c6778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406c6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x406d2f18" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x406d2f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406d4188"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406d4268"/>
        <function-ref name="request" scoped="" ref="0x406d4348"/>
        <function-ref name="granted" scoped="" ref="0x406d4428"/>
        <function-ref name="isOwner" scoped="" ref="0x406d4508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406c91b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406c91b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406c9388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406cba18" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406cba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406cbbf0"/>
        <function-ref name="getPayload" scoped="" ref="0x406cbcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406cbdb0"/>
        <function-ref name="cancel" scoped="" ref="0x406cbe90"/>
        <function-ref name="sendDone" scoped="" ref="0x406ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406cab10" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406cab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406cace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x406df098" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x406df098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x406df270"/>
        <function-ref name="address" scoped="" ref="0x406df350"/>
        <function-ref name="destination" scoped="" ref="0x406df430"/>
        <function-ref name="setSource" scoped="" ref="0x406df510"/>
        <function-ref name="setDestination" scoped="" ref="0x406df5f0"/>
        <function-ref name="pan" scoped="" ref="0x406df6d0"/>
        <function-ref name="setPan" scoped="" ref="0x406df7b0"/>
        <function-ref name="isForMe" scoped="" ref="0x406df890"/>
        <function-ref name="localPan" scoped="" ref="0x406df970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x406dfbf8" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x406dfbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406dfdd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x406dfeb0"/>
        <function-ref name="getPayload" scoped="" ref="0x406d1010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406d10f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406d11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x406dd218" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x406dd218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ddde0"/>
        <function-ref name="get" scoped="" ref="0x406ddb20"/>
        <function-ref name="isSet" scoped="" ref="0x406dd860"/>
        <function-ref name="set" scoped="" ref="0x406db0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406d1978" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406d1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406d1b50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406d1c30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406d1d10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406d1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x406c7110" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406c7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c72e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406c73c8"/>
        <function-ref name="getPayload" scoped="" ref="0x406c74a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c7588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406c7668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406ca478" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406ca478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ca650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x406ec8c0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406ec8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406eb4d8"/>
        <function-ref name="clear" scoped="" ref="0x406eb888"/>
        <function-ref name="isValid" scoped="" ref="0x406eb128"/>
        <function-ref name="set" scoped="" ref="0x406ebc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406dacd8" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406dacd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ec370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x406d0e18" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x406d0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406dea08"/>
        <function-ref name="get" scoped="" ref="0x406de748"/>
        <function-ref name="isSet" scoped="" ref="0x406de488"/>
        <function-ref name="set" scoped="" ref="0x406decc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406d13f0" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406d15c8"/>
        <function-ref name="noAck" scoped="" ref="0x406d16a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x406d1788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406d5ab8" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406d5ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406d5c90"/>
        <function-ref name="getPayload" scoped="" ref="0x406d5d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406d5e50"/>
        <function-ref name="cancel" scoped="" ref="0x406c6010"/>
        <function-ref name="sendDone" scoped="" ref="0x406c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406c98b0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406c98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406c9a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406d0010" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406d0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406d01e8"/>
        <function-ref name="setRetries" scoped="" ref="0x406d02c8"/>
        <function-ref name="getRetries" scoped="" ref="0x406d03a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x406d0488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406d0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406d0728" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406d0728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406d0900"/>
        <function-ref name="setChannel" scoped="" ref="0x406d09e0"/>
        <function-ref name="getChannel" scoped="" ref="0x406d0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406c8380" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406c8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406c8558"/>
        <function-ref name="source" scoped="" ref="0x406c8638"/>
        <function-ref name="address" scoped="" ref="0x406c8718"/>
        <function-ref name="destination" scoped="" ref="0x406c87f8"/>
        <function-ref name="setSource" scoped="" ref="0x406c88d8"/>
        <function-ref name="setDestination" scoped="" ref="0x406c89b8"/>
        <function-ref name="type" scoped="" ref="0x406c8a98"/>
        <function-ref name="setType" scoped="" ref="0x406c8b78"/>
        <function-ref name="isForMe" scoped="" ref="0x406c8c58"/>
        <function-ref name="setGroup" scoped="" ref="0x406c8d38"/>
        <function-ref name="localGroup" scoped="" ref="0x406c8e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406ea3a0" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406ea3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406eaea0"/>
        <function-ref name="clear" scoped="" ref="0x406e8280"/>
        <function-ref name="isValid" scoped="" ref="0x406eaaf0"/>
        <function-ref name="set" scoped="" ref="0x406e8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406c6328" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406c6328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406c6500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x406da7e0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406da7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x406da9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406c8010" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406c8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406c81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x407071c0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x407071c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40707398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x406eeb50" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x406eeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x406eed28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x407081f0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x407081f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407083c8"/>
        <function-ref name="checkFrame" scoped="" ref="0x407084a8"/>
        <function-ref name="source" scoped="" ref="0x40708588"/>
        <function-ref name="destination" scoped="" ref="0x40708668"/>
        <function-ref name="setSource" scoped="" ref="0x40708748"/>
        <function-ref name="setDestination" scoped="" ref="0x40708828"/>
        <function-ref name="setGroup" scoped="" ref="0x40708908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x406f86a8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x406f86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x406f8880"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x406f8960"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x406f8a40"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x406f8b20"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x406f8c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40720118" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40720118"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407202f0"/>
        <function-ref name="wait" scoped="" ref="0x407203d0"/>
        <function-ref name="cancel" scoped="" ref="0x407204b0"/>
        <function-ref name="isFree" scoped="" ref="0x40720590"/>
        <function-ref name="getNow" scoped="" ref="0x40720670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x4071c420" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x4071c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4071c5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4071c6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4071c7b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4071c898"/>
        <function-ref name="headerLength" scoped="" ref="0x4071c978"/>
        <function-ref name="metadataLength" scoped="" ref="0x4071ca58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4071cde8" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4071cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4070d990"/>
        <function-ref name="clear" scoped="" ref="0x4070dd40"/>
        <function-ref name="isValid" scoped="" ref="0x4070d5e0"/>
        <function-ref name="set" scoped="" ref="0x4071b108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x406f5248" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x406f5248"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f5420"/>
        <function-ref name="headerLength" scoped="" ref="0x406f5500"/>
        <function-ref name="metadataLength" scoped="" ref="0x406f55e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x406f56c0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x406f57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x406f7d70" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x406f7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x406ee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x406f0688" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x406f0688"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x406f0860"/>
        <function-ref name="createAckPacket" scoped="" ref="0x406f0940"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406f0a20"/>
        <function-ref name="isAckPacket" scoped="" ref="0x406f0b00"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x406f0be0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x406f0cc0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406f0da0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x406f0e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4070eb80" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4070eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4070ed58"/>
        <function-ref name="getDSN" scoped="" ref="0x4070ee38"/>
        <function-ref name="setFCF" scoped="" ref="0x4070ef18"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406fa010"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x406fa0f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x406fa1d0"/>
        <function-ref name="setDSN" scoped="" ref="0x406fa2b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x406fa390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x406fa470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x406fa550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x406fa630"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x406fa710"/>
        <function-ref name="localAddr" scoped="" ref="0x406fa7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406fa950"/>
        <function-ref name="localPan" scoped="" ref="0x406faa30"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406fab10"/>
        <function-ref name="createAckFrame" scoped="" ref="0x406fabf0"/>
        <function-ref name="setFramePending" scoped="" ref="0x406facd0"/>
        <function-ref name="setDestPan" scoped="" ref="0x406fadb0"/>
        <function-ref name="isForMe" scoped="" ref="0x406fae90"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40706010"/>
        <function-ref name="getFCF" scoped="" ref="0x407060f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407061d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407062b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40706390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40700d70" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40700d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x406f7010"/>
        <function-ref name="reportChannelError" scoped="" ref="0x406f70f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406f71d0"/>
        <function-ref name="getSender" scoped="" ref="0x406f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x406fbc58" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x406fbc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x406fbe30"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x406fbf10"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x406fe010"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x406fe0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40756790" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40756790"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40756978"/>
        <function-ref name="wait" scoped="" ref="0x40756a58"/>
        <function-ref name="cancel" scoped="" ref="0x40756b38"/>
        <function-ref name="isFree" scoped="" ref="0x40756c18"/>
        <function-ref name="getNow" scoped="" ref="0x40756cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40768088" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40768088"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407785c8"/>
        <function-ref name="fired" scoped="" ref="0x40768cf0"/>
        <function-ref name="startAt" scoped="" ref="0x40778288"/>
        <function-ref name="isRunning" scoped="" ref="0x40778010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40778840"/>
        <function-ref name="start" scoped="" ref="0x407687d8"/>
        <function-ref name="stop" scoped="" ref="0x40768a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40eac8a8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40eac8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40eaca90"/>
        <function-ref name="wait" scoped="" ref="0x40eacb70"/>
        <function-ref name="cancel" scoped="" ref="0x40eacc50"/>
        <function-ref name="isFree" scoped="" ref="0x40eacd30"/>
        <function-ref name="getNow" scoped="" ref="0x40eace10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40eaa0c0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40eaa0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ea95c8"/>
        <function-ref name="fired" scoped="" ref="0x40eaad28"/>
        <function-ref name="startAt" scoped="" ref="0x40ea9288"/>
        <function-ref name="isRunning" scoped="" ref="0x40ea9010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ea9840"/>
        <function-ref name="start" scoped="" ref="0x40eaa810"/>
        <function-ref name="stop" scoped="" ref="0x40eaaab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40ea9a50" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40ea9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40ea9c28"/>
        <function-ref name="suspend" scoped="" ref="0x40ea9d08"/>
        <function-ref name="resume" scoped="" ref="0x40ea9de8"/>
        <function-ref name="run" scoped="" ref="0x40ea9ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x4076a220" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4076a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4076a3f8"/>
        <function-ref name="suspend" scoped="" ref="0x4076a4d8"/>
        <function-ref name="resume" scoped="" ref="0x4076a5b8"/>
        <function-ref name="run" scoped="" ref="0x4076a698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407cf6b0" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407cf6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407cf888"/>
        <function-ref name="cancel" scoped="" ref="0x407cf968"/>
        <function-ref name="sendDone" scoped="" ref="0x407cfa48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407cfba8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407cfba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407cfd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x407d03d0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x407d03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x407d05b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407d2d48" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407d2d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d2f20"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d1018"/>
        <function-ref name="getPayload" scoped="" ref="0x407d10f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d11d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d12b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407d1490" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407d1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d1678"/>
        <function-ref name="getPayload" scoped="" ref="0x407d1758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d1838"/>
        <function-ref name="cancel" scoped="" ref="0x407d1918"/>
        <function-ref name="sendDone" scoped="" ref="0x407d19f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x407d0010" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x407d0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d01f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407d0f08" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407d0f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407cf0f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407cf1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407cf2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407cf390"/>
        <function-ref name="headerLength" scoped="" ref="0x407cf470"/>
        <function-ref name="metadataLength" scoped="" ref="0x407cf550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x407cfee0" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x407cfee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407e50e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x407e51c0"/>
        <function-ref name="source" scoped="" ref="0x407e52a0"/>
        <function-ref name="destination" scoped="" ref="0x407e5380"/>
        <function-ref name="setSource" scoped="" ref="0x407e5460"/>
        <function-ref name="setDestination" scoped="" ref="0x407e5540"/>
        <function-ref name="setGroup" scoped="" ref="0x407e5620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407d1bd0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407d1bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d1db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x407d07b0" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x407d07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d0998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407d2170" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407d2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407d2348"/>
        <function-ref name="source" scoped="" ref="0x407d2428"/>
        <function-ref name="address" scoped="" ref="0x407d2508"/>
        <function-ref name="destination" scoped="" ref="0x407d25e8"/>
        <function-ref name="setSource" scoped="" ref="0x407d26c8"/>
        <function-ref name="setDestination" scoped="" ref="0x407d27a8"/>
        <function-ref name="type" scoped="" ref="0x407d2888"/>
        <function-ref name="setType" scoped="" ref="0x407d2968"/>
        <function-ref name="isForMe" scoped="" ref="0x407d2a48"/>
        <function-ref name="setGroup" scoped="" ref="0x407d2b28"/>
        <function-ref name="localGroup" scoped="" ref="0x407d2c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x407d0b90" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x407d0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d0d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ecd748" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ecd748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ecd920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ecd250" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ecd250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ecd428"/>
        <function-ref name="cancel" scoped="" ref="0x40ecd508"/>
        <function-ref name="sendDone" scoped="" ref="0x40ecd5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40ed0ef0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40ed0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40ecf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e9b850" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e9b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e9ba28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e9bb08"/>
        <function-ref name="getPayload" scoped="" ref="0x40e9bbe8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9bcc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e9bda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ed0010" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ed0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ed01f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ed02d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ed03b8"/>
        <function-ref name="cancel" scoped="" ref="0x40ed0498"/>
        <function-ref name="sendDone" scoped="" ref="0x40ed0578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40ed0b30" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40ed0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ed0d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e9c4c8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e9c4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e9c6a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e9c780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9c860"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e9c940"/>
        <function-ref name="headerLength" scoped="" ref="0x40e9ca20"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e9cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40ecda80" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40ecda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ecdcd8"/>
        <function-ref name="checkFrame" scoped="" ref="0x40ecddb8"/>
        <function-ref name="source" scoped="" ref="0x40ecde98"/>
        <function-ref name="destination" scoped="" ref="0x40ecc010"/>
        <function-ref name="setSource" scoped="" ref="0x40ecc0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40ecc1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40ecc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40ecc3f0" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40ecc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40ecc5c8"/>
        <function-ref name="changed" scoped="" ref="0x40ecc6a8"/>
        <function-ref name="amGroup" scoped="" ref="0x40ecc788"/>
        <function-ref name="setAddress" scoped="" ref="0x40ecc868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ecfa40" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ecfa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecfc18"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ecfcf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ecfdd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ecfeb8"/>
        <function-ref name="headerLength" scoped="" ref="0x40ecd010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ecd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ed0750" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ed0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ed0938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40ecf2e8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40ecf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ecf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e9cc40" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e9cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e9ce18"/>
        <function-ref name="source" scoped="" ref="0x40e9cef8"/>
        <function-ref name="address" scoped="" ref="0x40e9b010"/>
        <function-ref name="destination" scoped="" ref="0x40e9b0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40e9b1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e9b2b0"/>
        <function-ref name="type" scoped="" ref="0x40e9b390"/>
        <function-ref name="setType" scoped="" ref="0x40e9b470"/>
        <function-ref name="isForMe" scoped="" ref="0x40e9b550"/>
        <function-ref name="setGroup" scoped="" ref="0x40e9b630"/>
        <function-ref name="localGroup" scoped="" ref="0x40e9b710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40ecf6c8" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40ecf6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ecf8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x407c7820" loc="54:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407c7820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x407c79f8"/>
        <function-ref name="changed" scoped="" ref="0x407c7ad8"/>
        <function-ref name="amGroup" scoped="" ref="0x407c7bb8"/>
        <function-ref name="setAddress" scoped="" ref="0x407c7c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407e0010" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e01e8"/>
        <function-ref name="cancel" scoped="" ref="0x407e02c8"/>
        <function-ref name="sendDone" scoped="" ref="0x407e03a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x407e04e8" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407e04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407e06c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407e07a0"/>
        <function-ref name="request" scoped="" ref="0x407e0880"/>
        <function-ref name="granted" scoped="" ref="0x407e0960"/>
        <function-ref name="isOwner" scoped="" ref="0x407e0a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x407e1ab0" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x407e1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e1c88"/>
        <function-ref name="cancel" scoped="" ref="0x407e1d68"/>
        <function-ref name="sendDone" scoped="" ref="0x407e1e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x407ec8b0" loc="86:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x407ec8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x407eca98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407ecb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4081b208" loc="89:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4081b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4081b3f0"/>
        <function-ref name="configure" scoped="" ref="0x4081b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407ec170" loc="85:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407ec170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407ec358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407ec438"/>
        <function-ref name="request" scoped="" ref="0x407ec518"/>
        <function-ref name="granted" scoped="" ref="0x407ec5f8"/>
        <function-ref name="isOwner" scoped="" ref="0x407ec6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x407eccb8" loc="87:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407eccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407ece90"/>
        <function-ref name="userId" scoped="" ref="0x4081b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ed34b8" loc="44:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ed34b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ed3690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40ed37f0" loc="45:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40ed37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ed39c8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ed3aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40ed3b88"/>
        <function-ref name="dequeue" scoped="" ref="0x40ed3c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ed1010" loc="52:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ed1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ed11f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ed12d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ed18d8" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ed18d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ed1ac0"/>
        <function-ref name="configure" scoped="" ref="0x40ed1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40ed1d00" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40ed1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ed1ed8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f04010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f040f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f041d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ed27f0" loc="51:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ed27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ed29d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ed2ab8"/>
        <function-ref name="request" scoped="" ref="0x40ed2b98"/>
        <function-ref name="granted" scoped="" ref="0x40ed2c78"/>
        <function-ref name="isOwner" scoped="" ref="0x40ed2d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ed1418" loc="53:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ed1418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ed15f0"/>
        <function-ref name="userId" scoped="" ref="0x40ed16d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f04350" loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f04350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f04528"/>
        <function-ref name="runTask" scoped="" ref="0x40f04608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408496c8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408496c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408498a0"/>
        <function-ref name="cancel" scoped="" ref="0x40849980"/>
        <function-ref name="sendDone" scoped="" ref="0x40849a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40849bc0" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40849bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40849d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4084b190" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4084b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4084b368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408180e8" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408180e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408182c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x408183a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40818480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40818560"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40818640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x4084af10" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4084af10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40849108"/>
        <function-ref name="payloadLength" scoped="" ref="0x408491e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408492c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408493a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40849488"/>
        <function-ref name="metadataLength" scoped="" ref="0x40849568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4084b4d8" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4084b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4084b6b0"/>
        <function-ref name="getDSN" scoped="" ref="0x4084b790"/>
        <function-ref name="setFCF" scoped="" ref="0x4084b870"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4084b950"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4084ba30"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4084bb10"/>
        <function-ref name="setDSN" scoped="" ref="0x4084bbf0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4084bcd0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4084bdb0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4084be90"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4084a010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4084a0f0"/>
        <function-ref name="localAddr" scoped="" ref="0x4084a1d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4084a330"/>
        <function-ref name="localPan" scoped="" ref="0x4084a410"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4084a4f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4084a5d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4084a6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4084a790"/>
        <function-ref name="isForMe" scoped="" ref="0x4084a870"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4084a950"/>
        <function-ref name="getFCF" scoped="" ref="0x4084aa30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4084ab10"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4084abf0"/>
        <function-ref name="getFramePending" scoped="" ref="0x4084acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40818780" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40818780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40818958"/>
        <function-ref name="getPayload" scoped="" ref="0x40818a38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40818b18"/>
        <function-ref name="cancel" scoped="" ref="0x40818bf8"/>
        <function-ref name="sendDone" scoped="" ref="0x40818cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40818e38" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40818e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4084b050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4085a050" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4085a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4085a228"/>
        <function-ref name="cancel" scoped="" ref="0x4085a308"/>
        <function-ref name="sendDone" scoped="" ref="0x4085a3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4085a548" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4085a548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4085a720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40844880" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40844880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40844a58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40844b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40844c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40844cf8"/>
        <function-ref name="headerLength" scoped="" ref="0x40844dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40844eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x4085b528" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x4085b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4085b700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4085a880" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4085a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085aa58"/>
        <function-ref name="payloadLength" scoped="" ref="0x4085ab38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4085ac18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4085acf8"/>
        <function-ref name="headerLength" scoped="" ref="0x4085add8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4085aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x4085b030" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x4085b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4085b208"/>
        <function-ref name="cancel" scoped="" ref="0x4085b2e8"/>
        <function-ref name="sendDone" scoped="" ref="0x4085b3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40844050" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40844050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40844228"/>
        <function-ref name="cancel" scoped="" ref="0x40844308"/>
        <function-ref name="sendDone" scoped="" ref="0x408443e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40844548" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40844548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40844720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x4085b860" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x4085b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085ba38"/>
        <function-ref name="payloadLength" scoped="" ref="0x4085bb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4085bbf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4085bcd8"/>
        <function-ref name="headerLength" scoped="" ref="0x4085bdb8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4085be98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x408c4e30" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x408c4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x408c3050"/>
        <function-ref name="address" scoped="" ref="0x408c3130"/>
        <function-ref name="destination" scoped="" ref="0x408c3210"/>
        <function-ref name="setSource" scoped="" ref="0x408c32f0"/>
        <function-ref name="setDestination" scoped="" ref="0x408c33d0"/>
        <function-ref name="pan" scoped="" ref="0x408c34b0"/>
        <function-ref name="setPan" scoped="" ref="0x408c3590"/>
        <function-ref name="isForMe" scoped="" ref="0x408c3670"/>
        <function-ref name="localPan" scoped="" ref="0x408c3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408c3890" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408c3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408c3a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x408c3b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c3c28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408c3d08"/>
        <function-ref name="headerLength" scoped="" ref="0x408c3de8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408c3ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x408c5450" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408c5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x408c5628"/>
        <function-ref name="getDSN" scoped="" ref="0x408c5708"/>
        <function-ref name="setFCF" scoped="" ref="0x408c57e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x408c58c8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x408c59a8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x408c5a88"/>
        <function-ref name="setDSN" scoped="" ref="0x408c5b68"/>
        <function-ref name="createAckReply" scoped="" ref="0x408c5c48"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x408c5d28"/>
        <function-ref name="isDataFrame" scoped="" ref="0x408c5e08"/>
        <function-ref name="getAckRequired" scoped="" ref="0x408c5ee8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x408c4010"/>
        <function-ref name="localAddr" scoped="" ref="0x408c40f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408c4250"/>
        <function-ref name="localPan" scoped="" ref="0x408c4330"/>
        <function-ref name="setDestAddr" scoped="" ref="0x408c4410"/>
        <function-ref name="createAckFrame" scoped="" ref="0x408c44f0"/>
        <function-ref name="setFramePending" scoped="" ref="0x408c45d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x408c46b0"/>
        <function-ref name="isForMe" scoped="" ref="0x408c4790"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408c4870"/>
        <function-ref name="getFCF" scoped="" ref="0x408c4950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408c4a30"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408c4b10"/>
        <function-ref name="getFramePending" scoped="" ref="0x408c4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408c2090" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408c2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408c2268"/>
        <function-ref name="payloadLength" scoped="" ref="0x408c2348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c2428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408c2508"/>
        <function-ref name="headerLength" scoped="" ref="0x408c25e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408c26c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40f37e38" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40f37e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40f36050"/>
        <function-ref name="address" scoped="" ref="0x40f36130"/>
        <function-ref name="destination" scoped="" ref="0x40f36210"/>
        <function-ref name="setSource" scoped="" ref="0x40f362f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f363d0"/>
        <function-ref name="pan" scoped="" ref="0x40f364b0"/>
        <function-ref name="setPan" scoped="" ref="0x40f36590"/>
        <function-ref name="isForMe" scoped="" ref="0x40f36670"/>
        <function-ref name="localPan" scoped="" ref="0x40f36750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f36890" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f36890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f36a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f36b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f36c28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f36d08"/>
        <function-ref name="headerLength" scoped="" ref="0x40f36de8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f36ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40f38490" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40f38490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40f38668"/>
        <function-ref name="getDSN" scoped="" ref="0x40f38748"/>
        <function-ref name="setFCF" scoped="" ref="0x40f38828"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40f38908"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40f389e8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40f38ac8"/>
        <function-ref name="setDSN" scoped="" ref="0x40f38ba8"/>
        <function-ref name="createAckReply" scoped="" ref="0x40f38c88"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40f38d68"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40f38e48"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40f38f28"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40f37018"/>
        <function-ref name="localAddr" scoped="" ref="0x40f370f8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40f37258"/>
        <function-ref name="localPan" scoped="" ref="0x40f37338"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40f37418"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40f374f8"/>
        <function-ref name="setFramePending" scoped="" ref="0x40f375d8"/>
        <function-ref name="setDestPan" scoped="" ref="0x40f376b8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f37798"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40f37878"/>
        <function-ref name="getFCF" scoped="" ref="0x40f37958"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40f37a38"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40f37b18"/>
        <function-ref name="getFramePending" scoped="" ref="0x40f37bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40f35070" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40f35070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40f35248"/>
        <function-ref name="changed" scoped="" ref="0x40f35328"/>
        <function-ref name="amGroup" scoped="" ref="0x40f35408"/>
        <function-ref name="setAddress" scoped="" ref="0x40f354e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f35648" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f35648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f35820"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f35900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f359e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f35ac0"/>
        <function-ref name="headerLength" scoped="" ref="0x40f35ba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f35c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408bfaf8" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408bfaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408bfcd0"/>
        <function-ref name="cancel" scoped="" ref="0x408bfdb0"/>
        <function-ref name="sendDone" scoped="" ref="0x408bfe90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408f4010" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f41e8"/>
        <function-ref name="header" scoped="" ref="0x408f42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408bf1d8" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408bf1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408bf3b0"/>
        <function-ref name="cancel" scoped="" ref="0x408bf490"/>
        <function-ref name="sendDone" scoped="" ref="0x408bf570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408f4428" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408f4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408f4600"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408f46e0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x408f47c0"/>
        <function-ref name="getSender" scoped="" ref="0x408f48a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408bf6b0" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408bf6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408bf888"/>
        <function-ref name="header" scoped="" ref="0x408bf968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f3f010" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f3f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f3f1e8"/>
        <function-ref name="cancel" scoped="" ref="0x40f3f2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f3f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f3f508" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f3f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f3f6e0"/>
        <function-ref name="header" scoped="" ref="0x40f3f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40f3e580" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40f3e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f3e758"/>
        <function-ref name="clearAll" scoped="" ref="0x40f3e838"/>
        <function-ref name="get" scoped="" ref="0x40f3e918"/>
        <function-ref name="set" scoped="" ref="0x40f3e9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f41318" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f41318"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f414f0"/>
        <function-ref name="cancel" scoped="" ref="0x40f415d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f416b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40f3feb8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40f3feb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40f3e0c0"/>
        <function-ref name="insertNode" scoped="" ref="0x40f3e1a0"/>
        <function-ref name="getNode" scoped="" ref="0x40f3e280"/>
        <function-ref name="evicted" scoped="" ref="0x40f3e360"/>
        <function-ref name="getIndex" scoped="" ref="0x40f3e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40f417f0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40f417f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f419c8"/>
        <function-ref name="header" scoped="" ref="0x40f41aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f41be8" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f41be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f41dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x40f3f900" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40f3f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40f3fad8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40f3fbb8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40f3fc98"/>
        <function-ref name="getSender" scoped="" ref="0x40f3fd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408da438" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408da438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408da610"/>
        <function-ref name="insertNode" scoped="" ref="0x408da6f0"/>
        <function-ref name="getNode" scoped="" ref="0x408da7d0"/>
        <function-ref name="evicted" scoped="" ref="0x408da8b0"/>
        <function-ref name="getIndex" scoped="" ref="0x408da990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x408d5e00" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408d5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d4010"/>
        <function-ref name="clearAll" scoped="" ref="0x408d40f0"/>
        <function-ref name="get" scoped="" ref="0x408d41d0"/>
        <function-ref name="set" scoped="" ref="0x408d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408d53d8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408d53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408d55b0"/>
        <function-ref name="insertNode" scoped="" ref="0x408d5690"/>
        <function-ref name="getNode" scoped="" ref="0x408d5770"/>
        <function-ref name="evicted" scoped="" ref="0x408d5850"/>
        <function-ref name="getIndex" scoped="" ref="0x408d5930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408d5040" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408d5040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d5218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40f3d9c0" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40f3d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f3db98"/>
        <function-ref name="clearAll" scoped="" ref="0x40f3dc78"/>
        <function-ref name="get" scoped="" ref="0x40f3dd58"/>
        <function-ref name="set" scoped="" ref="0x40f3de38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40908360" loc="85:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40908360"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40908538"/>
        <function-ref name="cancel" scoped="" ref="0x40908618"/>
        <function-ref name="sendDone" scoped="" ref="0x409086f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40908858" loc="86:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40908858"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40908a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x40906f08" loc="93:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40906f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x409050f0"/>
        <function-ref name="noAck" scoped="" ref="0x409051d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x409052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408f2c08" loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408f2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f2de0"/>
        <function-ref name="cancel" scoped="" ref="0x408f2ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x408f1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408f1b20" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408f1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408f1cf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408f1dd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f1eb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40908010"/>
        <function-ref name="headerLength" scoped="" ref="0x409080f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409081d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40908b90" loc="87:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40908b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40908d68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40908e48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40908f28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40906018"/>
        <function-ref name="headerLength" scoped="" ref="0x409060f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409061d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40906830" loc="92:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40906830"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40906a08"/>
        <function-ref name="setRetries" scoped="" ref="0x40906ae8"/>
        <function-ref name="getRetries" scoped="" ref="0x40906bc8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40906ca8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40906d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408f1170" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408f1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f1348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40906318" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40906318"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x409064f0"/>
        <function-ref name="noAck" scoped="" ref="0x409065d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x409066b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408f1488" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408f1488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x408f1660"/>
        <function-ref name="setRetries" scoped="" ref="0x408f1740"/>
        <function-ref name="getRetries" scoped="" ref="0x408f1820"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408f1900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408f19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40902b88" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40902b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40902d60"/>
        <function-ref name="stopDone" scoped="" ref="0x40902e40"/>
        <function-ref name="start" scoped="" ref="0x40902f20"/>
        <function-ref name="stop" scoped="" ref="0x40901018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40919d30" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40919d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40919f08"/>
        <function-ref name="cancel" scoped="" ref="0x40912010"/>
        <function-ref name="sendDone" scoped="" ref="0x409120f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40912250" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40912250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40912428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40901178" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40901178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40901350"/>
        <function-ref name="cancel" scoped="" ref="0x40901430"/>
        <function-ref name="sendDone" scoped="" ref="0x40901510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40901988" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40901988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40901b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40901c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40901d20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40901e00"/>
        <function-ref name="headerLength" scoped="" ref="0x40901ee0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40919010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40919150" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40919150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40919328"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40919408"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x409194e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x409195c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40919758" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40919758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40919930"/>
        <function-ref name="stopDone" scoped="" ref="0x40919a10"/>
        <function-ref name="start" scoped="" ref="0x40919af0"/>
        <function-ref name="stop" scoped="" ref="0x40919bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40901670" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40901670"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40901848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40912588" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40912588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40912760"/>
        <function-ref name="payloadLength" scoped="" ref="0x40912840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40912920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40912a00"/>
        <function-ref name="headerLength" scoped="" ref="0x40912ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40912bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40f5f448" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40f5f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40f5f620"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40f5f700"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40f5f7e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40f5f8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4090fd98" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4090fd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4090e010"/>
        <function-ref name="stopDone" scoped="" ref="0x4090e0f0"/>
        <function-ref name="start" scoped="" ref="0x4090e1d0"/>
        <function-ref name="stop" scoped="" ref="0x4090e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4094a180" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4094a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4094a358"/>
        <function-ref name="turnOn" scoped="" ref="0x4094a438"/>
        <function-ref name="setChannel" scoped="" ref="0x4094a518"/>
        <function-ref name="done" scoped="" ref="0x4094a5f8"/>
        <function-ref name="standby" scoped="" ref="0x4094a6d8"/>
        <function-ref name="getChannel" scoped="" ref="0x4094a7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4090e410" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4090e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090e5e8"/>
        <function-ref name="cancel" scoped="" ref="0x4090e6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4090e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x4094add0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4094add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40949010"/>
        <function-ref name="header" scoped="" ref="0x409490f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4090e908" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4090e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4094a8f8" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4094a8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094aad0"/>
        <function-ref name="ready" scoped="" ref="0x4094abb0"/>
        <function-ref name="sendDone" scoped="" ref="0x4094ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4090ec20" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4090ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4090edf8"/>
        <function-ref name="setChannel" scoped="" ref="0x4090eed8"/>
        <function-ref name="getChannel" scoped="" ref="0x4094a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f5c790" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f5c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f5c968"/>
        <function-ref name="stopDone" scoped="" ref="0x40f5ca48"/>
        <function-ref name="start" scoped="" ref="0x40f5cb28"/>
        <function-ref name="stop" scoped="" ref="0x40f5cc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40f5cd68" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40f5cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f5a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40f5ae88" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40f5ae88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40f59070"/>
        <function-ref name="turnOn" scoped="" ref="0x40f59150"/>
        <function-ref name="setChannel" scoped="" ref="0x40f59230"/>
        <function-ref name="done" scoped="" ref="0x40f59310"/>
        <function-ref name="standby" scoped="" ref="0x40f593f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40f594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f5a170" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f5a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f5a348"/>
        <function-ref name="cancel" scoped="" ref="0x40f5a428"/>
        <function-ref name="sendDone" scoped="" ref="0x40f5a508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40f579c0" loc="189:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40f579c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f57b98"/>
        <function-ref name="runTask" scoped="" ref="0x40f57c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40f57150" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40f57150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f57328"/>
        <function-ref name="header" scoped="" ref="0x40f57408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x40f57df8" loc="144:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x40f57df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f56010"/>
        <function-ref name="runTask" scoped="" ref="0x40f560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f5a668" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f5a668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f5a840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x40f57588" loc="322:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x40f57588"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f57760"/>
        <function-ref name="runTask" scoped="" ref="0x40f57840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40f59bc8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40f59bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f59da0"/>
        <function-ref name="ready" scoped="" ref="0x40f59e80"/>
        <function-ref name="sendDone" scoped="" ref="0x40f57010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40f5a980" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40f5a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40f5ab58"/>
        <function-ref name="setChannel" scoped="" ref="0x40f5ac38"/>
        <function-ref name="getChannel" scoped="" ref="0x40f5ad18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40f59610" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40f59610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40f597e8"/>
        <function-ref name="suspend" scoped="" ref="0x40f598c8"/>
        <function-ref name="resume" scoped="" ref="0x40f599a8"/>
        <function-ref name="run" scoped="" ref="0x40f59a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40964e58" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40964e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097f050"/>
        <function-ref name="ready" scoped="" ref="0x4097f130"/>
        <function-ref name="sendDone" scoped="" ref="0x4097f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4097f370" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4097f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097f548"/>
        <function-ref name="header" scoped="" ref="0x4097f628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4097f768" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4097f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4097f940"/>
        <function-ref name="wait" scoped="" ref="0x4097fa20"/>
        <function-ref name="cancel" scoped="" ref="0x4097fb00"/>
        <function-ref name="isFree" scoped="" ref="0x4097fbe0"/>
        <function-ref name="getNow" scoped="" ref="0x4097fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4097fe20" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4097fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40979010"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x409790f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x409791d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x409792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40964a10" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40964a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40964be8"/>
        <function-ref name="header" scoped="" ref="0x40964cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40964538" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40964538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40964710"/>
        <function-ref name="ready" scoped="" ref="0x409647f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409648d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40fa50a0" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40fa50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fa5278"/>
        <function-ref name="ready" scoped="" ref="0x40fa5358"/>
        <function-ref name="sendDone" scoped="" ref="0x40fa5438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40fa5598" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40fa5598"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fa5770"/>
        <function-ref name="header" scoped="" ref="0x40fa5850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40fa5990" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40fa5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40fa5b68"/>
        <function-ref name="wait" scoped="" ref="0x40fa5c48"/>
        <function-ref name="cancel" scoped="" ref="0x40fa5d28"/>
        <function-ref name="isFree" scoped="" ref="0x40fa5e08"/>
        <function-ref name="getNow" scoped="" ref="0x40fa5ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40fa4040" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40fa4040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40fa4218"/>
        <function-ref name="rand32" scoped="" ref="0x40fa42f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40fa4458" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40fa4458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40fa4630"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40fa4710"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40fa47f0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40fa48d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40f71c40" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40f71c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f71e18"/>
        <function-ref name="header" scoped="" ref="0x40f71ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40f71768" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40f71768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f71940"/>
        <function-ref name="ready" scoped="" ref="0x40f71a20"/>
        <function-ref name="sendDone" scoped="" ref="0x40f71b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x40fa4a50" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x40fa4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fa4c28"/>
        <function-ref name="runTask" scoped="" ref="0x40fa4d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4097d948" loc="46:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4097d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4097db20"/>
        <function-ref name="rand32" scoped="" ref="0x4097dc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4097d088" loc="45:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4097d088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40981de0" loc="44:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40981de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40978478" loc="48:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40978478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40978650"/>
        <function-ref name="rand32" scoped="" ref="0x40978730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4097bb18" loc="47:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4097bb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409781e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4097b5f8" loc="46:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4097b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4098c060" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4098c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098c238"/>
        <function-ref name="ready" scoped="" ref="0x4098c318"/>
        <function-ref name="sendDone" scoped="" ref="0x4098c3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4098c558" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4098c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4098c730"/>
        <function-ref name="header" scoped="" ref="0x4098c810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4098c950" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4098c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4098cb28"/>
        <function-ref name="wait" scoped="" ref="0x4098cc08"/>
        <function-ref name="cancel" scoped="" ref="0x4098cce8"/>
        <function-ref name="isFree" scoped="" ref="0x4098cdc8"/>
        <function-ref name="getNow" scoped="" ref="0x4098cea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x409b2988" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x409b2988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409b2b60"/>
        <function-ref name="get" scoped="" ref="0x409b2c40"/>
        <function-ref name="setValue" scoped="" ref="0x409b2d20"/>
        <function-ref name="set" scoped="" ref="0x409b2e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409b2030" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409b2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409b2208"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409b22e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409b23c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409b24a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409b2588"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409b2668"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409b2748"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409b2828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4098e720" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4098e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4098e8f8"/>
        <function-ref name="header" scoped="" ref="0x4098e9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4098e248" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4098e248"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098e420"/>
        <function-ref name="ready" scoped="" ref="0x4098e500"/>
        <function-ref name="sendDone" scoped="" ref="0x4098e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4098eb18" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4098eb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4098ecf0"/>
        <function-ref name="noAck" scoped="" ref="0x4098edd0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4098eeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409aee40" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409aee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409ad050"/>
        <function-ref name="stopDone" scoped="" ref="0x409ad130"/>
        <function-ref name="start" scoped="" ref="0x409ad210"/>
        <function-ref name="stop" scoped="" ref="0x409ad2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409c2cc0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409c2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c2e98"/>
        <function-ref name="request" scoped="" ref="0x409c1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409be330" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409be330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409be508"/>
        <function-ref name="ready" scoped="" ref="0x409be5e8"/>
        <function-ref name="sendDone" scoped="" ref="0x409be6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409be828" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409be828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409bea00"/>
        <function-ref name="header" scoped="" ref="0x409beae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409adc20" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409adc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409addf8"/>
        <function-ref name="turnOn" scoped="" ref="0x409aded8"/>
        <function-ref name="setChannel" scoped="" ref="0x409c2010"/>
        <function-ref name="done" scoped="" ref="0x409c20f0"/>
        <function-ref name="standby" scoped="" ref="0x409c21d0"/>
        <function-ref name="getChannel" scoped="" ref="0x409c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409c1150" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409c1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c1328"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c1408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c14e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c15c8"/>
        <function-ref name="headerLength" scoped="" ref="0x409c16a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c1788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409c0a80" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409c0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409c0cd8"/>
        <function-ref name="turnOn" scoped="" ref="0x409c0db8"/>
        <function-ref name="setChannel" scoped="" ref="0x409c0e98"/>
        <function-ref name="done" scoped="" ref="0x409be010"/>
        <function-ref name="standby" scoped="" ref="0x409be0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x409be1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409c18e8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409c18e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409c1ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409c28c8" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409c28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c2aa0"/>
        <function-ref name="header" scoped="" ref="0x409c2b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x409c0748" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x409c0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c0920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409c1c50" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409c1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409c1e28"/>
        <function-ref name="stopDone" scoped="" ref="0x409c1f08"/>
        <function-ref name="start" scoped="" ref="0x409c0010"/>
        <function-ref name="stop" scoped="" ref="0x409c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409bd090" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409bd090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409bd268"/>
        <function-ref name="payloadLength" scoped="" ref="0x409bd348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409bd428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409bd508"/>
        <function-ref name="headerLength" scoped="" ref="0x409bd5e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409bd6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409ad908" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409ad908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409adae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409bd828" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409bd828"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409bda00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x409c0250" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x409c0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c0428"/>
        <function-ref name="cancel" scoped="" ref="0x409c0508"/>
        <function-ref name="sendDone" scoped="" ref="0x409c05e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409c23f0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c25c8"/>
        <function-ref name="ready" scoped="" ref="0x409c26a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409c2788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409bec40" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409bec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409bee18"/>
        <function-ref name="request" scoped="" ref="0x409beef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409ad430" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409ad430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409ad608"/>
        <function-ref name="cancel" scoped="" ref="0x409ad6e8"/>
        <function-ref name="sendDone" scoped="" ref="0x409ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x409e58a0" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x409e58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e5a78"/>
        <function-ref name="get" scoped="" ref="0x409e5b58"/>
        <function-ref name="setValue" scoped="" ref="0x409e5c38"/>
        <function-ref name="set" scoped="" ref="0x409e5d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409e6010" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409e6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e61e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409e62c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409e63a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409e6488"/>
        <function-ref name="headerLength" scoped="" ref="0x409e6568"/>
        <function-ref name="metadataLength" scoped="" ref="0x409e6648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409e5108" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409e5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e52e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409e53c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409e54a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409e5580"/>
        <function-ref name="headerLength" scoped="" ref="0x409e5660"/>
        <function-ref name="metadataLength" scoped="" ref="0x409e5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409e98f8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409e98f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409e8418"/>
        <function-ref name="clear" scoped="" ref="0x409e87c8"/>
        <function-ref name="isValid" scoped="" ref="0x409e8068"/>
        <function-ref name="set" scoped="" ref="0x409e8b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x409e6868" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409e6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409e6eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409b9108" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409b9108"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409b9c08"/>
        <function-ref name="clear" scoped="" ref="0x409e9010"/>
        <function-ref name="isValid" scoped="" ref="0x409b9858"/>
        <function-ref name="set" scoped="" ref="0x409e93c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40faf280" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40faf280"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40faf458"/>
        <function-ref name="get" scoped="" ref="0x40faf538"/>
        <function-ref name="setValue" scoped="" ref="0x40faf618"/>
        <function-ref name="set" scoped="" ref="0x40faf6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40fb1a78" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40fb1a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fb1c50"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fb1d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb1e10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fb1ef0"/>
        <function-ref name="headerLength" scoped="" ref="0x40faf010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40faf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40faeb48" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40faeb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40faed20"/>
        <function-ref name="payloadLength" scoped="" ref="0x40faee00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40faeee0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fad010"/>
        <function-ref name="headerLength" scoped="" ref="0x40fad0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40fad1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40fb23e0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40fb23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40fb2ee0"/>
        <function-ref name="clear" scoped="" ref="0x40fb12d0"/>
        <function-ref name="isValid" scoped="" ref="0x40fb2b30"/>
        <function-ref name="set" scoped="" ref="0x40fb1680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40faf8e8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40faf8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fae010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40fae2d0" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40fae2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fae918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40fb7c20" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40fb7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40fb3730"/>
        <function-ref name="clear" scoped="" ref="0x40fb3ae0"/>
        <function-ref name="isValid" scoped="" ref="0x40fb3380"/>
        <function-ref name="set" scoped="" ref="0x40fb3e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409eec50" loc="20:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409eec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409ea2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a02a58" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a02a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a02c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a02d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a02df0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a02ed0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a01010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a010f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a01280" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a01280"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a01458"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a01538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a01618"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a016f8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a017d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a018b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40a02490" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40a02490"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a02678"/>
        <function-ref name="get" scoped="" ref="0x40a02758"/>
        <function-ref name="setValue" scoped="" ref="0x40a02838"/>
        <function-ref name="set" scoped="" ref="0x40a02918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a0fb50" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a0fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a0fd28"/>
        <function-ref name="stopDone" scoped="" ref="0x40a0fe08"/>
        <function-ref name="start" scoped="" ref="0x40a0fee8"/>
        <function-ref name="stop" scoped="" ref="0x40a0e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a0da20" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a0da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a0dbf8"/>
        <function-ref name="request" scoped="" ref="0x40a0dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a09010" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a09010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a091e8"/>
        <function-ref name="ready" scoped="" ref="0x40a092c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a093a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a09508" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a09508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a096e0"/>
        <function-ref name="header" scoped="" ref="0x40a097c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a0e940" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a0e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a0eb18"/>
        <function-ref name="turnOn" scoped="" ref="0x40a0ebf8"/>
        <function-ref name="setChannel" scoped="" ref="0x40a0ecd8"/>
        <function-ref name="done" scoped="" ref="0x40a0edb8"/>
        <function-ref name="standby" scoped="" ref="0x40a0ee98"/>
        <function-ref name="getChannel" scoped="" ref="0x40a0d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a0de18" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a0de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0c010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a0c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a0c1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a0c2b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a0c390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a0c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40a0a760" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40a0a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a0a9b8"/>
        <function-ref name="turnOn" scoped="" ref="0x40a0aa98"/>
        <function-ref name="setChannel" scoped="" ref="0x40a0ab78"/>
        <function-ref name="done" scoped="" ref="0x40a0ac58"/>
        <function-ref name="standby" scoped="" ref="0x40a0ad38"/>
        <function-ref name="getChannel" scoped="" ref="0x40a0ae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40a0c5d0" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a0c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a0c7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a0d628" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a0d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a0d800"/>
        <function-ref name="header" scoped="" ref="0x40a0d8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40a0a428" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40a0a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a0a600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a0c938" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a0c938"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a0cb10"/>
        <function-ref name="stopDone" scoped="" ref="0x40a0cbf0"/>
        <function-ref name="start" scoped="" ref="0x40a0ccd0"/>
        <function-ref name="stop" scoped="" ref="0x40a0cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a09d38" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a09d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a09f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a08010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a080f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a081d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a082b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a08390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40a0e628" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40a0e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a0e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a084f0" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a084f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a086c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40a0cf10" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40a0cf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a0a108"/>
        <function-ref name="cancel" scoped="" ref="0x40a0a1e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a0a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a0d150" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a0d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a0d328"/>
        <function-ref name="ready" scoped="" ref="0x40a0d408"/>
        <function-ref name="sendDone" scoped="" ref="0x40a0d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40a09920" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40a09920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a09af8"/>
        <function-ref name="request" scoped="" ref="0x40a09bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40a0e150" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40a0e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a0e328"/>
        <function-ref name="cancel" scoped="" ref="0x40a0e408"/>
        <function-ref name="sendDone" scoped="" ref="0x40a0e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a24010" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a24010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a241e8"/>
        <function-ref name="request" scoped="" ref="0x40a242c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a211c0" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a211c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a21d88"/>
        <function-ref name="get" scoped="" ref="0x40a21ac8"/>
        <function-ref name="isSet" scoped="" ref="0x40a21808"/>
        <function-ref name="set" scoped="" ref="0x40a20068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a17e68" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a17e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a37050"/>
        <function-ref name="get" scoped="" ref="0x40a37130"/>
        <function-ref name="setValue" scoped="" ref="0x40a37210"/>
        <function-ref name="set" scoped="" ref="0x40a372f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a18010" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a18010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a18b10"/>
        <function-ref name="clear" scoped="" ref="0x40a18ec0"/>
        <function-ref name="isValid" scoped="" ref="0x40a18760"/>
        <function-ref name="set" scoped="" ref="0x40a172a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a06e18" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a06e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a25010"/>
        <function-ref name="turnOn" scoped="" ref="0x40a250f0"/>
        <function-ref name="setChannel" scoped="" ref="0x40a251d0"/>
        <function-ref name="done" scoped="" ref="0x40a252b0"/>
        <function-ref name="standby" scoped="" ref="0x40a25390"/>
        <function-ref name="getChannel" scoped="" ref="0x40a25470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a37b58" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a37b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a37d30"/>
        <function-ref name="wait" scoped="" ref="0x40a37e10"/>
        <function-ref name="cancel" scoped="" ref="0x40a37ef0"/>
        <function-ref name="isFree" scoped="" ref="0x40a36010"/>
        <function-ref name="getNow" scoped="" ref="0x40a360f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a24e18" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a24e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a23a08"/>
        <function-ref name="get" scoped="" ref="0x40a23748"/>
        <function-ref name="isSet" scoped="" ref="0x40a23488"/>
        <function-ref name="set" scoped="" ref="0x40a23cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a24478" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a24478"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a24650"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a24730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a24810"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a248f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a249d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a24ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a19650" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a19650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a198a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a19988"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a19a68"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a19b48"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a19c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a25b68" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a25b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a25d40"/>
        <function-ref name="header" scoped="" ref="0x40a25e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a1cb98" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a1cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a19068"/>
        <function-ref name="fired" scoped="" ref="0x40a1b820"/>
        <function-ref name="startAt" scoped="" ref="0x40a1bd10"/>
        <function-ref name="isRunning" scoped="" ref="0x40a1ba98"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a192e0"/>
        <function-ref name="start" scoped="" ref="0x40a1b308"/>
        <function-ref name="stop" scoped="" ref="0x40a1b5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a20598" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a20598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1f190"/>
        <function-ref name="get" scoped="" ref="0x40a20ea0"/>
        <function-ref name="isSet" scoped="" ref="0x40a20be0"/>
        <function-ref name="set" scoped="" ref="0x40a1f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a1c138" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a1c138"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a1c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a25610" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a25610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a257e8"/>
        <function-ref name="ready" scoped="" ref="0x40a258c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a259a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a1f960" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a1f960"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1d590"/>
        <function-ref name="get" scoped="" ref="0x40a1d2d0"/>
        <function-ref name="isSet" scoped="" ref="0x40a1d010"/>
        <function-ref name="set" scoped="" ref="0x40a1d850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a37538" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a37538"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a37710"/>
        <function-ref name="get" scoped="" ref="0x40a377f0"/>
        <function-ref name="setValue" scoped="" ref="0x40a378d0"/>
        <function-ref name="set" scoped="" ref="0x40a379b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a177d0" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a177d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a179a8"/>
        <function-ref name="get" scoped="" ref="0x40a17a88"/>
        <function-ref name="setValue" scoped="" ref="0x40a17b68"/>
        <function-ref name="set" scoped="" ref="0x40a17c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a1dc00" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a1dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a1ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a31b58" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a31b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a31d30"/>
        <function-ref name="request" scoped="" ref="0x40a31e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a3f770" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a3f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a3fec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a2fd18" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a2fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2d8f0"/>
        <function-ref name="get" scoped="" ref="0x40a2d630"/>
        <function-ref name="isSet" scoped="" ref="0x40a2d370"/>
        <function-ref name="set" scoped="" ref="0x40a2dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a3eae0" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a3eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3ecb8"/>
        <function-ref name="get" scoped="" ref="0x40a3ed98"/>
        <function-ref name="setValue" scoped="" ref="0x40a3ee78"/>
        <function-ref name="set" scoped="" ref="0x40a3d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40a32590" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40a32590"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a32768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a3da60" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a3da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a3c6b8"/>
        <function-ref name="clear" scoped="" ref="0x40a3ca68"/>
        <function-ref name="isValid" scoped="" ref="0x40a3c308"/>
        <function-ref name="set" scoped="" ref="0x40a3ce18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40a27db8" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a27db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a48010"/>
        <function-ref name="isInput" scoped="" ref="0x40a480f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a481d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a482b0"/>
        <function-ref name="get" scoped="" ref="0x40a48390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a48470"/>
        <function-ref name="set" scoped="" ref="0x40a48550"/>
        <function-ref name="clr" scoped="" ref="0x40a48630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a3b8a0" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a3b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a3ba78"/>
        <function-ref name="wait" scoped="" ref="0x40a3bb58"/>
        <function-ref name="cancel" scoped="" ref="0x40a3bc38"/>
        <function-ref name="isFree" scoped="" ref="0x40a3bd18"/>
        <function-ref name="getNow" scoped="" ref="0x40a3bdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a32910" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a32910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a32ae8"/>
        <function-ref name="turnOn" scoped="" ref="0x40a32bc8"/>
        <function-ref name="setChannel" scoped="" ref="0x40a32ca8"/>
        <function-ref name="done" scoped="" ref="0x40a32d88"/>
        <function-ref name="standby" scoped="" ref="0x40a32e68"/>
        <function-ref name="getChannel" scoped="" ref="0x40a31010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40a40258" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a40258"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a408a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a309b0" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a309b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2f590"/>
        <function-ref name="get" scoped="" ref="0x40a2f2d0"/>
        <function-ref name="isSet" scoped="" ref="0x40a2f010"/>
        <function-ref name="set" scoped="" ref="0x40a2f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a30010" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a30010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a301e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a302c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a303a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a30488"/>
        <function-ref name="headerLength" scoped="" ref="0x40a30568"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a30648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40a273d0" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a273d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a275a8"/>
        <function-ref name="isInput" scoped="" ref="0x40a27688"/>
        <function-ref name="toggle" scoped="" ref="0x40a27768"/>
        <function-ref name="isOutput" scoped="" ref="0x40a27848"/>
        <function-ref name="get" scoped="" ref="0x40a27928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a27a08"/>
        <function-ref name="set" scoped="" ref="0x40a27ae8"/>
        <function-ref name="clr" scoped="" ref="0x40a27bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a40bc0" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a40bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a40d98"/>
        <function-ref name="headerLength" scoped="" ref="0x40a40e78"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a3e010"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a3e0f0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a3e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a31708" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a31708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a318e0"/>
        <function-ref name="header" scoped="" ref="0x40a319c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40a931e0" loc="847:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40a931e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a933b8"/>
        <function-ref name="runTask" scoped="" ref="0x40a93498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a2c100" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a2c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2ccc8"/>
        <function-ref name="get" scoped="" ref="0x40a2ca08"/>
        <function-ref name="isSet" scoped="" ref="0x40a2c748"/>
        <function-ref name="set" scoped="" ref="0x40a2a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a33f10" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a33f10"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a32108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a28698" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a28698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a28870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a28950"/>
        <function-ref name="request" scoped="" ref="0x40a28a30"/>
        <function-ref name="granted" scoped="" ref="0x40a28b10"/>
        <function-ref name="isOwner" scoped="" ref="0x40a28bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40a29b80" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a29b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a29dd8"/>
        <function-ref name="isInput" scoped="" ref="0x40a29eb8"/>
        <function-ref name="toggle" scoped="" ref="0x40a28010"/>
        <function-ref name="isOutput" scoped="" ref="0x40a280f0"/>
        <function-ref name="get" scoped="" ref="0x40a281d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a282b0"/>
        <function-ref name="set" scoped="" ref="0x40a28390"/>
        <function-ref name="clr" scoped="" ref="0x40a28470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a2a520" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a2a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a290f8"/>
        <function-ref name="get" scoped="" ref="0x40a2ae28"/>
        <function-ref name="isSet" scoped="" ref="0x40a2ab68"/>
        <function-ref name="set" scoped="" ref="0x40a293b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a311b0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a311b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a31388"/>
        <function-ref name="ready" scoped="" ref="0x40a31468"/>
        <function-ref name="sendDone" scoped="" ref="0x40a31548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40a42f18" loc="72:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a42f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a44108"/>
        <function-ref name="disable" scoped="" ref="0x40a441e8"/>
        <function-ref name="captured" scoped="" ref="0x40a442c8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a443a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40a45d10" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a45d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a45ee8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a27010"/>
        <function-ref name="splitRead" scoped="" ref="0x40a270f0"/>
        <function-ref name="write" scoped="" ref="0x40a271d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a3d258" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a3d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3d430"/>
        <function-ref name="get" scoped="" ref="0x40a3d510"/>
        <function-ref name="setValue" scoped="" ref="0x40a3d5f0"/>
        <function-ref name="set" scoped="" ref="0x40a3d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a3e448" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a3e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3e620"/>
        <function-ref name="get" scoped="" ref="0x40a3e700"/>
        <function-ref name="setValue" scoped="" ref="0x40a3e7e0"/>
        <function-ref name="set" scoped="" ref="0x40a3e8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a29768" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a29768"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a29940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a3b280" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a3b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a3b458"/>
        <function-ref name="suspend" scoped="" ref="0x40a3b538"/>
        <function-ref name="resume" scoped="" ref="0x40a3b618"/>
        <function-ref name="run" scoped="" ref="0x40a3b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40ab44a0" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40ab44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ab4678"/>
        <function-ref name="isInput" scoped="" ref="0x40ab4758"/>
        <function-ref name="toggle" scoped="" ref="0x40ab4838"/>
        <function-ref name="isOutput" scoped="" ref="0x40ab4918"/>
        <function-ref name="get" scoped="" ref="0x40ab49f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ab4ad8"/>
        <function-ref name="set" scoped="" ref="0x40ab4bb8"/>
        <function-ref name="clr" scoped="" ref="0x40ab4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40ab59f8" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40ab59f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ab5bd0"/>
        <function-ref name="isInput" scoped="" ref="0x40ab5cb0"/>
        <function-ref name="toggle" scoped="" ref="0x40ab5d90"/>
        <function-ref name="isOutput" scoped="" ref="0x40ab5e70"/>
        <function-ref name="get" scoped="" ref="0x40ab4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ab40f0"/>
        <function-ref name="set" scoped="" ref="0x40ab41d0"/>
        <function-ref name="clr" scoped="" ref="0x40ab42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ab3698" loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ab3698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ab2b50"/>
        <function-ref name="fired" scoped="" ref="0x40ab2320"/>
        <function-ref name="startAt" scoped="" ref="0x40ab2810"/>
        <function-ref name="isRunning" scoped="" ref="0x40ab2598"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ab2dc8"/>
        <function-ref name="start" scoped="" ref="0x40ab3de8"/>
        <function-ref name="stop" scoped="" ref="0x40ab20a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40ab6c10" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40ab6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ab6de8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ab6ec8"/>
        <function-ref name="request" scoped="" ref="0x40ab5010"/>
        <function-ref name="granted" scoped="" ref="0x40ab50f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ab51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40ab61f0" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40ab61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ab63c8"/>
        <function-ref name="isInput" scoped="" ref="0x40ab64a8"/>
        <function-ref name="toggle" scoped="" ref="0x40ab6588"/>
        <function-ref name="isOutput" scoped="" ref="0x40ab6668"/>
        <function-ref name="get" scoped="" ref="0x40ab6748"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ab6828"/>
        <function-ref name="set" scoped="" ref="0x40ab6908"/>
        <function-ref name="clr" scoped="" ref="0x40ab69e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40ab4e88" loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40ab4e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40ab3070"/>
        <function-ref name="disable" scoped="" ref="0x40ab3150"/>
        <function-ref name="captured" scoped="" ref="0x40ab3230"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ab3310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ab5380" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ab5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ab5558"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ab5638"/>
        <function-ref name="splitRead" scoped="" ref="0x40ab5718"/>
        <function-ref name="write" scoped="" ref="0x40ab57f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40ad51e0" loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40ad51e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ad5828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40acbae0" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40acbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40acbcb8"/>
        <function-ref name="isInput" scoped="" ref="0x40acbd98"/>
        <function-ref name="toggle" scoped="" ref="0x40acbe78"/>
        <function-ref name="isOutput" scoped="" ref="0x40aca010"/>
        <function-ref name="get" scoped="" ref="0x40aca0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aca1d0"/>
        <function-ref name="set" scoped="" ref="0x40aca2b0"/>
        <function-ref name="clr" scoped="" ref="0x40aca390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40accd40" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40accd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40acb7d0"/>
        <function-ref name="test" scoped="" ref="0x40acb2e0"/>
        <function-ref name="get" scoped="" ref="0x40ad13a0"/>
        <function-ref name="captured" scoped="" ref="0x40ad18b8"/>
        <function-ref name="reset" scoped="" ref="0x40ad1b58"/>
        <function-ref name="isOn" scoped="" ref="0x40acb558"/>
        <function-ref name="set" scoped="" ref="0x40ad1618"/>
        <function-ref name="start" scoped="" ref="0x40ad1dd0"/>
        <function-ref name="stop" scoped="" ref="0x40acb068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40aca598" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40aca598"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aca770"/>
        <function-ref name="isInput" scoped="" ref="0x40aca850"/>
        <function-ref name="toggle" scoped="" ref="0x40aca930"/>
        <function-ref name="isOutput" scoped="" ref="0x40acaa10"/>
        <function-ref name="get" scoped="" ref="0x40acaaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40acabd0"/>
        <function-ref name="set" scoped="" ref="0x40acacb0"/>
        <function-ref name="clr" scoped="" ref="0x40acad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40ad2698" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40ad2698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ad2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40ad2010" loc="39:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40ad2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40ad21e8"/>
        <function-ref name="disable" scoped="" ref="0x40ad22c8"/>
        <function-ref name="captured" scoped="" ref="0x40ad23a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ad2488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40ae0dc8" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40ae0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ae5010"/>
        <function-ref name="sendDone" scoped="" ref="0x40ae50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40ae2248" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40ae2248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40ae2420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ad3578" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ad3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ad3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ae25f0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ae25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ae27c8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ae28a8"/>
        <function-ref name="splitRead" scoped="" ref="0x40ae2988"/>
        <function-ref name="write" scoped="" ref="0x40ae2a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ae5588" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ae5588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ae5760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ae5840"/>
        <function-ref name="request" scoped="" ref="0x40ae5920"/>
        <function-ref name="granted" scoped="" ref="0x40ae5a00"/>
        <function-ref name="isOwner" scoped="" ref="0x40ae5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40affbe0" loc="296:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40affbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40affdb8"/>
        <function-ref name="runTask" scoped="" ref="0x40affe98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40adb450" loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40adb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40adb628"/>
        <function-ref name="sendDone" scoped="" ref="0x40adb708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40ad88c0" loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40ad88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad8a98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad8b78"/>
        <function-ref name="request" scoped="" ref="0x40ad8c58"/>
        <function-ref name="granted" scoped="" ref="0x40ad8d38"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad8e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40adea30" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40adea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40adec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ade6d0" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ade6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ade8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40aeebc8" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40aeebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40aeeda0"/>
        <function-ref name="sleep" scoped="" ref="0x40ad82b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40ad9010"/>
        <function-ref name="dataReady" scoped="" ref="0x40ad8390"/>
        <function-ref name="initMaster" scoped="" ref="0x40ad91d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40ad92b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40ad9390"/>
        <function-ref name="read" scoped="" ref="0x40ad9470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40ad9550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40ad9630"/>
        <function-ref name="setClock" scoped="" ref="0x40ad9710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40ad97f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40ad98d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40ad9a30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40ad9b10"/>
        <function-ref name="write" scoped="" ref="0x40ad9bf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40ad9cd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40ad9db0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40ad9e90"/>
        <function-ref name="getClock" scoped="" ref="0x40ad8010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40ad80f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40aeee80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40ad90f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40ad81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40adedb8" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40adedb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40adb010"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40adb0f0"/>
        <function-ref name="splitRead" scoped="" ref="0x40adb1d0"/>
        <function-ref name="write" scoped="" ref="0x40adb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40adbb80" loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40adbb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40adbd58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40adbe38"/>
        <function-ref name="request" scoped="" ref="0x40adbf18"/>
        <function-ref name="granted" scoped="" ref="0x40ada010"/>
        <function-ref name="isOwner" scoped="" ref="0x40ada0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40aed010" loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40aed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40aed1e8"/>
        <function-ref name="userId" scoped="" ref="0x40aed2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40aed490" loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40aed490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40aed668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40adc9c0" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40adc9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40adcb98"/>
        <function-ref name="sleep" scoped="" ref="0x40b2f010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40adcd58"/>
        <function-ref name="dataReady" scoped="" ref="0x40b2f0f0"/>
        <function-ref name="initMaster" scoped="" ref="0x40adcf18"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b30010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b300f0"/>
        <function-ref name="read" scoped="" ref="0x40b301d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b302b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b30390"/>
        <function-ref name="setClock" scoped="" ref="0x40b30470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b30550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b30630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b30790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b30870"/>
        <function-ref name="write" scoped="" ref="0x40b30950"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b30a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b30b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b30bf0"/>
        <function-ref name="getClock" scoped="" ref="0x40b30cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b30db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40adcc78"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40adce38"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b30e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40b28b10" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40b28b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b28ce8"/>
        <function-ref name="isInput" scoped="" ref="0x40b28dc8"/>
        <function-ref name="toggle" scoped="" ref="0x40b28ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b26010"/>
        <function-ref name="get" scoped="" ref="0x40b260f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b261d0"/>
        <function-ref name="set" scoped="" ref="0x40b262b0"/>
        <function-ref name="clr" scoped="" ref="0x40b26390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40b29730" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40b29730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b29908"/>
        <function-ref name="isInput" scoped="" ref="0x40b299e8"/>
        <function-ref name="toggle" scoped="" ref="0x40b29ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b29ba8"/>
        <function-ref name="get" scoped="" ref="0x40b29c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b29d68"/>
        <function-ref name="set" scoped="" ref="0x40b29e48"/>
        <function-ref name="clr" scoped="" ref="0x40b29f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40b27ca0" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40b27ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b27e78"/>
        <function-ref name="isInput" scoped="" ref="0x40b29010"/>
        <function-ref name="toggle" scoped="" ref="0x40b290f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b291d0"/>
        <function-ref name="get" scoped="" ref="0x40b292b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b29390"/>
        <function-ref name="set" scoped="" ref="0x40b29470"/>
        <function-ref name="clr" scoped="" ref="0x40b29550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40b277e0" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b277e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b279b8"/>
        <function-ref name="stop" scoped="" ref="0x40b27a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40b26598" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40b26598"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b26770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40b2fd58" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40b2fd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b2b010"/>
        <function-ref name="sleep" scoped="" ref="0x40b2a470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b2b1d0"/>
        <function-ref name="dataReady" scoped="" ref="0x40b2a550"/>
        <function-ref name="initMaster" scoped="" ref="0x40b2b390"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b2b470"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b2b550"/>
        <function-ref name="read" scoped="" ref="0x40b2b630"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b2b710"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b2b7f0"/>
        <function-ref name="setClock" scoped="" ref="0x40b2b8d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b2b9b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b2ba90"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b2bbf0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b2bcd0"/>
        <function-ref name="write" scoped="" ref="0x40b2bdb0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b2be90"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b2a010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b2a0f0"/>
        <function-ref name="getClock" scoped="" ref="0x40b2a1d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b2a2b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b2b0f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b2b2b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b2a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40b28128" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40b28128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b28300"/>
        <function-ref name="isInput" scoped="" ref="0x40b283e0"/>
        <function-ref name="toggle" scoped="" ref="0x40b284c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b285a0"/>
        <function-ref name="get" scoped="" ref="0x40b28680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b28760"/>
        <function-ref name="set" scoped="" ref="0x40b28840"/>
        <function-ref name="clr" scoped="" ref="0x40b28920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b4b488" loc="86:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b4b488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b4b670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b4b750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b4bd40" loc="89:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b4bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b4bf28"/>
        <function-ref name="configure" scoped="" ref="0x40b4a018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b4cca0" loc="85:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b4cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b4ce88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b4b010"/>
        <function-ref name="request" scoped="" ref="0x40b4b0f0"/>
        <function-ref name="granted" scoped="" ref="0x40b4b1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b4b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b4b890" loc="87:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b4b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b4ba68"/>
        <function-ref name="userId" scoped="" ref="0x40b4bb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41000ae8" loc="44:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41000ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41000cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41000e20" loc="45:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41000e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ffd010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ffd0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40ffd1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40ffd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ffc5a8" loc="52:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ffc5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ffc790"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ffc870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ffce70" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ffce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ffb070"/>
        <function-ref name="configure" scoped="" ref="0x40ffb150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40ffb2b0" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40ffb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ffb488"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ffb568"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40ffb648"/>
        <function-ref name="dequeue" scoped="" ref="0x40ffb728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ffde18" loc="51:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ffde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ffc050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ffc130"/>
        <function-ref name="request" scoped="" ref="0x40ffc210"/>
        <function-ref name="granted" scoped="" ref="0x40ffc2f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ffc3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ffc9b0" loc="53:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ffc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ffcb88"/>
        <function-ref name="userId" scoped="" ref="0x40ffcc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40ffb8a8" loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40ffb8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ffba80"/>
        <function-ref name="runTask" scoped="" ref="0x40ffbb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b62e10" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b62e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b67010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b670f0"/>
        <function-ref name="getControlA" scoped="" ref="0x40b671d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b672b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b67390"/>
        <function-ref name="setControlB" scoped="" ref="0x40b67470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b67550"/>
        <function-ref name="getControlB" scoped="" ref="0x40b67630"/>
        <function-ref name="setControlC" scoped="" ref="0x40b67710"/>
        <function-ref name="setControlA" scoped="" ref="0x40b677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b67b28" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b67b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b60640"/>
        <function-ref name="test" scoped="" ref="0x40b60150"/>
        <function-ref name="get" scoped="" ref="0x40b66200"/>
        <function-ref name="captured" scoped="" ref="0x40b66718"/>
        <function-ref name="reset" scoped="" ref="0x40b669b8"/>
        <function-ref name="isOn" scoped="" ref="0x40b603c8"/>
        <function-ref name="set" scoped="" ref="0x40b66478"/>
        <function-ref name="start" scoped="" ref="0x40b66c30"/>
        <function-ref name="stop" scoped="" ref="0x40b66ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b60d50" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b60d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b5e300"/>
        <function-ref name="fired" scoped="" ref="0x40b5f8f8"/>
        <function-ref name="get" scoped="" ref="0x40b5f3e0"/>
        <function-ref name="reset" scoped="" ref="0x40b5fb70"/>
        <function-ref name="isOn" scoped="" ref="0x40b5e578"/>
        <function-ref name="set" scoped="" ref="0x40b5f658"/>
        <function-ref name="start" scoped="" ref="0x40b5fde8"/>
        <function-ref name="stop" scoped="" ref="0x40b5e088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b464b0" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b464b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b69f18"/>
        <function-ref name="test" scoped="" ref="0x40b69a28"/>
        <function-ref name="get" scoped="" ref="0x40b46af8"/>
        <function-ref name="setScale" scoped="" ref="0x40b681a8"/>
        <function-ref name="getScale" scoped="" ref="0x40b68448"/>
        <function-ref name="reset" scoped="" ref="0x40b692c0"/>
        <function-ref name="overflow" scoped="" ref="0x40b69048"/>
        <function-ref name="isOn" scoped="" ref="0x40b69ca0"/>
        <function-ref name="set" scoped="" ref="0x40b46d70"/>
        <function-ref name="start" scoped="" ref="0x40b69538"/>
        <function-ref name="stop" scoped="" ref="0x40b697b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b58530" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b58530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b58708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b587e8"/>
        <function-ref name="getControlA" scoped="" ref="0x40b588c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b589a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b58a88"/>
        <function-ref name="setControlB" scoped="" ref="0x40b58b68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b58c48"/>
        <function-ref name="getControlB" scoped="" ref="0x40b58d28"/>
        <function-ref name="setControlC" scoped="" ref="0x40b58e08"/>
        <function-ref name="setControlA" scoped="" ref="0x40b58ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b7a128" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b7a128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b79690"/>
        <function-ref name="fired" scoped="" ref="0x40b7ac88"/>
        <function-ref name="get" scoped="" ref="0x40b7a770"/>
        <function-ref name="reset" scoped="" ref="0x40b7af00"/>
        <function-ref name="isOn" scoped="" ref="0x40b79908"/>
        <function-ref name="set" scoped="" ref="0x40b7a9e8"/>
        <function-ref name="start" scoped="" ref="0x40b791a0"/>
        <function-ref name="stop" scoped="" ref="0x40b79418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b7c258" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b7c258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b7bcc0"/>
        <function-ref name="test" scoped="" ref="0x40b7b7d0"/>
        <function-ref name="get" scoped="" ref="0x40b7c8a0"/>
        <function-ref name="captured" scoped="" ref="0x40b7cdb8"/>
        <function-ref name="reset" scoped="" ref="0x40b7b068"/>
        <function-ref name="isOn" scoped="" ref="0x40b7ba48"/>
        <function-ref name="set" scoped="" ref="0x40b7cb18"/>
        <function-ref name="start" scoped="" ref="0x40b7b2e0"/>
        <function-ref name="stop" scoped="" ref="0x40b7b558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b79d20" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b79d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b762c0"/>
        <function-ref name="fired" scoped="" ref="0x40b778a8"/>
        <function-ref name="get" scoped="" ref="0x40b77390"/>
        <function-ref name="reset" scoped="" ref="0x40b77b20"/>
        <function-ref name="isOn" scoped="" ref="0x40b76538"/>
        <function-ref name="set" scoped="" ref="0x40b77608"/>
        <function-ref name="start" scoped="" ref="0x40b77d98"/>
        <function-ref name="stop" scoped="" ref="0x40b76048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b76950" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b76950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b75f08"/>
        <function-ref name="fired" scoped="" ref="0x40b75528"/>
        <function-ref name="get" scoped="" ref="0x40b75010"/>
        <function-ref name="reset" scoped="" ref="0x40b757a0"/>
        <function-ref name="isOn" scoped="" ref="0x40b731a0"/>
        <function-ref name="set" scoped="" ref="0x40b75288"/>
        <function-ref name="start" scoped="" ref="0x40b75a18"/>
        <function-ref name="stop" scoped="" ref="0x40b75c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b5a230" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b5a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b59ca0"/>
        <function-ref name="test" scoped="" ref="0x40b597b0"/>
        <function-ref name="get" scoped="" ref="0x40b5a878"/>
        <function-ref name="setScale" scoped="" ref="0x40b59f18"/>
        <function-ref name="getScale" scoped="" ref="0x40b581d0"/>
        <function-ref name="reset" scoped="" ref="0x40b59048"/>
        <function-ref name="overflow" scoped="" ref="0x40b5ad90"/>
        <function-ref name="isOn" scoped="" ref="0x40b59a28"/>
        <function-ref name="set" scoped="" ref="0x40b5aaf0"/>
        <function-ref name="start" scoped="" ref="0x40b592c0"/>
        <function-ref name="stop" scoped="" ref="0x40b59538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ba9c88" loc="30:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ba9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bf2150"/>
        <function-ref name="fired" scoped="" ref="0x40bf4908"/>
        <function-ref name="startAt" scoped="" ref="0x40bf4df8"/>
        <function-ref name="isRunning" scoped="" ref="0x40bf4b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bf23c8"/>
        <function-ref name="start" scoped="" ref="0x40bf43f0"/>
        <function-ref name="stop" scoped="" ref="0x40bf4690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bca480" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bca480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034f5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034f5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bca658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40bca868" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bca868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bc12e0"/>
        <function-ref name="test" scoped="" ref="0x40bc9dd0"/>
        <function-ref name="get" scoped="" ref="0x40bcaeb0"/>
        <function-ref name="setScale" scoped="" ref="0x40bc1558"/>
        <function-ref name="getScale" scoped="" ref="0x40bc17f8"/>
        <function-ref name="reset" scoped="" ref="0x40bc9668"/>
        <function-ref name="overflow" scoped="" ref="0x40bc93f0"/>
        <function-ref name="isOn" scoped="" ref="0x40bc1068"/>
        <function-ref name="set" scoped="" ref="0x40bc9150"/>
        <function-ref name="start" scoped="" ref="0x40bc98e0"/>
        <function-ref name="stop" scoped="" ref="0x40bc9b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4101d138" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4101d138"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4034f3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4034f3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4101c600"/>
        <function-ref name="fired" scoped="" ref="0x4101dda0"/>
        <function-ref name="startAt" scoped="" ref="0x4101c2c0"/>
        <function-ref name="isRunning" scoped="" ref="0x4101c048"/>
        <function-ref name="getAlarm" scoped="" ref="0x4101c878"/>
        <function-ref name="start" scoped="" ref="0x4101d888"/>
        <function-ref name="stop" scoped="" ref="0x4101db28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x41019dd8" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x41019dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41017388"/>
        <function-ref name="fired" scoped="" ref="0x41018980"/>
        <function-ref name="get" scoped="" ref="0x41018468"/>
        <function-ref name="reset" scoped="" ref="0x41018bf8"/>
        <function-ref name="isOn" scoped="" ref="0x41017600"/>
        <function-ref name="set" scoped="" ref="0x410186e0"/>
        <function-ref name="start" scoped="" ref="0x41018e70"/>
        <function-ref name="stop" scoped="" ref="0x41017110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x4101cb38" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x4101cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41019600"/>
        <function-ref name="test" scoped="" ref="0x41019110"/>
        <function-ref name="get" scoped="" ref="0x4101b200"/>
        <function-ref name="setScale" scoped="" ref="0x41019878"/>
        <function-ref name="getScale" scoped="" ref="0x41019b18"/>
        <function-ref name="reset" scoped="" ref="0x4101b990"/>
        <function-ref name="overflow" scoped="" ref="0x4101b718"/>
        <function-ref name="isOn" scoped="" ref="0x41019388"/>
        <function-ref name="set" scoped="" ref="0x4101b478"/>
        <function-ref name="start" scoped="" ref="0x4101bc08"/>
        <function-ref name="stop" scoped="" ref="0x4101be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bf1578" loc="39:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bf1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bf1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bed690" loc="24:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bed690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bedde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bea2e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bea068"/>
        <function-ref name="overflow" scoped="" ref="0x40bea558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40be8e90" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40be8e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c06600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c06af0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c06878"/>
        <function-ref name="overflow" scoped="" ref="0x40c06d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c05078" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c05078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40c04ab8"/>
        <function-ref name="test" scoped="" ref="0x40c045c8"/>
        <function-ref name="get" scoped="" ref="0x40c056c0"/>
        <function-ref name="setScale" scoped="" ref="0x40c04d30"/>
        <function-ref name="getScale" scoped="" ref="0x40c02010"/>
        <function-ref name="reset" scoped="" ref="0x40c05e50"/>
        <function-ref name="overflow" scoped="" ref="0x40c05bd8"/>
        <function-ref name="isOn" scoped="" ref="0x40c04840"/>
        <function-ref name="set" scoped="" ref="0x40c05938"/>
        <function-ref name="start" scoped="" ref="0x40c040d8"/>
        <function-ref name="stop" scoped="" ref="0x40c04350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40c1a0e0" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40c1a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c1a830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c1ad20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c1aaa8"/>
        <function-ref name="overflow" scoped="" ref="0x40c18010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bebe60" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bebe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c015e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c01ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c01858"/>
        <function-ref name="overflow" scoped="" ref="0x40c01d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c18f18" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c18f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c17578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40c178c8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c178c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c16048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c16538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c162c0"/>
        <function-ref name="overflow" scoped="" ref="0x40c167b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40c12010" loc="36:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40c12010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40c12760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c3d938" loc="49:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="RSSILocAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c3d938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c3db10"/>
        <function-ref name="getPayload" scoped="" ref="0x40c3dbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c3dcd0"/>
        <function-ref name="cancel" scoped="" ref="0x40c3ddb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c3de90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c95010" loc="50:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="RSSILocAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c951e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c952c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c953a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c95488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c95568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c956a8" loc="51:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="RSSILocAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c956a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c95880"/>
        <function-ref name="source" scoped="" ref="0x40c95960"/>
        <function-ref name="address" scoped="" ref="0x40c95a40"/>
        <function-ref name="destination" scoped="" ref="0x40c95b20"/>
        <function-ref name="setSource" scoped="" ref="0x40c95c00"/>
        <function-ref name="setDestination" scoped="" ref="0x40c95ce0"/>
        <function-ref name="type" scoped="" ref="0x40c95dc0"/>
        <function-ref name="setType" scoped="" ref="0x40c95ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x40c94010"/>
        <function-ref name="setGroup" scoped="" ref="0x40c940f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40c941d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40c94330" loc="52:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="RSSILocAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40c94330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c94508"/>
        <function-ref name="noAck" scoped="" ref="0x40c945e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c946c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41037238" loc="49:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RSSILocAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41037238"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41037410"/>
        <function-ref name="getPayload" scoped="" ref="0x410374f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410375d0"/>
        <function-ref name="cancel" scoped="" ref="0x410376b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41037790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410378d0" loc="50:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RSSILocAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410378d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41037aa8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41037b88"/>
        <function-ref name="getPayload" scoped="" ref="0x41037c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41037d48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41037e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41036010" loc="51:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RSSILocAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41036010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410361e8"/>
        <function-ref name="source" scoped="" ref="0x410362c8"/>
        <function-ref name="address" scoped="" ref="0x410363a8"/>
        <function-ref name="destination" scoped="" ref="0x41036488"/>
        <function-ref name="setSource" scoped="" ref="0x41036568"/>
        <function-ref name="setDestination" scoped="" ref="0x41036648"/>
        <function-ref name="type" scoped="" ref="0x41036728"/>
        <function-ref name="setType" scoped="" ref="0x41036808"/>
        <function-ref name="isForMe" scoped="" ref="0x410368e8"/>
        <function-ref name="setGroup" scoped="" ref="0x410369c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41036aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41036c08" loc="52:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RSSILocAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41036c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41036de0"/>
        <function-ref name="noAck" scoped="" ref="0x41036ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41035010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41033998" loc="44:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RSSILocAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41033998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41033b70"/>
        <function-ref name="getPayload" scoped="" ref="0x41033c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41033d30"/>
        <function-ref name="cancel" scoped="" ref="0x41033e10"/>
        <function-ref name="sendDone" scoped="" ref="0x41033ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41030080" loc="46:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RSSILocAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41030080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41030258"/>
        <function-ref name="getPayload" scoped="" ref="0x41030338"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41030418"/>
        <function-ref name="cancel" scoped="" ref="0x410304f8"/>
        <function-ref name="sendDone" scoped="" ref="0x410305d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41030718" loc="47:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RSSILocAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41030718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410308f0"/>
        <function-ref name="source" scoped="" ref="0x410309d0"/>
        <function-ref name="address" scoped="" ref="0x41030ab0"/>
        <function-ref name="destination" scoped="" ref="0x41030b90"/>
        <function-ref name="setSource" scoped="" ref="0x41030c70"/>
        <function-ref name="setDestination" scoped="" ref="0x41030d50"/>
        <function-ref name="type" scoped="" ref="0x41030e30"/>
        <function-ref name="setType" scoped="" ref="0x41030f10"/>
        <function-ref name="isForMe" scoped="" ref="0x4102f010"/>
        <function-ref name="setGroup" scoped="" ref="0x4102f0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4102f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c4c9f8" loc="43:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c4c9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c4cbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c4ccb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c4cd90"/>
        <function-ref name="cancel" scoped="" ref="0x40c4ce70"/>
        <function-ref name="sendDone" scoped="" ref="0x40c73010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40c9e0a8" loc="48:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c9e0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c9e290"/>
        <function-ref name="getPayload" scoped="" ref="0x40c9e370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c9e450"/>
        <function-ref name="cancel" scoped="" ref="0x40c9e530"/>
        <function-ref name="sendDone" scoped="" ref="0x40c9e610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c9f908" loc="46:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c9f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c9faf0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c9fbd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c9fcb0"/>
        <function-ref name="cancel" scoped="" ref="0x40c9fd90"/>
        <function-ref name="sendDone" scoped="" ref="0x40c9fe70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40c9d3f0" loc="50:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c9d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c9d5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c9d6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c9d788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c9d868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c9d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40c9dac8" loc="169:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40c9dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c9dca0"/>
        <function-ref name="runTask" scoped="" ref="0x40c9dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40c9df00" loc="126:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40c9df00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c9c0f0"/>
        <function-ref name="runTask" scoped="" ref="0x40c9c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40c9e750" loc="49:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c9e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c9e928"/>
        <function-ref name="source" scoped="" ref="0x40c9ea08"/>
        <function-ref name="address" scoped="" ref="0x40c9eae8"/>
        <function-ref name="destination" scoped="" ref="0x40c9ebc8"/>
        <function-ref name="setSource" scoped="" ref="0x40c9eca8"/>
        <function-ref name="setDestination" scoped="" ref="0x40c9ed88"/>
        <function-ref name="type" scoped="" ref="0x40c9ee68"/>
        <function-ref name="setType" scoped="" ref="0x40c9d010"/>
        <function-ref name="isForMe" scoped="" ref="0x40c9d0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40c9d1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40c9d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c91070" loc="46:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="RSSILocAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c91070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c91248"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c91328"/>
        <function-ref name="getPayload" scoped="" ref="0x40c91408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c914e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c915c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c92d30" loc="45:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="RSSILocAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c92d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c92f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c91708" loc="47:/home/u3f/tinyos-2_1_2/tos/system/AMReceiverC.nc">
      <component-ref qname="RSSILocAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c91708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c918e0"/>
        <function-ref name="source" scoped="" ref="0x40c919c0"/>
        <function-ref name="address" scoped="" ref="0x40c91aa0"/>
        <function-ref name="destination" scoped="" ref="0x40c91b80"/>
        <function-ref name="setSource" scoped="" ref="0x40c91c60"/>
        <function-ref name="setDestination" scoped="" ref="0x40c91d40"/>
        <function-ref name="type" scoped="" ref="0x40c91e20"/>
        <function-ref name="setType" scoped="" ref="0x40c91f00"/>
        <function-ref name="isForMe" scoped="" ref="0x40c8e010"/>
        <function-ref name="setGroup" scoped="" ref="0x40c8e0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40c8e1d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4041fb80" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4041f010" loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40422710" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404225b8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4041dcf8" loc="31:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40424348" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404241f0" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40424a10" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404248b8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40422010" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40436b50" loc="44:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40435010" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404363c0" loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404357e0" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40436780" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404353e8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40430c48" loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x40436010" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x400329d0" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403673b0" loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40032e10" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x403682d0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x403687e8" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d5b90" loc="76:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403eae90" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4038f010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403ea1a8" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x405281a8" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x405285f0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40528a70" loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405262f8" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40525010" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405254b8" loc="117:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40528e98" loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40525bf8" loc="134:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40525aa0" loc="134:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4051bd48" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40526778" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40526ba0" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40540010" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40540010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4054a790" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4053f5b8" loc="83:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4054b720" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4054b3d8" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4054b5c0" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4053ff08" loc="98:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40549138" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4054abd8" loc="144:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4053fa48" loc="92:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40540668" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40540510" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4054a170" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4054bdc0" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4054a010" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40540d00" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40540ba8" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4053f1f0" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x40576660" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40576660"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40587930" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405877d8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40587310" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40576660"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405871b8" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40576cd8" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40576b80" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40585170" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40576660"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40587d60" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40585010" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40576660"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4056dc50" loc="177:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4056daf8" loc="177:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40571360" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40571208" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40566278" loc="68:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40566910" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405667b8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40570cf8" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40570990" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40570b98" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40570010" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40571be0" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40571de8" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4057a5f0" loc="147:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057a498" loc="147:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4056d170" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057adf8" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4056d010" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4055d538"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4056fa90" loc="136:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4056f938" loc="136:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x405778e8" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40577588" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40577788" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x405781a8" loc="195:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x4056bd98" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056bc40" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40568778" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40568620" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40567828" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405674c8" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405676a8" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40569da0" loc="106:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40569408" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405690c8" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405692a8" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4057fd58" loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4057fc00" loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4057cae0" loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4057c988" loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4057f518" loc="104:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4057c2a8" loc="130:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40589010" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
              <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40546a70" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40546c50" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40546e30" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40547bf8" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40547698" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405478b0" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40547a90" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40574a88" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40574728" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40574908" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405741c8" loc="123:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40575b80" loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40575a28" loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40581898" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40581540" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40581738" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4059aa90" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4059aa90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405a6010" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405ac3c8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405ac3c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405ac530" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405aca18" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x405aa510" loc="76:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x405aa010" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405aa910" loc="82:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405a23b8" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405a23b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405a2520" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a2520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405af810" loc="109:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a2520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405b14d0" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405af1c8" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a2520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a2520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405b1e48" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a2520"/></type-var>
          </variable>
          <variable name="dt" ref="0x405af068" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a2520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405b1940" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405afca0" loc="116:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a2520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405a2b50" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a2520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405a29f8" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a2520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405b1070" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x405d0a40" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405d0010" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x405c4ba8" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x405d05d0" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405d0478" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x405d1b00" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405d19a8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x405ce020" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405d0eb0" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x405d1010" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x405d1588" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405d1430" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x405d69d0" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x405d7648" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x405d7a70" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x405d6010" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405d6e90" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x405d64f0" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x405caae0" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9618"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b9840"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x405d7168" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b9840"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x405d7010" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b9840"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405cd010" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405cd010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x405ccf20" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405cded0" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405cd508" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405cd010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405cc2f8" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405cb398" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405cda90" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405cd010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405cd938" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405cd010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405cc700" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405ccaf8" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x405bcc70" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405bcc70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x405c64f0" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405c7c38" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405c91a8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405bcc70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x405c6a80" loc="104:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x405c6928" loc="104:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x405c6f10" loc="110:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405c7010" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405c9b50" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405c60c8" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405c9720" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405bcc70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405c95c8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405bcc70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405c7418" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405c7810" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40696698" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40696320" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40696538" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x406a2880" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a24e8" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x406a2720" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x406a1350" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a11f8" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x406a2010" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x406948f8" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x406947a0" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40697f28" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40697dd0" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x406a6a30" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a68d8" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x406a54e0" loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a5388" loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x406b1380" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b1228" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x406a0780" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a03e8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x406a0620" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x4069fa20" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069f8c8" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x4069f3a8" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069f010" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x4069f248" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x406b1ca0" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b1b48" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x406b04f0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x406b0010" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406afe58" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406b09f0" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x406a74d8" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406a74d8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406a7640" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a7640"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x406aca78" loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a7640"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ac920" loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x406aa528" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406aa3d0" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x406a7cc8" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a7b70" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406ab010" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a7640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406aac78" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x406aae88" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a7640"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x406be350" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406be1f8" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406d2210" loc="120:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x406d38c0" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x406d32c0" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406d3d70" loc="102:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406d2908" loc="128:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x406e3870" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e3718" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406d4c48" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406e32a0" loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e3148" loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406e2800" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e2460" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406e26a0" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406e2060" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e3ca0" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406e3ee0" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x406e1350" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40545ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e11f8" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x406e1ac0" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40545ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e1730" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406e1960" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40545ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x406e2d70" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e2c18" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x406e1f00" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40545ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x406d83f0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406c7e60" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x406d80a8" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406d8288" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x406d57f0" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d5490" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406d5670" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x406d6ee0" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406d8d80" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d8c28" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406d68e8" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d6590" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x406d6788" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40707010" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x406ee988" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ee830" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x40709168" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40709010" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x40709ec8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40709d70" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4070a380" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070a228" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4070c5d8" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070c480" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4070ab18" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070a7b0" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4070a9b8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4070cda0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070ca38" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4070cc40" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x407098f0" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40709590" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40709790" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x406fe920" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x406fef28" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x406f84b0" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f8358" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x406f95e8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f9490" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x406f9ce0" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f9b88" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40721a88" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40721228" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x407210d0" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40721670" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40706b68" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40721f00" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x4071c188" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071c030" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4071f708" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071f5b0" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4071d4d0" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4071d010" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071fc00" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4071fe00" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4071f010" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40720de0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x4071db50" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071d9f8" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x406e5cb8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x406e57b8" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e5660" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x406f63b8" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f6260" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x406f6900" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x406f5058" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f6ed8" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x406f7b90" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f7a38" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x406f04c8" loc="86:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x406f0010" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406f1c08" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x406f1e20" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x406f3ed8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f3d80" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x406f25f8" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f24a0" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x406f1010" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406f2bb8" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x406f2dd0" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x406f3010" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x406f3880" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f3558" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x406f3720" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x406f1728" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f15d0" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40714670" loc="131:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40714518" loc="131:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40715840" loc="120:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407156e8" loc="120:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x40705740" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407053f0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x407055e0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x40704b08" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407049b0" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40711ab8" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40711758" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40711958" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x40704470" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40704318" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40714060" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40715cf8" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40715ed8" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x40703a98" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40703720" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40703938" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x407112e0" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40711188" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x40705da8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40705c50" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x40702a90" loc="99:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40702938" loc="99:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x407023e0" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40702068" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40702280" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x4070e210" loc="178:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40557010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40710168" loc="162:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40710010" loc="162:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40710d60" loc="173:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40545ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40712c80" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40712920" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40712b20" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x407031e0" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40703088" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40715230" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40716ed0" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x407150d0" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40714e58" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40714b08" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40714cf8" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4070e7e8" loc="185:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070e690" loc="185:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40716338" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40716010" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x407161d8" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x40707f20" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40707dc8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40710878" loc="168:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40710720" loc="168:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x407124a0" loc="141:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40712348" loc="141:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x407169e8" loc="110:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40716890" loc="110:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40700670" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40700310" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40700510" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40700b08" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x406e47c8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e4670" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x406e4e10" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e4cb8" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x406ffdf8" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ffca0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x406ff718" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ff5c0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x406fb338" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x406fb9f0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406fb898" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40762cc0" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x4075f2a8" loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x4075f8e8" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x407628c0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40785830" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407856d8" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407828b8" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40782760" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407821c8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40785e48" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40782068" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x407848b8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
              <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40784740" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x4078b270" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x4078bae0" loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x4078b6e0" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4078ed40" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4078e9d8" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4055d790"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4078ebe0" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x407ebd30" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x407e8328" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x407eaf28" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x407eaa68" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x407e75a8" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x407e7aa8" loc="98:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x407f7e00" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407fb200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407f7ca8" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407fb200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x407fa9c8" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x407f7168" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407fb200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407f7010" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407fb200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x407f7718" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x407fb200"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x408bb2c0" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
              <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bb148" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x408bea70" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408be918" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x408ca168" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408ca010" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x408ca5e8" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408cc638" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408cc4e0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408ccb80" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408cca28" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x408ce010" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408d2e00" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x408cecf8" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408ceba0" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x408ce6e0" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408ce588" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x408cd3c8" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408cd270" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x408d28d8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408d2780" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4055d9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x4092ab10" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40927568" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40927bb0" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40927a58" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40926038" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40927070" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40926578" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x409295f8" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409294a0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x409232a8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40929d70" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40929c18" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x409591c8" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4095ccf8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4097e580" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097e580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4097ebd0" loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097e580"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4097ea78" loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097e580"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x409a48e0" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409a4788" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40988580" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40988428" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40988d50" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40988a10" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40988bf0" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409a4350" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409a41f8" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x409a8538" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x409a83e0" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x409abee0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a44bd0" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a44bd0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a44d38" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a44d38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40a3f370" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a44d38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a3f218" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a44d38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40a42370" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40a42d20" loc="66:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a428d8" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a42780" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40a48e40" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40a477a0" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a47648" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40a45420" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a452c8" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40a47cb0" loc="68:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a45a68" loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a45910" loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40ad2e70" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad2e70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40acc9f8" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40acc8a0" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40acc010" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40acf390" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad2e70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40acfee0" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad2e70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40acfd88" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad2e70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40acd348" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40acc470" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40acf908" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad2e70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40acf7b0" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad2e70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40acd750" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40acdb48" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ae1ba8" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40ae1638" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ae1850" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ae1a40" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ae0298" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40adfac0" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40adfcd8" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40adfec8" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ae0128" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40ae2010" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40ad3e58" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40af7c40" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40af1308" loc="126:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40af44b0" loc="117:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40af18f0" loc="128:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40af1798" loc="128:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40af77f0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40af2420" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40af22c8" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40af56d0" loc="113:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40af5578" loc="113:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40af64f8" loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40aeea10" loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40aee8b8" loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40af5b28" loc="114:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40af02c0" loc="131:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40af0168" loc="131:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40af0b48" loc="136:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40af2eb0" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40af2d58" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40aee480" loc="140:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40af4a40" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40af48e8" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40af6a90" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40af6938" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40af4090" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40af5f20" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40af28d0" loc="123:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40af1d18" loc="129:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40af06d0" loc="132:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40aee010" loc="138:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40af4e78" loc="120:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40af6090" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40af5088" loc="109:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40af6f00" loc="109:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40b27010" loc="95:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b274f8" loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40b64710" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b63c10" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40b68e40" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b62650" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b621e0" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b62088" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40b63228" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b630d0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b62c18" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b62ac0" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40b642e8" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40b637a0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b63648" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40b64c88" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b64b30" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40c5ab98" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c5a858" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c5aa38" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40c56a18" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c566b8" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c56898" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40c56158" loc="112:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c57b38" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c579e0" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40c55820" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c554c8" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4056ca30"/>
                <typename><typedef-ref name="message_t" ref="0x4056b7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40c556c0" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
