<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:AnchorMoteAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40c62060"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f9888"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f9888"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f8a28"/></to>
    </wire>
    <wire loc="24:AnchorMoteAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40c624b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40521148"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40521148"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405740e0"/></to>
    </wire>
    <wire loc="25:AnchorMoteAppC.nc">
      <from><interface-ref name="MsgSend" scoped="" ref="0x40c62b38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c18938"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40c18938"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fe8c60"/></to>
    </wire>
    <wire loc="26:AnchorMoteAppC.nc">
      <from><interface-ref name="AnchorTimer" scoped="" ref="0x40c613e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c6c5a8"/></to>
    </wire>
    <wire loc="52:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c6c5a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408bed10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fa62e8"/></to>
    </wire>
    <wire loc="119:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x409e0118"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408c0b80"/></to>
    </wire>
    <wire loc="52:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4083d5f8"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40ee4410"/></to>
    </wire>
    <wire loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4079e578"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ecc230"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e69a88"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403f8dc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403675f0"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403675f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403d6820"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404f1400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a97300"/></to>
    </wire>
    <wire loc="122:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404f1400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x409e1aa0"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404f1400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40401de8"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40401de8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40403250"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404f1808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40406ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b822b0"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40406740"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404de010"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40403a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404e0bf8"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40403630"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4040ba48"/></to>
    </wire>
    <wire loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4040ba48"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4040a9c8"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4040be18"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40406ea0"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4040def8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40411210"/></to>
    </wire>
    <wire loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40411210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4045c330"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404078f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4040be18"/></to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404304b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404b00b0"/></to>
    </wire>
    <wire loc="165:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40422a28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40477090"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40477090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d29010"/></to>
    </wire>
    <wire loc="176:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404250a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40483d68"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40483d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d78228"/></to>
    </wire>
    <wire loc="185:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40433210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404867d0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404867d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d9fc08"/></to>
    </wire>
    <wire loc="196:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40437a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404c6880"/></to>
    </wire>
    <wire loc="143:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4041a670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404656b0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404656b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c93010"/></to>
    </wire>
    <wire loc="183:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x4042bce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404874f0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404874f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40da27f8"/></to>
    </wire>
    <wire loc="146:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40419a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046a5a0"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4046a5a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc0de8"/></to>
    </wire>
    <wire loc="157:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4041c210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4046b170"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4046b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d06d70"/></to>
    </wire>
    <wire loc="168:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404208e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40476d68"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40476d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d24010"/></to>
    </wire>
    <wire loc="179:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4042eea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40481ac8"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40481ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d720b0"/></to>
    </wire>
    <wire loc="138:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404132f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4045e6b0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4045e6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c9cc08"/></to>
    </wire>
    <wire loc="149:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404178e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40468250"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40468250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb8c08"/></to>
    </wire>
    <wire loc="160:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x404240a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40473e48"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40473e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d01c08"/></to>
    </wire>
    <wire loc="171:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40428750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4047eac8"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4047eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d4d010"/></to>
    </wire>
    <wire loc="188:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404310a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404904f0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404904f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d9aa88"/></to>
    </wire>
    <wire loc="194:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40438590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404c0880"/></to>
    </wire>
    <wire loc="174:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40427c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40484a80"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40484a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d7cde0"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4045c330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c97a88"/></to>
    </wire>
    <wire loc="152:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x4041f830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40467f28"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40467f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cdfa88"/></to>
    </wire>
    <wire loc="192:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4042f0c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404b9880"/></to>
    </wire>
    <wire loc="155:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4041ece8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046de78"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4046de78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d09938"/></to>
    </wire>
    <wire loc="166:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404214b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404779e8"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404779e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d289e8"/></to>
    </wire>
    <wire loc="177:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40425a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40482790"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40482790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d76c08"/></to>
    </wire>
    <wire loc="186:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40433c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40485170"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40485170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d9d6c0"/></to>
    </wire>
    <wire loc="144:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404190a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40464030"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40464030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c919e8"/></to>
    </wire>
    <wire loc="147:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404184b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4046aef8"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4046aef8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cbb7f8"/></to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4041cc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4046bac8"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4046bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d047f8"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404292f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40475790"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40475790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d239e8"/></to>
    </wire>
    <wire loc="180:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4042d8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404804f0"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404804f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d71a88"/></to>
    </wire>
    <wire loc="139:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40413ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4045d030"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4045d030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c9a6c0"/></to>
    </wire>
    <wire loc="150:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404162f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40468ba8"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40468ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb66c0"/></to>
    </wire>
    <wire loc="161:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x40424a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404727d0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404727d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cfe6c0"/></to>
    </wire>
    <wire loc="189:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40431a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40490e48"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40490e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d98538"/></to>
    </wire>
    <wire loc="164:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40423ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404786f8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404786f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d2b538"/></to>
    </wire>
    <wire loc="175:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x40426670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40483410"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40483410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d7a7f8"/></to>
    </wire>
    <wire loc="184:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x4042a750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40487e48"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40487e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40da0228"/></to>
    </wire>
    <wire loc="195:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40437010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404bc0b0"/></to>
    </wire>
    <wire loc="142:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40411c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4045cc88"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4045cc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c95538"/></to>
    </wire>
    <wire loc="153:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4041e2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40466890"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40466890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cdd538"/></to>
    </wire>
    <wire loc="182:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x4042b2f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40488b00"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40488b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40da7de8"/></to>
    </wire>
    <wire loc="156:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4041d750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4046c7f0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4046c7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d073b0"/></to>
    </wire>
    <wire loc="167:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40421ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40476410"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40476410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d26538"/></to>
    </wire>
    <wire loc="178:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4042e4b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40481170"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40481170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d746c0"/></to>
    </wire>
    <wire loc="187:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x40432670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40485ac8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40485ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d9b0b0"/></to>
    </wire>
    <wire loc="137:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404098b8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4045fcc8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4045fcc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c9d228"/></to>
    </wire>
    <wire loc="148:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40418ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40469860"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40469860"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb9228"/></to>
    </wire>
    <wire loc="159:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4041b670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404734f0"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404734f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d02228"/></to>
    </wire>
    <wire loc="170:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40429ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4047e170"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4047e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d4f538"/></to>
    </wire>
    <wire loc="193:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4042fab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404b60b0"/></to>
    </wire>
    <wire loc="173:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40427210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40484128"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40484128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d7d418"/></to>
    </wire>
    <wire loc="162:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404234b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40471170"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40471170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cfc0b0"/></to>
    </wire>
    <wire loc="140:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40412750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4045d988"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4045d988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c980b0"/></to>
    </wire>
    <wire loc="151:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40416d68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404675d0"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404675d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb40b0"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403d5100"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d5d68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40362728"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e9218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x409347b8"/></to>
    </wire>
    <wire loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405740e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4058bd78"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40549ea8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40571100"/></to>
    </wire>
    <wire loc="84:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40571100"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40587e10"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40552e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4057e260"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4057e260"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40595d28"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40541ac0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405749b8"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405749b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40588710"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4054d798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40573a30"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40573a30"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40587798"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40569b30"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4057dc18"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4057dc18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405993c0"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4054d100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40573398"/></to>
    </wire>
    <wire loc="82:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40573398"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40587100"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055eda0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d690"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d690"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059dd90"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405644d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4057c298"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4057c298"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x405999e0"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40555bf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057e950"/></to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4057e950"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40595010"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40563e98"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4057c9b0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4057c9b0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x405a41d0"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x4056e920"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40581750"/></to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40581750"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405ad3a0"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4056b2e8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058d130"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058d130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405acea8"/></to>
    </wire>
    <wire loc="215:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4058bd78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407d4458"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405858a0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x405a0010"/></to>
    </wire>
    <wire loc="305:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405a0010"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x409d2bf8"/></to>
    </wire>
    <wire loc="270:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405acea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4087e9c8"/></to>
    </wire>
    <wire loc="124:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40587e10"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406a23d0"/></to>
    </wire>
    <wire loc="126:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40595d28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406a4d48"/></to>
    </wire>
    <wire loc="121:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40588710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406a3490"/></to>
    </wire>
    <wire loc="123:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40587798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406a2010"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40579530"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x405a3c80"/></to>
    </wire>
    <wire loc="303:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x405a3c80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409d4888"/></to>
    </wire>
    <wire loc="216:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405993c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x407d39c8"/></to>
    </wire>
    <wire loc="122:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40587100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406a3bd0"/></to>
    </wire>
    <wire loc="269:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405ad3a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409bb1b0"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4057fba0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x405ae770"/></to>
    </wire>
    <wire loc="307:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x405ae770"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409edb78"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4057a0e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a48c0"/></to>
    </wire>
    <wire loc="304:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a48c0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x409ee3d8"/></to>
    </wire>
    <wire loc="248:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059dd90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4084ab18"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40571800"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40596538"/></to>
    </wire>
    <wire loc="128:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40596538"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x406a27b0"/></to>
    </wire>
    <wire loc="187:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405999e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x407c7c80"/></to>
    </wire>
    <wire loc="125:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40595010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406a4170"/></to>
    </wire>
    <wire loc="224:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x405a41d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40818570"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40580978"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405ae278"/></to>
    </wire>
    <wire loc="306:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405ae278"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409ed680"/></to>
    </wire>
    <wire loc="87:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40571ee0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40596c18"/></to>
    </wire>
    <wire loc="129:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40596c18"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x406a2b90"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407d4458"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x407de010"/></to>
    </wire>
    <wire loc="88:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x409d2bf8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x409fc7d0"/></to>
    </wire>
    <wire loc="160:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40593198"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406e1808"/></to>
    </wire>
    <wire loc="148:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x4059a8f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406b68c0"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406b68c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e67e18"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406a23d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40e31468"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406a3490"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e32568"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406a2010"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40e310a8"/></to>
    </wire>
    <wire loc="161:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x405a5a20"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x4077a4f0"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x4077a4f0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40ec4410"/></to>
    </wire>
    <wire loc="162:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x4059d618"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406e26d8"/></to>
    </wire>
    <wire loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409d4888"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409fd458"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x407d39c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40eeaa68"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406a4d48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e33e08"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406a3bd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e32ca8"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409bb1b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40f369a0"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409edb78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a79dc0"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x409ee3d8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x409f8010"/></to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x4059e558"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x406e2d70"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406a27b0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40e31848"/></to>
    </wire>
    <wire loc="117:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x407c7c80"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x407bf190"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40818570"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40ee3010"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406a4170"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40e33230"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4087e9c8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40f381f0"/></to>
    </wire>
    <wire loc="159:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x4059ece8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x406e14f0"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409ed680"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409f6278"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406a2b90"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40e31c28"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405dca38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4077ca58"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4077ca58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40e97970"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405db040"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40616b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x405e4c70"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409bb1b0"/></to>
    </wire>
    <wire loc="105:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x405e42a8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409d5ed0"/></to>
    </wire>
    <wire loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409d5ed0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409fea90"/></to>
    </wire>
    <wire loc="110:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40615440"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409eb618"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409eb618"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a7a2a8"/></to>
    </wire>
    <wire loc="116:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x406a1ee0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405ceda0"/></to>
    </wire>
    <wire loc="117:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406a16b0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x4069cab0"/></to>
    </wire>
    <wire loc="118:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x406a1ba8"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x40721b78"/></to>
    </wire>
    <wire loc="119:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x406a2f08"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40721eb0"/></to>
    </wire>
    <wire loc="137:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4069b4e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406b68c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4069b010"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x40721680"/></to>
    </wire>
    <wire loc="153:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406e1b50"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4077ca58"/></to>
    </wire>
    <wire loc="154:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40702d68"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40712668"/></to>
    </wire>
    <wire loc="155:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40700330"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40712b60"/></to>
    </wire>
    <wire loc="156:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407025d0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40712e98"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407206b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4078c8a0"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4078c8a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ecf8f0"/></to>
    </wire>
    <wire loc="170:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40720ba8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407c7968"/></to>
    </wire>
    <wire loc="114:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407c7968"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407c0170"/></to>
    </wire>
    <wire loc="171:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40720ee0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4077af08"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4077af08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40ec4e28"/></to>
    </wire>
    <wire loc="176:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407796e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x407c13f0"/></to>
    </wire>
    <wire loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407c13f0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407c04a8"/></to>
    </wire>
    <wire loc="181:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x407cab90"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x405ba760"/></to>
    </wire>
    <wire loc="182:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407ca280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407c7470"/></to>
    </wire>
    <wire loc="113:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407c7470"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407c1bb8"/></to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407c0c20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4084ab18"/></to>
    </wire>
    <wire loc="193:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407c1bb8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407d4a30"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407d4a30"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407de5e8"/></to>
    </wire>
    <wire loc="194:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407c0170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407d4f28"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407d4f28"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407deae0"/></to>
    </wire>
    <wire loc="195:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407c04a8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x407d3250"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407d3250"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407dee18"/></to>
    </wire>
    <wire loc="211:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x407de010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407d9778"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407d9778"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ee7dd0"/></to>
    </wire>
    <wire loc="212:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407de5e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407d9d50"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407d9d50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ee4748"/></to>
    </wire>
    <wire loc="213:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407deae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40818258"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40818258"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ee4c40"/></to>
    </wire>
    <wire loc="214:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407dee18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409ba830"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409ba830"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40f34040"/></to>
    </wire>
    <wire loc="221:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40817230"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4082d538"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4082d538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40f2ede0"/></to>
    </wire>
    <wire loc="222:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40817708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4078cd78"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4078cd78"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ecfdc8"/></to>
    </wire>
    <wire loc="223:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40818a78"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409c0328"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409c0328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409dc1b0"/></to>
    </wire>
    <wire loc="228:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407ca778"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4082da10"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4082da10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40f2b310"/></to>
    </wire>
    <wire loc="237:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40840e20"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405c5930"/></to>
    </wire>
    <wire loc="238:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4082de58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4084a248"/></to>
    </wire>
    <wire loc="239:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40840370"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4084a720"/></to>
    </wire>
    <wire loc="240:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40840768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40616b50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40863988"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409c2db8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40864950"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40616b50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40863030"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405bc068"/></to>
    </wire>
    <wire loc="253:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40864060"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408883f0"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408883f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40885330"/></to>
    </wire>
    <wire loc="254:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40864558"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408888c8"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408888c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40885828"/></to>
    </wire>
    <wire loc="259:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40883828"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405b9da0"/></to>
    </wire>
    <wire loc="260:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40885330"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409c0aa0"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409c0aa0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409dc9c8"/></to>
    </wire>
    <wire loc="261:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40885828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409de010"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409de010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409dcec0"/></to>
    </wire>
    <wire loc="262:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40885c40"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409d5a68"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409d5a68"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409fe628"/></to>
    </wire>
    <wire loc="267:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409b90c0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409edb78"/></to>
    </wire>
    <wire loc="268:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409b9938"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409b53f0"/></to>
    </wire>
    <wire loc="271:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x409b8170"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409c2db8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409b5bb8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409d5ed0"/></to>
    </wire>
    <wire loc="286:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409dbeb0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405b9da0"/></to>
    </wire>
    <wire loc="287:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409dc9c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409d50c0"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409d50c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409e0c70"/></to>
    </wire>
    <wire loc="288:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409dcec0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409d5618"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409d5618"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409fe1d8"/></to>
    </wire>
    <wire loc="289:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x409dc1b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409d88a8"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409d88a8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409e0498"/></to>
    </wire>
    <wire loc="301:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409e9170"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x405b3d38"/></to>
    </wire>
    <wire loc="302:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409e9ad8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409bb1b0"/></to>
    </wire>
    <wire loc="309:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409e6370"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409c2db8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x409e6a08"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409c2db8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x409e50e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409c2db8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409e5700"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40616b50"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40616b50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40e45ce0"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e43540"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40615440"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40e40010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4062f4e0"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40e2f8e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40689820"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e30010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x406a2f08"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e307a8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x406a16b0"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e30ca0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x406a1ba8"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40e2f010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x406a1ee0"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x406e4030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40e655a8"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406e4438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e659b0"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40e65e70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406e48e8"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40e642b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40e69dc0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40e648a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40ec3620"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40689820"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ec3bf8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407796e0"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40ecb450"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x407a1988"/></to>
    </wire>
    <wire loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x407a1988"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x4079e910"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40ecbae8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40ec9010"/></to>
    </wire>
    <wire loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40ec9010"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4079b348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ecc598"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407ca280"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ecca90"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407ca778"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x40ecce88"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x407cab90"/></to>
    </wire>
    <wire loc="118:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x407bf868"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407c0c20"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40ee3518"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40818a78"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40ee3c90"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4062f4e0"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ee2310"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40817230"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ee27e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40817708"/></to>
    </wire>
    <wire loc="189:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40ee1080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x40ee14b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x40ee2c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f2b758"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4082de58"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40f2ab20"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40840e20"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f2bc50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40840370"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40f2a070"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40840768"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40f2a708"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4083e948"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4083e948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40853478"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x40f29190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4083e088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4083db18"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40842dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4083d5f8"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40879e40"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40887c50"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40888cc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40885c40"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40878c20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40886a80"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40887150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40883090"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x408878e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40883828"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40878908"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40886748"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40878430"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40886250"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f31030"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409b9938"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f34e70"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409b90c0"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40f33798"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x408a7c50"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x408a7c50"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x408b4010"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40f34808"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x409b8170"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x408b4010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409aba88"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x408b6c50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40979f00"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408c0b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408ce6c8"/></to>
    </wire>
    <wire loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408ce6c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408c4bb8"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40990338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408ccf08"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4097d248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x408cec90"/></to>
    </wire>
    <wire loc="36:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x408cec90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4095c010"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409a9448"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x408c55c8"/></to>
    </wire>
    <wire loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x408c55c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4095ba88"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4095ba88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f536a0"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408c4bb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f567f8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4095c010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40f56c30"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f52868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4090add8"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4090add8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4091ede8"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40f50a28"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x409221a0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x409221a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x409191a0"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40f4e4a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40922cc0"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40922cc0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40919cc0"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40f4de98"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40920858"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40920858"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40934c18"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x4097bbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x409ad560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x408bed10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408b6c50"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409c1548"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409dd378"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409de408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409db300"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409de800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409db718"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409dd010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409dbeb0"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x409c0010"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x409dde48"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x409c1b00"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x409dd950"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a7a2a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b89960"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409ef010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409fbba8"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a79dc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ba6268"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a10690"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409e9170"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a10e60"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409e6370"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a0d510"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x409e6a08"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a0dbd0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x409e50e0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a0b480"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x409e9ad8"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a0cd18"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a79dc0"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a08298"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409e5700"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409f6690"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40a80d90"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a80d90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40419a98"/></to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409f5148"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40a7d858"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a7d858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aa9010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x409f16f8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a7c010"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a7c010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40aaa1e0"/></to>
    </wire>
    <wire loc="107:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409f1d70"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40a7c688"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a7c688"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4041e2f0"/></to>
    </wire>
    <wire loc="108:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x409f4820"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40a7b090"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a7b090"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4041a670"/></to>
    </wire>
    <wire loc="110:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a0f9e0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a7ba78"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a7ba78"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a77ba8"/></to>
    </wire>
    <wire loc="111:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a0ac48"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4062f4e0"/></to>
    </wire>
    <wire loc="112:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a0c260"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bc8010"/></to>
    </wire>
    <wire loc="847:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40a5fdd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b89960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40fcdac0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40aaa1e0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40aa1850"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40ba6268"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bcff18"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40a95810"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40429ce8"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40a90220"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x404208e0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a91998"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b256d0"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40b256d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b3cea0"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40aa3800"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40aa1e68"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40aabde8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40aa14c8"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40aab178"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40aa1168"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40aa9010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aa05a8"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a9e3d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b0ba40"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b0ba40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fa5630"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a9eae0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b0a5f0"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b0a5f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40fa3230"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40ab3780"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40aa23d0"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40aa23d0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40af07e0"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40ab1010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></to>
    </wire>
    <wire loc="296:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40ac3860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40aeaea0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40ae9658"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40419a98"/></to>
    </wire>
    <wire loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40aeb050"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404184b0"/></to>
    </wire>
    <wire loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40aeba38"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40418ea8"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40aea4a0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x404178e0"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b0a1e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40fa5d70"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40fa36f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b0aaa0"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40fa3b18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40fa6620"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40fa2190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b209d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b3c1b0"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b29098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b1ce40"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b1f998"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b3ad58"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b1f998"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b37990"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b1f998"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b345b8"/></to>
    </wire>
    <wire loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x40fcb548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b29098"/></to>
    </wire>
    <wire loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x40fc87e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b1f998"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b82698"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b29098"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bce8c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ba4e60"/></to>
    </wire>
    <wire loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40bd00e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ba33a0"/></to>
    </wire>
    <wire loc="31:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ba33a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ba0b30"/></to>
    </wire>
    <wire loc="32:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b9fd50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b29098"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40fe8c60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fde700"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c17010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fe4310"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40fe4310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40552e50"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c176a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fe49a8"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fe49a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555bf8"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40c44330"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40fe35d0"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40fe35d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055eda0"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40fdedc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c279f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410154d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555bf8"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c279f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c21908"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40c4e0a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40541ac0"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c4e750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555bf8"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c4d3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40552e50"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40c4dac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40c4df00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <documentation loc="101:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/RadioConfig.h">
        <short>&#10; The base two logarithm of the number of radio alarm ticks per one millisecond&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x408c3330"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="AnchorMoteAppC.MsgSender" loc="47(AnchorMoteAppC.MsgSender):/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AnchorMoteAppC.MsgSender.SenderC" loc="47(AnchorMoteAppC.MsgSender.SenderC):/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AnchorMoteAppC.MsgSender.SenderC.AMQueueEntryP" loc="43(AnchorMoteAppC.MsgSender.SenderC.AMQueueEntryP):/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AnchorMoteAppC.AnchorTimer" loc="44(AnchorMoteAppC.AnchorTimer):/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AnchorMoteC" loc="13:AnchorMoteC.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40435860" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40435a78" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40435c90" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40441c70" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40441e98" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404470e0" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404472d0" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40496088" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404962b0" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404964d8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404966c8" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x406a57e8" loc="83:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x406c1570" loc="42:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x408c3330" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x408c3330"/></type-var>
        </typedef>
        <constant name="divider" ref="0x408c34f0" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x408da5d0" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x408da5d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x408da790" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408cd9c8" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408cd9c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40977010" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40977010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x409771f0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409ac8f0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409ac8f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b83900" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b83900"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40b83b20" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b85800" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b85800"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b85c48" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b85c48"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40b85e08" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40bc6228" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40bc6228"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bc6670" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bc6670"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40bb8488" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40bb8488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40bb88e8" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40bb88e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40bb8b50" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40bb8b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40bb6010" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40bb6010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40bb6278" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40bb6700" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40bb6700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c16010" loc="47:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c14b90" loc="47:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40c0f6b8" loc="43:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40c20010" loc="45:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x404014f0" loc="58:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404014f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404016c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f9888" loc="57:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f9888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f9a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40406ea0" loc="52:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40406ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ff0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40401de8" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40401de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40400010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40406740" loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40406740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40406918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404069f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40406ad8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40406bb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40406c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40403630" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40403630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40403808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40403250" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40403250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40403428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40403a38" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40403a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40403c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4040be18" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4040be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4040a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4040ba48" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4040ba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4040bc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404078f8" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404078f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40407ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4040def8" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4040def8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404070e0"/>
        <function-ref name="isInput" scoped="" ref="0x404071c0"/>
        <function-ref name="toggle" scoped="" ref="0x404072a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40407380"/>
        <function-ref name="get" scoped="" ref="0x40407460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407540"/>
        <function-ref name="set" scoped="" ref="0x40407620"/>
        <function-ref name="clr" scoped="" ref="0x40407700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4040a9c8" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4040a9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4040aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404304b0" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404304b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430888"/>
        <function-ref name="isInput" scoped="" ref="0x40430968"/>
        <function-ref name="toggle" scoped="" ref="0x40430a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40430b28"/>
        <function-ref name="get" scoped="" ref="0x40430c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430ce8"/>
        <function-ref name="set" scoped="" ref="0x40430dc8"/>
        <function-ref name="clr" scoped="" ref="0x40430ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40422a28" loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40422a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422c00"/>
        <function-ref name="isInput" scoped="" ref="0x40422ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40422dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40422ea0"/>
        <function-ref name="get" scoped="" ref="0x40421010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404210f0"/>
        <function-ref name="set" scoped="" ref="0x404211d0"/>
        <function-ref name="clr" scoped="" ref="0x404212b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404250a0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404250a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425278"/>
        <function-ref name="isInput" scoped="" ref="0x40425358"/>
        <function-ref name="toggle" scoped="" ref="0x40425438"/>
        <function-ref name="isOutput" scoped="" ref="0x40425518"/>
        <function-ref name="get" scoped="" ref="0x404255f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404256d8"/>
        <function-ref name="set" scoped="" ref="0x404257b8"/>
        <function-ref name="clr" scoped="" ref="0x40425898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40433210" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40433210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404333e8"/>
        <function-ref name="isInput" scoped="" ref="0x404334c8"/>
        <function-ref name="toggle" scoped="" ref="0x404335a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40433688"/>
        <function-ref name="get" scoped="" ref="0x40433768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433848"/>
        <function-ref name="set" scoped="" ref="0x40433928"/>
        <function-ref name="clr" scoped="" ref="0x40433a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40437a08" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40437a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437be0"/>
        <function-ref name="isInput" scoped="" ref="0x40437cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40437da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40437e80"/>
        <function-ref name="get" scoped="" ref="0x40436010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404360f0"/>
        <function-ref name="set" scoped="" ref="0x404361d0"/>
        <function-ref name="clr" scoped="" ref="0x404362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4041a670" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4041a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a848"/>
        <function-ref name="isInput" scoped="" ref="0x4041a928"/>
        <function-ref name="toggle" scoped="" ref="0x4041aa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4041aae8"/>
        <function-ref name="get" scoped="" ref="0x4041abc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041aca8"/>
        <function-ref name="set" scoped="" ref="0x4041ad88"/>
        <function-ref name="clr" scoped="" ref="0x4041ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x4042bce8" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x4042bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042bec0"/>
        <function-ref name="isInput" scoped="" ref="0x4042a010"/>
        <function-ref name="toggle" scoped="" ref="0x4042a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042a1d0"/>
        <function-ref name="get" scoped="" ref="0x4042a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042a390"/>
        <function-ref name="set" scoped="" ref="0x4042a470"/>
        <function-ref name="clr" scoped="" ref="0x4042a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40419a98" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40419a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419c70"/>
        <function-ref name="isInput" scoped="" ref="0x40419d50"/>
        <function-ref name="toggle" scoped="" ref="0x40419e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40419f10"/>
        <function-ref name="get" scoped="" ref="0x40418010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404180f0"/>
        <function-ref name="set" scoped="" ref="0x404181d0"/>
        <function-ref name="clr" scoped="" ref="0x404182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4041c210" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4041c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4041c4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4041c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c688"/>
        <function-ref name="get" scoped="" ref="0x4041c768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c848"/>
        <function-ref name="set" scoped="" ref="0x4041c928"/>
        <function-ref name="clr" scoped="" ref="0x4041ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404208e0" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404208e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40420b98"/>
        <function-ref name="toggle" scoped="" ref="0x40420c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40420d58"/>
        <function-ref name="get" scoped="" ref="0x40420e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420f18"/>
        <function-ref name="set" scoped="" ref="0x40429010"/>
        <function-ref name="clr" scoped="" ref="0x404290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4042eea8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4042eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4042d1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4042d280"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d360"/>
        <function-ref name="get" scoped="" ref="0x4042d440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d520"/>
        <function-ref name="set" scoped="" ref="0x4042d600"/>
        <function-ref name="clr" scoped="" ref="0x4042d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404132f0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404134c8"/>
        <function-ref name="isInput" scoped="" ref="0x404135a8"/>
        <function-ref name="toggle" scoped="" ref="0x40413688"/>
        <function-ref name="isOutput" scoped="" ref="0x40413768"/>
        <function-ref name="get" scoped="" ref="0x40413848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413928"/>
        <function-ref name="set" scoped="" ref="0x40413a08"/>
        <function-ref name="clr" scoped="" ref="0x40413ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404178e0" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404178e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40417b98"/>
        <function-ref name="toggle" scoped="" ref="0x40417c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40417d58"/>
        <function-ref name="get" scoped="" ref="0x40417e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417f18"/>
        <function-ref name="set" scoped="" ref="0x40416010"/>
        <function-ref name="clr" scoped="" ref="0x404160f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x404240a0" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x404240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424278"/>
        <function-ref name="isInput" scoped="" ref="0x40424358"/>
        <function-ref name="toggle" scoped="" ref="0x40424438"/>
        <function-ref name="isOutput" scoped="" ref="0x40424518"/>
        <function-ref name="get" scoped="" ref="0x404245f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404246d8"/>
        <function-ref name="set" scoped="" ref="0x404247b8"/>
        <function-ref name="clr" scoped="" ref="0x40424898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40428750" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40428750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428928"/>
        <function-ref name="isInput" scoped="" ref="0x40428a08"/>
        <function-ref name="toggle" scoped="" ref="0x40428ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40428bc8"/>
        <function-ref name="get" scoped="" ref="0x40428ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428d88"/>
        <function-ref name="set" scoped="" ref="0x40428e68"/>
        <function-ref name="clr" scoped="" ref="0x40427010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404310a0" loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404310a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431278"/>
        <function-ref name="isInput" scoped="" ref="0x40431358"/>
        <function-ref name="toggle" scoped="" ref="0x40431438"/>
        <function-ref name="isOutput" scoped="" ref="0x40431518"/>
        <function-ref name="get" scoped="" ref="0x404315f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404316d8"/>
        <function-ref name="set" scoped="" ref="0x404317b8"/>
        <function-ref name="clr" scoped="" ref="0x40431898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40438590" loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40438590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438768"/>
        <function-ref name="isInput" scoped="" ref="0x40438848"/>
        <function-ref name="toggle" scoped="" ref="0x40438928"/>
        <function-ref name="isOutput" scoped="" ref="0x40438a08"/>
        <function-ref name="get" scoped="" ref="0x40438ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438bc8"/>
        <function-ref name="set" scoped="" ref="0x40438ca8"/>
        <function-ref name="clr" scoped="" ref="0x40438d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40427c08" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40427c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427de0"/>
        <function-ref name="isInput" scoped="" ref="0x40427ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40426010"/>
        <function-ref name="isOutput" scoped="" ref="0x404260f0"/>
        <function-ref name="get" scoped="" ref="0x404261d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404262b0"/>
        <function-ref name="set" scoped="" ref="0x40426390"/>
        <function-ref name="clr" scoped="" ref="0x40426470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40411210" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40411210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404113e8"/>
        <function-ref name="isInput" scoped="" ref="0x404114c8"/>
        <function-ref name="toggle" scoped="" ref="0x404115a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40411688"/>
        <function-ref name="get" scoped="" ref="0x40411768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411848"/>
        <function-ref name="set" scoped="" ref="0x40411928"/>
        <function-ref name="clr" scoped="" ref="0x40411a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x4041f830" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x4041f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041fa08"/>
        <function-ref name="isInput" scoped="" ref="0x4041fae8"/>
        <function-ref name="toggle" scoped="" ref="0x4041fbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041fca8"/>
        <function-ref name="get" scoped="" ref="0x4041fd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041fe68"/>
        <function-ref name="set" scoped="" ref="0x4041e010"/>
        <function-ref name="clr" scoped="" ref="0x4041e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4042f0c0" loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4042f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f298"/>
        <function-ref name="isInput" scoped="" ref="0x4042f378"/>
        <function-ref name="toggle" scoped="" ref="0x4042f458"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f538"/>
        <function-ref name="get" scoped="" ref="0x4042f618"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f6f8"/>
        <function-ref name="set" scoped="" ref="0x4042f7d8"/>
        <function-ref name="clr" scoped="" ref="0x4042f8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4041ece8" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4041ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041eec0"/>
        <function-ref name="isInput" scoped="" ref="0x4041d010"/>
        <function-ref name="toggle" scoped="" ref="0x4041d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d1d0"/>
        <function-ref name="get" scoped="" ref="0x4041d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d390"/>
        <function-ref name="set" scoped="" ref="0x4041d470"/>
        <function-ref name="clr" scoped="" ref="0x4041d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404214b0" loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404214b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421688"/>
        <function-ref name="isInput" scoped="" ref="0x40421768"/>
        <function-ref name="toggle" scoped="" ref="0x40421848"/>
        <function-ref name="isOutput" scoped="" ref="0x40421928"/>
        <function-ref name="get" scoped="" ref="0x40421a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421ae8"/>
        <function-ref name="set" scoped="" ref="0x40421bc8"/>
        <function-ref name="clr" scoped="" ref="0x40421ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40425a98" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40425a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425c70"/>
        <function-ref name="isInput" scoped="" ref="0x40425d50"/>
        <function-ref name="toggle" scoped="" ref="0x40425e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40425f10"/>
        <function-ref name="get" scoped="" ref="0x4042e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042e0f0"/>
        <function-ref name="set" scoped="" ref="0x4042e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4042e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40433c08" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40433c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40433de0"/>
        <function-ref name="isInput" scoped="" ref="0x40433ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40432010"/>
        <function-ref name="isOutput" scoped="" ref="0x404320f0"/>
        <function-ref name="get" scoped="" ref="0x404321d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404322b0"/>
        <function-ref name="set" scoped="" ref="0x40432390"/>
        <function-ref name="clr" scoped="" ref="0x40432470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404190a0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419278"/>
        <function-ref name="isInput" scoped="" ref="0x40419358"/>
        <function-ref name="toggle" scoped="" ref="0x40419438"/>
        <function-ref name="isOutput" scoped="" ref="0x40419518"/>
        <function-ref name="get" scoped="" ref="0x404195f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404196d8"/>
        <function-ref name="set" scoped="" ref="0x404197b8"/>
        <function-ref name="clr" scoped="" ref="0x40419898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404184b0" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404184b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418688"/>
        <function-ref name="isInput" scoped="" ref="0x40418768"/>
        <function-ref name="toggle" scoped="" ref="0x40418848"/>
        <function-ref name="isOutput" scoped="" ref="0x40418928"/>
        <function-ref name="get" scoped="" ref="0x40418a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418ae8"/>
        <function-ref name="set" scoped="" ref="0x40418bc8"/>
        <function-ref name="clr" scoped="" ref="0x40418ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4041cc08" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4041cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041cde0"/>
        <function-ref name="isInput" scoped="" ref="0x4041cec0"/>
        <function-ref name="toggle" scoped="" ref="0x4041b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b0f0"/>
        <function-ref name="get" scoped="" ref="0x4041b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b2b0"/>
        <function-ref name="set" scoped="" ref="0x4041b390"/>
        <function-ref name="clr" scoped="" ref="0x4041b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404292f0" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404294c8"/>
        <function-ref name="isInput" scoped="" ref="0x404295a8"/>
        <function-ref name="toggle" scoped="" ref="0x40429688"/>
        <function-ref name="isOutput" scoped="" ref="0x40429768"/>
        <function-ref name="get" scoped="" ref="0x40429848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429928"/>
        <function-ref name="set" scoped="" ref="0x40429a08"/>
        <function-ref name="clr" scoped="" ref="0x40429ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4042d8e0" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4042d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042dab8"/>
        <function-ref name="isInput" scoped="" ref="0x4042db98"/>
        <function-ref name="toggle" scoped="" ref="0x4042dc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4042dd58"/>
        <function-ref name="get" scoped="" ref="0x4042de38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042df18"/>
        <function-ref name="set" scoped="" ref="0x4042b010"/>
        <function-ref name="clr" scoped="" ref="0x4042b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40413ce8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40413ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40412010"/>
        <function-ref name="toggle" scoped="" ref="0x404120f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404121d0"/>
        <function-ref name="get" scoped="" ref="0x404122b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412390"/>
        <function-ref name="set" scoped="" ref="0x40412470"/>
        <function-ref name="clr" scoped="" ref="0x40412550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404162f0" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416548"/>
        <function-ref name="isInput" scoped="" ref="0x40416628"/>
        <function-ref name="toggle" scoped="" ref="0x40416708"/>
        <function-ref name="isOutput" scoped="" ref="0x404167e8"/>
        <function-ref name="get" scoped="" ref="0x404168c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404169a8"/>
        <function-ref name="set" scoped="" ref="0x40416a88"/>
        <function-ref name="clr" scoped="" ref="0x40416b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x40424a98" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x40424a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424c70"/>
        <function-ref name="isInput" scoped="" ref="0x40424d50"/>
        <function-ref name="toggle" scoped="" ref="0x40424e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40424f10"/>
        <function-ref name="get" scoped="" ref="0x40423010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404230f0"/>
        <function-ref name="set" scoped="" ref="0x404231d0"/>
        <function-ref name="clr" scoped="" ref="0x404232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40431a98" loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40431a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431c70"/>
        <function-ref name="isInput" scoped="" ref="0x40431d50"/>
        <function-ref name="toggle" scoped="" ref="0x40431e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40431f10"/>
        <function-ref name="get" scoped="" ref="0x40430010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404300f0"/>
        <function-ref name="set" scoped="" ref="0x404301d0"/>
        <function-ref name="clr" scoped="" ref="0x404302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40423ea8" loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40423ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422208"/>
        <function-ref name="isInput" scoped="" ref="0x404222e8"/>
        <function-ref name="toggle" scoped="" ref="0x404223c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404224a8"/>
        <function-ref name="get" scoped="" ref="0x40422588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422668"/>
        <function-ref name="set" scoped="" ref="0x40422748"/>
        <function-ref name="clr" scoped="" ref="0x40422828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x40426670" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x40426670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426848"/>
        <function-ref name="isInput" scoped="" ref="0x40426928"/>
        <function-ref name="toggle" scoped="" ref="0x40426a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40426ae8"/>
        <function-ref name="get" scoped="" ref="0x40426bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426ca8"/>
        <function-ref name="set" scoped="" ref="0x40426d88"/>
        <function-ref name="clr" scoped="" ref="0x40426e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x4042a750" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x4042a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042a928"/>
        <function-ref name="isInput" scoped="" ref="0x4042aa08"/>
        <function-ref name="toggle" scoped="" ref="0x4042aae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042abc8"/>
        <function-ref name="get" scoped="" ref="0x4042aca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ad88"/>
        <function-ref name="set" scoped="" ref="0x4042ae68"/>
        <function-ref name="clr" scoped="" ref="0x40433010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40437010" loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40437010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404371e8"/>
        <function-ref name="isInput" scoped="" ref="0x404372c8"/>
        <function-ref name="toggle" scoped="" ref="0x404373a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40437488"/>
        <function-ref name="get" scoped="" ref="0x40437568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437648"/>
        <function-ref name="set" scoped="" ref="0x40437728"/>
        <function-ref name="clr" scoped="" ref="0x40437808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40411c08" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40411c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411de0"/>
        <function-ref name="isInput" scoped="" ref="0x40411ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4041a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a0f0"/>
        <function-ref name="get" scoped="" ref="0x4041a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a2b0"/>
        <function-ref name="set" scoped="" ref="0x4041a390"/>
        <function-ref name="clr" scoped="" ref="0x4041a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4041e2f0" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4041e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041e5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4041e688"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e768"/>
        <function-ref name="get" scoped="" ref="0x4041e848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e928"/>
        <function-ref name="set" scoped="" ref="0x4041ea08"/>
        <function-ref name="clr" scoped="" ref="0x4041eae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x4042b2f0" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x4042b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042b5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042b688"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b768"/>
        <function-ref name="get" scoped="" ref="0x4042b848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b928"/>
        <function-ref name="set" scoped="" ref="0x4042ba08"/>
        <function-ref name="clr" scoped="" ref="0x4042bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4041d750" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4041d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d928"/>
        <function-ref name="isInput" scoped="" ref="0x4041da08"/>
        <function-ref name="toggle" scoped="" ref="0x4041dae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041dbc8"/>
        <function-ref name="get" scoped="" ref="0x4041dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041dd88"/>
        <function-ref name="set" scoped="" ref="0x4041de68"/>
        <function-ref name="clr" scoped="" ref="0x4041c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40421ea8" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40421ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404200c0"/>
        <function-ref name="isInput" scoped="" ref="0x404201a0"/>
        <function-ref name="toggle" scoped="" ref="0x40420280"/>
        <function-ref name="isOutput" scoped="" ref="0x40420360"/>
        <function-ref name="get" scoped="" ref="0x40420440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420520"/>
        <function-ref name="set" scoped="" ref="0x40420600"/>
        <function-ref name="clr" scoped="" ref="0x404206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4042e4b0" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4042e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042e688"/>
        <function-ref name="isInput" scoped="" ref="0x4042e768"/>
        <function-ref name="toggle" scoped="" ref="0x4042e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4042e928"/>
        <function-ref name="get" scoped="" ref="0x4042ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042eae8"/>
        <function-ref name="set" scoped="" ref="0x4042ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4042eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x40432670" loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x40432670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432848"/>
        <function-ref name="isInput" scoped="" ref="0x40432928"/>
        <function-ref name="toggle" scoped="" ref="0x40432a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40432ae8"/>
        <function-ref name="get" scoped="" ref="0x40432bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432ca8"/>
        <function-ref name="set" scoped="" ref="0x40432d88"/>
        <function-ref name="clr" scoped="" ref="0x40432e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404098b8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404098b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409a90"/>
        <function-ref name="isInput" scoped="" ref="0x40409b70"/>
        <function-ref name="toggle" scoped="" ref="0x40409c50"/>
        <function-ref name="isOutput" scoped="" ref="0x40409d30"/>
        <function-ref name="get" scoped="" ref="0x40409e10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409ef0"/>
        <function-ref name="set" scoped="" ref="0x40413010"/>
        <function-ref name="clr" scoped="" ref="0x404130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40418ea8" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40418ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404170c0"/>
        <function-ref name="isInput" scoped="" ref="0x404171a0"/>
        <function-ref name="toggle" scoped="" ref="0x40417280"/>
        <function-ref name="isOutput" scoped="" ref="0x40417360"/>
        <function-ref name="get" scoped="" ref="0x40417440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417520"/>
        <function-ref name="set" scoped="" ref="0x40417600"/>
        <function-ref name="clr" scoped="" ref="0x404176e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4041b670" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4041b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b848"/>
        <function-ref name="isInput" scoped="" ref="0x4041b928"/>
        <function-ref name="toggle" scoped="" ref="0x4041ba08"/>
        <function-ref name="isOutput" scoped="" ref="0x4041bae8"/>
        <function-ref name="get" scoped="" ref="0x4041bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041bca8"/>
        <function-ref name="set" scoped="" ref="0x4041bd88"/>
        <function-ref name="clr" scoped="" ref="0x4041be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40429ce8" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40429ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40428010"/>
        <function-ref name="toggle" scoped="" ref="0x404280f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404281d0"/>
        <function-ref name="get" scoped="" ref="0x404282b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428390"/>
        <function-ref name="set" scoped="" ref="0x40428470"/>
        <function-ref name="clr" scoped="" ref="0x40428550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4042fab8" loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4042fab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042fc90"/>
        <function-ref name="isInput" scoped="" ref="0x4042fd70"/>
        <function-ref name="toggle" scoped="" ref="0x4042fe50"/>
        <function-ref name="isOutput" scoped="" ref="0x40438010"/>
        <function-ref name="get" scoped="" ref="0x404380f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404381d0"/>
        <function-ref name="set" scoped="" ref="0x404382b0"/>
        <function-ref name="clr" scoped="" ref="0x40438390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40427210" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40427210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404273e8"/>
        <function-ref name="isInput" scoped="" ref="0x404274c8"/>
        <function-ref name="toggle" scoped="" ref="0x404275a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40427688"/>
        <function-ref name="get" scoped="" ref="0x40427768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40427848"/>
        <function-ref name="set" scoped="" ref="0x40427928"/>
        <function-ref name="clr" scoped="" ref="0x40427a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404234b0" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404234b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423688"/>
        <function-ref name="isInput" scoped="" ref="0x40423768"/>
        <function-ref name="toggle" scoped="" ref="0x40423848"/>
        <function-ref name="isOutput" scoped="" ref="0x40423928"/>
        <function-ref name="get" scoped="" ref="0x40423a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423ae8"/>
        <function-ref name="set" scoped="" ref="0x40423bc8"/>
        <function-ref name="clr" scoped="" ref="0x40423ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40412750" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40412750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412928"/>
        <function-ref name="isInput" scoped="" ref="0x40412a08"/>
        <function-ref name="toggle" scoped="" ref="0x40412ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40412bc8"/>
        <function-ref name="get" scoped="" ref="0x40412ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412d88"/>
        <function-ref name="set" scoped="" ref="0x40412e68"/>
        <function-ref name="clr" scoped="" ref="0x40411010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40416d68" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40416d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f010"/>
        <function-ref name="isInput" scoped="" ref="0x4041f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4041f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f2b0"/>
        <function-ref name="get" scoped="" ref="0x4041f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f470"/>
        <function-ref name="set" scoped="" ref="0x4041f550"/>
        <function-ref name="clr" scoped="" ref="0x4041f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4045d030" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4045d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045d208"/>
        <function-ref name="isInput" scoped="" ref="0x4045d2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4045d3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045d4a8"/>
        <function-ref name="get" scoped="" ref="0x4045d588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045d668"/>
        <function-ref name="set" scoped="" ref="0x4045d748"/>
        <function-ref name="clr" scoped="" ref="0x4045d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4045cc88" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4045cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045ce60"/>
        <function-ref name="isInput" scoped="" ref="0x40465010"/>
        <function-ref name="toggle" scoped="" ref="0x404650f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404651d0"/>
        <function-ref name="get" scoped="" ref="0x404652b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40465390"/>
        <function-ref name="set" scoped="" ref="0x40465470"/>
        <function-ref name="clr" scoped="" ref="0x40465550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4045fcc8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4045fcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045fea0"/>
        <function-ref name="isInput" scoped="" ref="0x4045e010"/>
        <function-ref name="toggle" scoped="" ref="0x4045e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045e1d0"/>
        <function-ref name="get" scoped="" ref="0x4045e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045e390"/>
        <function-ref name="set" scoped="" ref="0x4045e470"/>
        <function-ref name="clr" scoped="" ref="0x4045e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4045d988" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4045d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045db60"/>
        <function-ref name="isInput" scoped="" ref="0x4045dc40"/>
        <function-ref name="toggle" scoped="" ref="0x4045dd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4045de00"/>
        <function-ref name="get" scoped="" ref="0x4045dee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c010"/>
        <function-ref name="set" scoped="" ref="0x4045c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4045c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404656b0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404656b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465888"/>
        <function-ref name="isInput" scoped="" ref="0x40465968"/>
        <function-ref name="toggle" scoped="" ref="0x40465a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40465b28"/>
        <function-ref name="get" scoped="" ref="0x40465c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40465ce8"/>
        <function-ref name="set" scoped="" ref="0x40465dc8"/>
        <function-ref name="clr" scoped="" ref="0x40465ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4045e6b0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4045e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045e888"/>
        <function-ref name="isInput" scoped="" ref="0x4045e968"/>
        <function-ref name="toggle" scoped="" ref="0x4045ea48"/>
        <function-ref name="isOutput" scoped="" ref="0x4045eb28"/>
        <function-ref name="get" scoped="" ref="0x4045ec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045ece8"/>
        <function-ref name="set" scoped="" ref="0x4045edc8"/>
        <function-ref name="clr" scoped="" ref="0x4045eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4045c330" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4045c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045c508"/>
        <function-ref name="isInput" scoped="" ref="0x4045c5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4045c6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045c7a8"/>
        <function-ref name="get" scoped="" ref="0x4045c888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c968"/>
        <function-ref name="set" scoped="" ref="0x4045ca48"/>
        <function-ref name="clr" scoped="" ref="0x4045cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40464030" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40464030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464208"/>
        <function-ref name="isInput" scoped="" ref="0x404642e8"/>
        <function-ref name="toggle" scoped="" ref="0x404643c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404644a8"/>
        <function-ref name="get" scoped="" ref="0x40464588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464668"/>
        <function-ref name="set" scoped="" ref="0x40464748"/>
        <function-ref name="clr" scoped="" ref="0x40464828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c9d228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c9d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9d400"/>
        <function-ref name="isInput" scoped="" ref="0x40c9d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c9d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c9d6a0"/>
        <function-ref name="get" scoped="" ref="0x40c9d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c9d860"/>
        <function-ref name="set" scoped="" ref="0x40c9d940"/>
        <function-ref name="clr" scoped="" ref="0x40c9da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c9cc08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c9cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9cde0"/>
        <function-ref name="isInput" scoped="" ref="0x40c9cec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c9b010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c9b0f0"/>
        <function-ref name="get" scoped="" ref="0x40c9b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c9b2b0"/>
        <function-ref name="set" scoped="" ref="0x40c9b390"/>
        <function-ref name="clr" scoped="" ref="0x40c9b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c9a6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c9a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9a898"/>
        <function-ref name="isInput" scoped="" ref="0x40c9a978"/>
        <function-ref name="toggle" scoped="" ref="0x40c9aa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c9ab38"/>
        <function-ref name="get" scoped="" ref="0x40c9ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c9acf8"/>
        <function-ref name="set" scoped="" ref="0x40c9add8"/>
        <function-ref name="clr" scoped="" ref="0x40c9aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c980b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c980b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c98288"/>
        <function-ref name="isInput" scoped="" ref="0x40c98368"/>
        <function-ref name="toggle" scoped="" ref="0x40c98448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c98528"/>
        <function-ref name="get" scoped="" ref="0x40c98608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c986e8"/>
        <function-ref name="set" scoped="" ref="0x40c987c8"/>
        <function-ref name="clr" scoped="" ref="0x40c988a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c97a88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c97a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c97c60"/>
        <function-ref name="isInput" scoped="" ref="0x40c97d40"/>
        <function-ref name="toggle" scoped="" ref="0x40c97e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c97f00"/>
        <function-ref name="get" scoped="" ref="0x40c96010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c960f0"/>
        <function-ref name="set" scoped="" ref="0x40c961d0"/>
        <function-ref name="clr" scoped="" ref="0x40c962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c95538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c95538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c95710"/>
        <function-ref name="isInput" scoped="" ref="0x40c957f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c958d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c959b0"/>
        <function-ref name="get" scoped="" ref="0x40c95a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c95b70"/>
        <function-ref name="set" scoped="" ref="0x40c95c50"/>
        <function-ref name="clr" scoped="" ref="0x40c95d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c93010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c931e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c932c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c933a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c93488"/>
        <function-ref name="get" scoped="" ref="0x40c93568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c93648"/>
        <function-ref name="set" scoped="" ref="0x40c93728"/>
        <function-ref name="clr" scoped="" ref="0x40c93808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c919e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c919e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c91bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40c91ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40c91d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c91e60"/>
        <function-ref name="get" scoped="" ref="0x40c90010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c900f0"/>
        <function-ref name="set" scoped="" ref="0x40c901d0"/>
        <function-ref name="clr" scoped="" ref="0x40c902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40469860" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40469860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469a38"/>
        <function-ref name="isInput" scoped="" ref="0x40469b18"/>
        <function-ref name="toggle" scoped="" ref="0x40469bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x40469cd8"/>
        <function-ref name="get" scoped="" ref="0x40469db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469e98"/>
        <function-ref name="set" scoped="" ref="0x40468010"/>
        <function-ref name="clr" scoped="" ref="0x404680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404675d0" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404675d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404677a8"/>
        <function-ref name="isInput" scoped="" ref="0x40467888"/>
        <function-ref name="toggle" scoped="" ref="0x40467968"/>
        <function-ref name="isOutput" scoped="" ref="0x40467a48"/>
        <function-ref name="get" scoped="" ref="0x40467b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40467c08"/>
        <function-ref name="set" scoped="" ref="0x40467ce8"/>
        <function-ref name="clr" scoped="" ref="0x40467dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046a5a0" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a778"/>
        <function-ref name="isInput" scoped="" ref="0x4046a858"/>
        <function-ref name="toggle" scoped="" ref="0x4046a938"/>
        <function-ref name="isOutput" scoped="" ref="0x4046aa18"/>
        <function-ref name="get" scoped="" ref="0x4046aaf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046abd8"/>
        <function-ref name="set" scoped="" ref="0x4046acb8"/>
        <function-ref name="clr" scoped="" ref="0x4046ad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40468250" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40468250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468428"/>
        <function-ref name="isInput" scoped="" ref="0x40468508"/>
        <function-ref name="toggle" scoped="" ref="0x404685e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404686c8"/>
        <function-ref name="get" scoped="" ref="0x404687a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468888"/>
        <function-ref name="set" scoped="" ref="0x40468968"/>
        <function-ref name="clr" scoped="" ref="0x40468a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40467f28" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40467f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466110"/>
        <function-ref name="isInput" scoped="" ref="0x404661f0"/>
        <function-ref name="toggle" scoped="" ref="0x404662d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404663b0"/>
        <function-ref name="get" scoped="" ref="0x40466490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40466570"/>
        <function-ref name="set" scoped="" ref="0x40466650"/>
        <function-ref name="clr" scoped="" ref="0x40466730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4046aef8" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4046aef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404690e0"/>
        <function-ref name="isInput" scoped="" ref="0x404691c0"/>
        <function-ref name="toggle" scoped="" ref="0x404692a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40469380"/>
        <function-ref name="get" scoped="" ref="0x40469460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469540"/>
        <function-ref name="set" scoped="" ref="0x40469620"/>
        <function-ref name="clr" scoped="" ref="0x40469700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40468ba8" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40468ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468d80"/>
        <function-ref name="isInput" scoped="" ref="0x40468e60"/>
        <function-ref name="toggle" scoped="" ref="0x40467010"/>
        <function-ref name="isOutput" scoped="" ref="0x404670f0"/>
        <function-ref name="get" scoped="" ref="0x404671d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404672b0"/>
        <function-ref name="set" scoped="" ref="0x40467390"/>
        <function-ref name="clr" scoped="" ref="0x40467470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40466890" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40466890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466a68"/>
        <function-ref name="isInput" scoped="" ref="0x40466b48"/>
        <function-ref name="toggle" scoped="" ref="0x40466c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40466d08"/>
        <function-ref name="get" scoped="" ref="0x40466de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40466ec8"/>
        <function-ref name="set" scoped="" ref="0x4046f010"/>
        <function-ref name="clr" scoped="" ref="0x4046f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc0de8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc0de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cbc010"/>
        <function-ref name="isInput" scoped="" ref="0x40cbc0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cbc1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cbc2b0"/>
        <function-ref name="get" scoped="" ref="0x40cbc390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cbc470"/>
        <function-ref name="set" scoped="" ref="0x40cbc550"/>
        <function-ref name="clr" scoped="" ref="0x40cbc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cbb7f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cbb7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cbb9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40cbbab0"/>
        <function-ref name="toggle" scoped="" ref="0x40cbbb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40cbbc70"/>
        <function-ref name="get" scoped="" ref="0x40cbbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cbbe30"/>
        <function-ref name="set" scoped="" ref="0x40cbbf10"/>
        <function-ref name="clr" scoped="" ref="0x40cba010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb9228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb9400"/>
        <function-ref name="isInput" scoped="" ref="0x40cb94e0"/>
        <function-ref name="toggle" scoped="" ref="0x40cb95c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb96a0"/>
        <function-ref name="get" scoped="" ref="0x40cb9780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb9860"/>
        <function-ref name="set" scoped="" ref="0x40cb9940"/>
        <function-ref name="clr" scoped="" ref="0x40cb9a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb8c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb8de0"/>
        <function-ref name="isInput" scoped="" ref="0x40cb8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40cb7010"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb70f0"/>
        <function-ref name="get" scoped="" ref="0x40cb71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb72b0"/>
        <function-ref name="set" scoped="" ref="0x40cb7390"/>
        <function-ref name="clr" scoped="" ref="0x40cb7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb66c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb6898"/>
        <function-ref name="isInput" scoped="" ref="0x40cb6978"/>
        <function-ref name="toggle" scoped="" ref="0x40cb6a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb6b38"/>
        <function-ref name="get" scoped="" ref="0x40cb6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb6cf8"/>
        <function-ref name="set" scoped="" ref="0x40cb6dd8"/>
        <function-ref name="clr" scoped="" ref="0x40cb6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb40b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb4288"/>
        <function-ref name="isInput" scoped="" ref="0x40cb4368"/>
        <function-ref name="toggle" scoped="" ref="0x40cb4448"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb4528"/>
        <function-ref name="get" scoped="" ref="0x40cb4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb46e8"/>
        <function-ref name="set" scoped="" ref="0x40cb47c8"/>
        <function-ref name="clr" scoped="" ref="0x40cb48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cdfa88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cdfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cdfc60"/>
        <function-ref name="isInput" scoped="" ref="0x40cdfd40"/>
        <function-ref name="toggle" scoped="" ref="0x40cdfe20"/>
        <function-ref name="isOutput" scoped="" ref="0x40cdff00"/>
        <function-ref name="get" scoped="" ref="0x40cde010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cde0f0"/>
        <function-ref name="set" scoped="" ref="0x40cde1d0"/>
        <function-ref name="clr" scoped="" ref="0x40cde2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cdd538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cdd538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cdd710"/>
        <function-ref name="isInput" scoped="" ref="0x40cdd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cdd8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cdd9b0"/>
        <function-ref name="get" scoped="" ref="0x40cdda90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cddb70"/>
        <function-ref name="set" scoped="" ref="0x40cddc50"/>
        <function-ref name="clr" scoped="" ref="0x40cddd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4046b170" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4046b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b348"/>
        <function-ref name="isInput" scoped="" ref="0x4046b428"/>
        <function-ref name="toggle" scoped="" ref="0x4046b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b5e8"/>
        <function-ref name="get" scoped="" ref="0x4046b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b7a8"/>
        <function-ref name="set" scoped="" ref="0x4046b888"/>
        <function-ref name="clr" scoped="" ref="0x4046b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40473e48" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40473e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472050"/>
        <function-ref name="isInput" scoped="" ref="0x40472130"/>
        <function-ref name="toggle" scoped="" ref="0x40472210"/>
        <function-ref name="isOutput" scoped="" ref="0x404722f0"/>
        <function-ref name="get" scoped="" ref="0x404723d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404724b0"/>
        <function-ref name="set" scoped="" ref="0x40472590"/>
        <function-ref name="clr" scoped="" ref="0x40472670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046de78" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c070"/>
        <function-ref name="isInput" scoped="" ref="0x4046c150"/>
        <function-ref name="toggle" scoped="" ref="0x4046c230"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c310"/>
        <function-ref name="get" scoped="" ref="0x4046c3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c4d0"/>
        <function-ref name="set" scoped="" ref="0x4046c5b0"/>
        <function-ref name="clr" scoped="" ref="0x4046c690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4046bac8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4046bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046bca0"/>
        <function-ref name="isInput" scoped="" ref="0x4046bd80"/>
        <function-ref name="toggle" scoped="" ref="0x4046be60"/>
        <function-ref name="isOutput" scoped="" ref="0x40473010"/>
        <function-ref name="get" scoped="" ref="0x404730f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404731d0"/>
        <function-ref name="set" scoped="" ref="0x404732b0"/>
        <function-ref name="clr" scoped="" ref="0x40473390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404727d0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404727d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404729a8"/>
        <function-ref name="isInput" scoped="" ref="0x40472a88"/>
        <function-ref name="toggle" scoped="" ref="0x40472b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40472c48"/>
        <function-ref name="get" scoped="" ref="0x40472d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472e08"/>
        <function-ref name="set" scoped="" ref="0x40472ee8"/>
        <function-ref name="clr" scoped="" ref="0x40471010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4046c7f0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4046c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c9c8"/>
        <function-ref name="isInput" scoped="" ref="0x4046caa8"/>
        <function-ref name="toggle" scoped="" ref="0x4046cb88"/>
        <function-ref name="isOutput" scoped="" ref="0x4046cc68"/>
        <function-ref name="get" scoped="" ref="0x4046cd48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ce28"/>
        <function-ref name="set" scoped="" ref="0x4046cf08"/>
        <function-ref name="clr" scoped="" ref="0x4046b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404734f0" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404734f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404736c8"/>
        <function-ref name="isInput" scoped="" ref="0x404737a8"/>
        <function-ref name="toggle" scoped="" ref="0x40473888"/>
        <function-ref name="isOutput" scoped="" ref="0x40473968"/>
        <function-ref name="get" scoped="" ref="0x40473a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473b28"/>
        <function-ref name="set" scoped="" ref="0x40473c08"/>
        <function-ref name="clr" scoped="" ref="0x40473ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40471170" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40471170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471348"/>
        <function-ref name="isInput" scoped="" ref="0x40471428"/>
        <function-ref name="toggle" scoped="" ref="0x40471508"/>
        <function-ref name="isOutput" scoped="" ref="0x404715e8"/>
        <function-ref name="get" scoped="" ref="0x404716c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404717a8"/>
        <function-ref name="set" scoped="" ref="0x40471888"/>
        <function-ref name="clr" scoped="" ref="0x40471968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d09938" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d09938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d09b10"/>
        <function-ref name="isInput" scoped="" ref="0x40d09bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40d09cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d09db0"/>
        <function-ref name="get" scoped="" ref="0x40d09e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d08010"/>
        <function-ref name="set" scoped="" ref="0x40d080f0"/>
        <function-ref name="clr" scoped="" ref="0x40d081d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d073b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d073b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d07588"/>
        <function-ref name="isInput" scoped="" ref="0x40d07668"/>
        <function-ref name="toggle" scoped="" ref="0x40d07748"/>
        <function-ref name="isOutput" scoped="" ref="0x40d07828"/>
        <function-ref name="get" scoped="" ref="0x40d07908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d079e8"/>
        <function-ref name="set" scoped="" ref="0x40d07ac8"/>
        <function-ref name="clr" scoped="" ref="0x40d07ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d06d70" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d06d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d05010"/>
        <function-ref name="isInput" scoped="" ref="0x40d050f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d051d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d052b0"/>
        <function-ref name="get" scoped="" ref="0x40d05390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d05470"/>
        <function-ref name="set" scoped="" ref="0x40d05550"/>
        <function-ref name="clr" scoped="" ref="0x40d05630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d047f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d047f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d049d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d04ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d04b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d04c70"/>
        <function-ref name="get" scoped="" ref="0x40d04d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d04e30"/>
        <function-ref name="set" scoped="" ref="0x40d04f10"/>
        <function-ref name="clr" scoped="" ref="0x40d03010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d02228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d02228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d02400"/>
        <function-ref name="isInput" scoped="" ref="0x40d024e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d025c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d026a0"/>
        <function-ref name="get" scoped="" ref="0x40d02780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d02860"/>
        <function-ref name="set" scoped="" ref="0x40d02940"/>
        <function-ref name="clr" scoped="" ref="0x40d02a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d01c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d01c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d01de0"/>
        <function-ref name="isInput" scoped="" ref="0x40d01ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40cff010"/>
        <function-ref name="isOutput" scoped="" ref="0x40cff0f0"/>
        <function-ref name="get" scoped="" ref="0x40cff1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cff2b0"/>
        <function-ref name="set" scoped="" ref="0x40cff390"/>
        <function-ref name="clr" scoped="" ref="0x40cff470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cfe6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cfe6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cfe898"/>
        <function-ref name="isInput" scoped="" ref="0x40cfe978"/>
        <function-ref name="toggle" scoped="" ref="0x40cfea58"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfeb38"/>
        <function-ref name="get" scoped="" ref="0x40cfec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cfecf8"/>
        <function-ref name="set" scoped="" ref="0x40cfedd8"/>
        <function-ref name="clr" scoped="" ref="0x40cfeeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cfc0b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cfc0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cfc288"/>
        <function-ref name="isInput" scoped="" ref="0x40cfc368"/>
        <function-ref name="toggle" scoped="" ref="0x40cfc448"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfc528"/>
        <function-ref name="get" scoped="" ref="0x40cfc608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cfc6e8"/>
        <function-ref name="set" scoped="" ref="0x40cfc7c8"/>
        <function-ref name="clr" scoped="" ref="0x40cfc8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404779e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404779e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40477ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40477d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40477e60"/>
        <function-ref name="get" scoped="" ref="0x40476010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404760f0"/>
        <function-ref name="set" scoped="" ref="0x404761d0"/>
        <function-ref name="clr" scoped="" ref="0x404762b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40475790" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40475790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475968"/>
        <function-ref name="isInput" scoped="" ref="0x40475a48"/>
        <function-ref name="toggle" scoped="" ref="0x40475b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40475c08"/>
        <function-ref name="get" scoped="" ref="0x40475ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475dc8"/>
        <function-ref name="set" scoped="" ref="0x40475ea8"/>
        <function-ref name="clr" scoped="" ref="0x4047e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404786f8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404786f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404788d0"/>
        <function-ref name="isInput" scoped="" ref="0x404789b0"/>
        <function-ref name="toggle" scoped="" ref="0x40478a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40478b70"/>
        <function-ref name="get" scoped="" ref="0x40478c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478d30"/>
        <function-ref name="set" scoped="" ref="0x40478e10"/>
        <function-ref name="clr" scoped="" ref="0x40478ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40476410" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40476410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404765e8"/>
        <function-ref name="isInput" scoped="" ref="0x404766c8"/>
        <function-ref name="toggle" scoped="" ref="0x404767a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40476888"/>
        <function-ref name="get" scoped="" ref="0x40476968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476a48"/>
        <function-ref name="set" scoped="" ref="0x40476b28"/>
        <function-ref name="clr" scoped="" ref="0x40476c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4047e170" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4047e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e348"/>
        <function-ref name="isInput" scoped="" ref="0x4047e428"/>
        <function-ref name="toggle" scoped="" ref="0x4047e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e5e8"/>
        <function-ref name="get" scoped="" ref="0x4047e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e7a8"/>
        <function-ref name="set" scoped="" ref="0x4047e888"/>
        <function-ref name="clr" scoped="" ref="0x4047e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40477090" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40477090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477268"/>
        <function-ref name="isInput" scoped="" ref="0x40477348"/>
        <function-ref name="toggle" scoped="" ref="0x40477428"/>
        <function-ref name="isOutput" scoped="" ref="0x40477508"/>
        <function-ref name="get" scoped="" ref="0x404775e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404776c8"/>
        <function-ref name="set" scoped="" ref="0x404777a8"/>
        <function-ref name="clr" scoped="" ref="0x40477888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40476d68" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40476d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475010"/>
        <function-ref name="isInput" scoped="" ref="0x404750f0"/>
        <function-ref name="toggle" scoped="" ref="0x404751d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404752b0"/>
        <function-ref name="get" scoped="" ref="0x40475390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475470"/>
        <function-ref name="set" scoped="" ref="0x40475550"/>
        <function-ref name="clr" scoped="" ref="0x40475630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4047eac8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4047eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4047ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4047ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d010"/>
        <function-ref name="get" scoped="" ref="0x4047d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047d1d0"/>
        <function-ref name="set" scoped="" ref="0x4047d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4047d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d2b538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d2b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2b710"/>
        <function-ref name="isInput" scoped="" ref="0x40d2b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d2b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2b9b0"/>
        <function-ref name="get" scoped="" ref="0x40d2ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2bb70"/>
        <function-ref name="set" scoped="" ref="0x40d2bc50"/>
        <function-ref name="clr" scoped="" ref="0x40d2bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d29010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d29010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d291e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d292c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d293a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d29488"/>
        <function-ref name="get" scoped="" ref="0x40d29568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d29648"/>
        <function-ref name="set" scoped="" ref="0x40d29728"/>
        <function-ref name="clr" scoped="" ref="0x40d29808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d289e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d289e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d28bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d28ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d28d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d28e60"/>
        <function-ref name="get" scoped="" ref="0x40d27010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d270f0"/>
        <function-ref name="set" scoped="" ref="0x40d271d0"/>
        <function-ref name="clr" scoped="" ref="0x40d272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d26538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d26538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d26710"/>
        <function-ref name="isInput" scoped="" ref="0x40d267f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d268d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d269b0"/>
        <function-ref name="get" scoped="" ref="0x40d26a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d26b70"/>
        <function-ref name="set" scoped="" ref="0x40d26c50"/>
        <function-ref name="clr" scoped="" ref="0x40d26d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d24010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d24010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d241e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d242c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d243a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d24488"/>
        <function-ref name="get" scoped="" ref="0x40d24568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d24648"/>
        <function-ref name="set" scoped="" ref="0x40d24728"/>
        <function-ref name="clr" scoped="" ref="0x40d24808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d239e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d239e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d23bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d23ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d23d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d23e60"/>
        <function-ref name="get" scoped="" ref="0x40d50010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d500f0"/>
        <function-ref name="set" scoped="" ref="0x40d501d0"/>
        <function-ref name="clr" scoped="" ref="0x40d502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d4f538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d4f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d4f710"/>
        <function-ref name="isInput" scoped="" ref="0x40d4f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d4f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d4f9b0"/>
        <function-ref name="get" scoped="" ref="0x40d4fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d4fb70"/>
        <function-ref name="set" scoped="" ref="0x40d4fc50"/>
        <function-ref name="clr" scoped="" ref="0x40d4fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d4d010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d4d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d4d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d4d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d4d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d4d488"/>
        <function-ref name="get" scoped="" ref="0x40d4d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d4d648"/>
        <function-ref name="set" scoped="" ref="0x40d4d728"/>
        <function-ref name="clr" scoped="" ref="0x40d4d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40483410" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40483410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404835e8"/>
        <function-ref name="isInput" scoped="" ref="0x404836c8"/>
        <function-ref name="toggle" scoped="" ref="0x404837a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40483888"/>
        <function-ref name="get" scoped="" ref="0x40483968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483a48"/>
        <function-ref name="set" scoped="" ref="0x40483b28"/>
        <function-ref name="clr" scoped="" ref="0x40483c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40481170" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40481170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40481348"/>
        <function-ref name="isInput" scoped="" ref="0x40481428"/>
        <function-ref name="toggle" scoped="" ref="0x40481508"/>
        <function-ref name="isOutput" scoped="" ref="0x404815e8"/>
        <function-ref name="get" scoped="" ref="0x404816c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404817a8"/>
        <function-ref name="set" scoped="" ref="0x40481888"/>
        <function-ref name="clr" scoped="" ref="0x40481968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40484128" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40484128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40484300"/>
        <function-ref name="isInput" scoped="" ref="0x404843e0"/>
        <function-ref name="toggle" scoped="" ref="0x404844c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404845a0"/>
        <function-ref name="get" scoped="" ref="0x40484680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484760"/>
        <function-ref name="set" scoped="" ref="0x40484840"/>
        <function-ref name="clr" scoped="" ref="0x40484920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40483d68" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40483d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482010"/>
        <function-ref name="isInput" scoped="" ref="0x404820f0"/>
        <function-ref name="toggle" scoped="" ref="0x404821d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404822b0"/>
        <function-ref name="get" scoped="" ref="0x40482390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482470"/>
        <function-ref name="set" scoped="" ref="0x40482550"/>
        <function-ref name="clr" scoped="" ref="0x40482630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40481ac8" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40481ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40481ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40481d80"/>
        <function-ref name="toggle" scoped="" ref="0x40481e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40480010"/>
        <function-ref name="get" scoped="" ref="0x404800f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404801d0"/>
        <function-ref name="set" scoped="" ref="0x404802b0"/>
        <function-ref name="clr" scoped="" ref="0x40480390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40484a80" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40484a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40484c58"/>
        <function-ref name="isInput" scoped="" ref="0x40484d38"/>
        <function-ref name="toggle" scoped="" ref="0x40484e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40484ef8"/>
        <function-ref name="get" scoped="" ref="0x40483010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404830f0"/>
        <function-ref name="set" scoped="" ref="0x404831d0"/>
        <function-ref name="clr" scoped="" ref="0x404832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40482790" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40482790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482968"/>
        <function-ref name="isInput" scoped="" ref="0x40482a48"/>
        <function-ref name="toggle" scoped="" ref="0x40482b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40482c08"/>
        <function-ref name="get" scoped="" ref="0x40482ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482dc8"/>
        <function-ref name="set" scoped="" ref="0x40482ea8"/>
        <function-ref name="clr" scoped="" ref="0x40481010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404804f0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404804f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404806c8"/>
        <function-ref name="isInput" scoped="" ref="0x404807a8"/>
        <function-ref name="toggle" scoped="" ref="0x40480888"/>
        <function-ref name="isOutput" scoped="" ref="0x40480968"/>
        <function-ref name="get" scoped="" ref="0x40480a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40480b28"/>
        <function-ref name="set" scoped="" ref="0x40480c08"/>
        <function-ref name="clr" scoped="" ref="0x40480ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d7d418" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d7d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d7d5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40d7d6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40d7d7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d7d890"/>
        <function-ref name="get" scoped="" ref="0x40d7d970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d7da50"/>
        <function-ref name="set" scoped="" ref="0x40d7db30"/>
        <function-ref name="clr" scoped="" ref="0x40d7dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d7cde0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d7cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d7b010"/>
        <function-ref name="isInput" scoped="" ref="0x40d7b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d7b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d7b2b0"/>
        <function-ref name="get" scoped="" ref="0x40d7b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d7b470"/>
        <function-ref name="set" scoped="" ref="0x40d7b550"/>
        <function-ref name="clr" scoped="" ref="0x40d7b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d7a7f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d7a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d7a9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d7aab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d7ab90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d7ac70"/>
        <function-ref name="get" scoped="" ref="0x40d7ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d7ae30"/>
        <function-ref name="set" scoped="" ref="0x40d7af10"/>
        <function-ref name="clr" scoped="" ref="0x40d79010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d78228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d78228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d78400"/>
        <function-ref name="isInput" scoped="" ref="0x40d784e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d785c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d786a0"/>
        <function-ref name="get" scoped="" ref="0x40d78780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d78860"/>
        <function-ref name="set" scoped="" ref="0x40d78940"/>
        <function-ref name="clr" scoped="" ref="0x40d78a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d76c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d76c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d76de0"/>
        <function-ref name="isInput" scoped="" ref="0x40d76ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d75010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d750f0"/>
        <function-ref name="get" scoped="" ref="0x40d751d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d752b0"/>
        <function-ref name="set" scoped="" ref="0x40d75390"/>
        <function-ref name="clr" scoped="" ref="0x40d75470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d746c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d746c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d74898"/>
        <function-ref name="isInput" scoped="" ref="0x40d74978"/>
        <function-ref name="toggle" scoped="" ref="0x40d74a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d74b38"/>
        <function-ref name="get" scoped="" ref="0x40d74c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d74cf8"/>
        <function-ref name="set" scoped="" ref="0x40d74dd8"/>
        <function-ref name="clr" scoped="" ref="0x40d74eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d720b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d720b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d72288"/>
        <function-ref name="isInput" scoped="" ref="0x40d72368"/>
        <function-ref name="toggle" scoped="" ref="0x40d72448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d72528"/>
        <function-ref name="get" scoped="" ref="0x40d72608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d726e8"/>
        <function-ref name="set" scoped="" ref="0x40d727c8"/>
        <function-ref name="clr" scoped="" ref="0x40d728a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d71a88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d71a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d71c60"/>
        <function-ref name="isInput" scoped="" ref="0x40d71d40"/>
        <function-ref name="toggle" scoped="" ref="0x40d71e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40d71f00"/>
        <function-ref name="get" scoped="" ref="0x40d70010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d700f0"/>
        <function-ref name="set" scoped="" ref="0x40d701d0"/>
        <function-ref name="clr" scoped="" ref="0x40d702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40487e48" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40487e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40486050"/>
        <function-ref name="isInput" scoped="" ref="0x40486130"/>
        <function-ref name="toggle" scoped="" ref="0x40486210"/>
        <function-ref name="isOutput" scoped="" ref="0x404862f0"/>
        <function-ref name="get" scoped="" ref="0x404863d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404864b0"/>
        <function-ref name="set" scoped="" ref="0x40486590"/>
        <function-ref name="clr" scoped="" ref="0x40486670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40485ac8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40485ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40485d80"/>
        <function-ref name="toggle" scoped="" ref="0x40485e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40490010"/>
        <function-ref name="get" scoped="" ref="0x404900f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404901d0"/>
        <function-ref name="set" scoped="" ref="0x404902b0"/>
        <function-ref name="clr" scoped="" ref="0x40490390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40488b00" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40488b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40488db8"/>
        <function-ref name="toggle" scoped="" ref="0x40488e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40487010"/>
        <function-ref name="get" scoped="" ref="0x404870f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404871d0"/>
        <function-ref name="set" scoped="" ref="0x404872b0"/>
        <function-ref name="clr" scoped="" ref="0x40487390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404867d0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404867d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404869a8"/>
        <function-ref name="isInput" scoped="" ref="0x40486a88"/>
        <function-ref name="toggle" scoped="" ref="0x40486b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40486c48"/>
        <function-ref name="get" scoped="" ref="0x40486d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40486e08"/>
        <function-ref name="set" scoped="" ref="0x40486ee8"/>
        <function-ref name="clr" scoped="" ref="0x40485010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404904f0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404904f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404906c8"/>
        <function-ref name="isInput" scoped="" ref="0x404907a8"/>
        <function-ref name="toggle" scoped="" ref="0x40490888"/>
        <function-ref name="isOutput" scoped="" ref="0x40490968"/>
        <function-ref name="get" scoped="" ref="0x40490a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490b28"/>
        <function-ref name="set" scoped="" ref="0x40490c08"/>
        <function-ref name="clr" scoped="" ref="0x40490ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404874f0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404874f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404876c8"/>
        <function-ref name="isInput" scoped="" ref="0x404877a8"/>
        <function-ref name="toggle" scoped="" ref="0x40487888"/>
        <function-ref name="isOutput" scoped="" ref="0x40487968"/>
        <function-ref name="get" scoped="" ref="0x40487a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487b28"/>
        <function-ref name="set" scoped="" ref="0x40487c08"/>
        <function-ref name="clr" scoped="" ref="0x40487ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40485170" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40485170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485348"/>
        <function-ref name="isInput" scoped="" ref="0x40485428"/>
        <function-ref name="toggle" scoped="" ref="0x40485508"/>
        <function-ref name="isOutput" scoped="" ref="0x404855e8"/>
        <function-ref name="get" scoped="" ref="0x404856c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404857a8"/>
        <function-ref name="set" scoped="" ref="0x40485888"/>
        <function-ref name="clr" scoped="" ref="0x40485968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40490e48" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40490e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f050"/>
        <function-ref name="isInput" scoped="" ref="0x4048f130"/>
        <function-ref name="toggle" scoped="" ref="0x4048f210"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f2f0"/>
        <function-ref name="get" scoped="" ref="0x4048f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f4b0"/>
        <function-ref name="set" scoped="" ref="0x4048f590"/>
        <function-ref name="clr" scoped="" ref="0x4048f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40da7de8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40da7de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40da3010"/>
        <function-ref name="isInput" scoped="" ref="0x40da30f0"/>
        <function-ref name="toggle" scoped="" ref="0x40da31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40da32b0"/>
        <function-ref name="get" scoped="" ref="0x40da3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40da3470"/>
        <function-ref name="set" scoped="" ref="0x40da3550"/>
        <function-ref name="clr" scoped="" ref="0x40da3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40da27f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40da27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40da29d0"/>
        <function-ref name="isInput" scoped="" ref="0x40da2ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40da2b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40da2c70"/>
        <function-ref name="get" scoped="" ref="0x40da2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40da2e30"/>
        <function-ref name="set" scoped="" ref="0x40da2f10"/>
        <function-ref name="clr" scoped="" ref="0x40da1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40da0228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40da0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40da0400"/>
        <function-ref name="isInput" scoped="" ref="0x40da04e0"/>
        <function-ref name="toggle" scoped="" ref="0x40da05c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40da06a0"/>
        <function-ref name="get" scoped="" ref="0x40da0780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40da0860"/>
        <function-ref name="set" scoped="" ref="0x40da0940"/>
        <function-ref name="clr" scoped="" ref="0x40da0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d9fc08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d9fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d9fde0"/>
        <function-ref name="isInput" scoped="" ref="0x40d9fec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d9e010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d9e0f0"/>
        <function-ref name="get" scoped="" ref="0x40d9e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d9e2b0"/>
        <function-ref name="set" scoped="" ref="0x40d9e390"/>
        <function-ref name="clr" scoped="" ref="0x40d9e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d9d6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d9d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d9d898"/>
        <function-ref name="isInput" scoped="" ref="0x40d9d978"/>
        <function-ref name="toggle" scoped="" ref="0x40d9da58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d9db38"/>
        <function-ref name="get" scoped="" ref="0x40d9dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d9dcf8"/>
        <function-ref name="set" scoped="" ref="0x40d9ddd8"/>
        <function-ref name="clr" scoped="" ref="0x40d9deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d9b0b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d9b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d9b288"/>
        <function-ref name="isInput" scoped="" ref="0x40d9b368"/>
        <function-ref name="toggle" scoped="" ref="0x40d9b448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d9b528"/>
        <function-ref name="get" scoped="" ref="0x40d9b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d9b6e8"/>
        <function-ref name="set" scoped="" ref="0x40d9b7c8"/>
        <function-ref name="clr" scoped="" ref="0x40d9b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d9aa88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d9aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d9ac60"/>
        <function-ref name="isInput" scoped="" ref="0x40d9ad40"/>
        <function-ref name="toggle" scoped="" ref="0x40d9ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x40d9af00"/>
        <function-ref name="get" scoped="" ref="0x40d99010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d990f0"/>
        <function-ref name="set" scoped="" ref="0x40d991d0"/>
        <function-ref name="clr" scoped="" ref="0x40d992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d98538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d98538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d98710"/>
        <function-ref name="isInput" scoped="" ref="0x40d987f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d988d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d989b0"/>
        <function-ref name="get" scoped="" ref="0x40d98a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d98b70"/>
        <function-ref name="set" scoped="" ref="0x40d98c50"/>
        <function-ref name="clr" scoped="" ref="0x40d98d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4048b010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4048b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4048b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4048b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b488"/>
        <function-ref name="get" scoped="" ref="0x4048b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b648"/>
        <function-ref name="set" scoped="" ref="0x4048b728"/>
        <function-ref name="clr" scoped="" ref="0x4048b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a17b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a17b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a1990"/>
        <function-ref name="isInput" scoped="" ref="0x404a1a70"/>
        <function-ref name="toggle" scoped="" ref="0x404a1b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404a1c30"/>
        <function-ref name="get" scoped="" ref="0x404a1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a1df0"/>
        <function-ref name="set" scoped="" ref="0x404a1ed0"/>
        <function-ref name="clr" scoped="" ref="0x404a0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049d010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4049d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4049d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049d488"/>
        <function-ref name="get" scoped="" ref="0x4049d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049d648"/>
        <function-ref name="set" scoped="" ref="0x4049d728"/>
        <function-ref name="clr" scoped="" ref="0x4049d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a77b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a77b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a7990"/>
        <function-ref name="isInput" scoped="" ref="0x404a7a70"/>
        <function-ref name="toggle" scoped="" ref="0x404a7b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7c30"/>
        <function-ref name="get" scoped="" ref="0x404a7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a7df0"/>
        <function-ref name="set" scoped="" ref="0x404a7ed0"/>
        <function-ref name="clr" scoped="" ref="0x404a6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a3010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a31e8"/>
        <function-ref name="isInput" scoped="" ref="0x404a32c8"/>
        <function-ref name="toggle" scoped="" ref="0x404a33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a3488"/>
        <function-ref name="get" scoped="" ref="0x404a3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a3648"/>
        <function-ref name="set" scoped="" ref="0x404a3728"/>
        <function-ref name="clr" scoped="" ref="0x404a3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ad7b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ad7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad990"/>
        <function-ref name="isInput" scoped="" ref="0x404ada70"/>
        <function-ref name="toggle" scoped="" ref="0x404adb50"/>
        <function-ref name="isOutput" scoped="" ref="0x404adc30"/>
        <function-ref name="get" scoped="" ref="0x404add10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404addf0"/>
        <function-ref name="set" scoped="" ref="0x404aded0"/>
        <function-ref name="clr" scoped="" ref="0x404ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404aa080" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404aa080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa258"/>
        <function-ref name="isInput" scoped="" ref="0x404aa338"/>
        <function-ref name="toggle" scoped="" ref="0x404aa418"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa4f8"/>
        <function-ref name="get" scoped="" ref="0x404aa5d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa6b8"/>
        <function-ref name="set" scoped="" ref="0x404aa798"/>
        <function-ref name="clr" scoped="" ref="0x404aa878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b3840" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3a18"/>
        <function-ref name="isInput" scoped="" ref="0x404b3af8"/>
        <function-ref name="toggle" scoped="" ref="0x404b3bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3cb8"/>
        <function-ref name="get" scoped="" ref="0x404b3d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3e78"/>
        <function-ref name="set" scoped="" ref="0x404b2010"/>
        <function-ref name="clr" scoped="" ref="0x404b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b00b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0288"/>
        <function-ref name="isInput" scoped="" ref="0x404b0368"/>
        <function-ref name="toggle" scoped="" ref="0x404b0448"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0528"/>
        <function-ref name="get" scoped="" ref="0x404b0608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b06e8"/>
        <function-ref name="set" scoped="" ref="0x404b07c8"/>
        <function-ref name="clr" scoped="" ref="0x404b08a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b9880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9a58"/>
        <function-ref name="isInput" scoped="" ref="0x404b9b38"/>
        <function-ref name="toggle" scoped="" ref="0x404b9c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9cf8"/>
        <function-ref name="get" scoped="" ref="0x404b9dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9eb8"/>
        <function-ref name="set" scoped="" ref="0x404b8010"/>
        <function-ref name="clr" scoped="" ref="0x404b80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404b60b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404b60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6288"/>
        <function-ref name="isInput" scoped="" ref="0x404b6368"/>
        <function-ref name="toggle" scoped="" ref="0x404b6448"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6528"/>
        <function-ref name="get" scoped="" ref="0x404b6608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b66e8"/>
        <function-ref name="set" scoped="" ref="0x404b67c8"/>
        <function-ref name="clr" scoped="" ref="0x404b68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c0880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0a58"/>
        <function-ref name="isInput" scoped="" ref="0x404c0b38"/>
        <function-ref name="toggle" scoped="" ref="0x404c0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0cf8"/>
        <function-ref name="get" scoped="" ref="0x404c0dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0eb8"/>
        <function-ref name="set" scoped="" ref="0x404bf010"/>
        <function-ref name="clr" scoped="" ref="0x404bf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404bc0b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404bc0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc288"/>
        <function-ref name="isInput" scoped="" ref="0x404bc368"/>
        <function-ref name="toggle" scoped="" ref="0x404bc448"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc528"/>
        <function-ref name="get" scoped="" ref="0x404bc608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc6e8"/>
        <function-ref name="set" scoped="" ref="0x404bc7c8"/>
        <function-ref name="clr" scoped="" ref="0x404bc8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404c6880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404c6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6a58"/>
        <function-ref name="isInput" scoped="" ref="0x404c6b38"/>
        <function-ref name="toggle" scoped="" ref="0x404c6c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6cf8"/>
        <function-ref name="get" scoped="" ref="0x404c6dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6eb8"/>
        <function-ref name="set" scoped="" ref="0x404c5010"/>
        <function-ref name="clr" scoped="" ref="0x404c50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404e0bf8" loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404e0bf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404de010" loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404de1e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404de2c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404de3a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x404de488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404de568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404f1808" loc="60:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404f1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404f19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f8a28" loc="57:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f8a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f8c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404f1400" loc="59:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404f1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404f15d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x403f8dc0" loc="58:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403f8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404f1010"/>
        <function-ref name="taskLoop" scoped="" ref="0x404f10f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x404f11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40368d58" loc="48:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40363010"/>
        <function-ref name="runTask" scoped="" ref="0x403630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403675f0" loc="47:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403675f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403677c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403678a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x40367988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403d5100" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403d52d8"/>
        <function-ref name="runTask" scoped="" ref="0x403d53b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d5d68" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d5d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403d6820" loc="55:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403d6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d69f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403d6ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x403d6bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e9218" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e9218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e93f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40362728" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40362728"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40362900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403ea420" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403ea5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40521148" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40521148"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40521320"/>
        <function-ref name="stopDone" scoped="" ref="0x40521400"/>
        <function-ref name="start" scoped="" ref="0x405214e0"/>
        <function-ref name="stop" scoped="" ref="0x405215c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40549ea8" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40549ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4054c0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40552e50" loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40552e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4054a050"/>
        <function-ref name="payloadLength" scoped="" ref="0x4054a130"/>
        <function-ref name="getPayload" scoped="" ref="0x4054a210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4054a2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4054a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40541ac0" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40541ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40541c98"/>
        <function-ref name="getPayload" scoped="" ref="0x40541d78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40541e58"/>
        <function-ref name="cancel" scoped="" ref="0x40524010"/>
        <function-ref name="sendDone" scoped="" ref="0x405240f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4054d798" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4054d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4054d970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40569b30" loc="52:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40569b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40569d08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40569de8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40569ec8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40562010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4054d100" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4054d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4054d2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4055eda0" loc="51:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40550010"/>
        <function-ref name="noAck" scoped="" ref="0x405500f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x405501d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405644d0" loc="53:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405644d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405646a8"/>
        <function-ref name="setRetries" scoped="" ref="0x40564788"/>
        <function-ref name="getRetries" scoped="" ref="0x40564868"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40564948"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40564a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40555bf8" loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40555bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40555dd0"/>
        <function-ref name="source" scoped="" ref="0x40555eb0"/>
        <function-ref name="address" scoped="" ref="0x40548010"/>
        <function-ref name="destination" scoped="" ref="0x405480f0"/>
        <function-ref name="setSource" scoped="" ref="0x405481d0"/>
        <function-ref name="setDestination" scoped="" ref="0x405482b0"/>
        <function-ref name="type" scoped="" ref="0x40548390"/>
        <function-ref name="setType" scoped="" ref="0x40548470"/>
        <function-ref name="isForMe" scoped="" ref="0x40548550"/>
        <function-ref name="setGroup" scoped="" ref="0x40548630"/>
        <function-ref name="localGroup" scoped="" ref="0x40548710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40563e98" loc="54:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40563e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4055f0c0"/>
        <function-ref name="setChannel" scoped="" ref="0x4055f1a0"/>
        <function-ref name="getChannel" scoped="" ref="0x4055f280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x4056e920" loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x4056e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4055c438"/>
        <function-ref name="clear" scoped="" ref="0x4055c7e8"/>
        <function-ref name="isValid" scoped="" ref="0x4055c088"/>
        <function-ref name="set" scoped="" ref="0x4055cb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4056b2e8" loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4056b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4056be68"/>
        <function-ref name="clear" scoped="" ref="0x4056a230"/>
        <function-ref name="isValid" scoped="" ref="0x4056bab8"/>
        <function-ref name="set" scoped="" ref="0x4056a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405740e0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405740e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405742b8"/>
        <function-ref name="stopDone" scoped="" ref="0x40574398"/>
        <function-ref name="start" scoped="" ref="0x40574478"/>
        <function-ref name="stop" scoped="" ref="0x40574558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405858a0" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405858a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405834a0"/>
        <function-ref name="get" scoped="" ref="0x405831e0"/>
        <function-ref name="isSet" scoped="" ref="0x40585ee8"/>
        <function-ref name="set" scoped="" ref="0x40583760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4058d130" loc="71:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4058dc30"/>
        <function-ref name="clear" scoped="" ref="0x4058b010"/>
        <function-ref name="isValid" scoped="" ref="0x4058d880"/>
        <function-ref name="set" scoped="" ref="0x4058b3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40571100" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40571100"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405712d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4057e260" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4057e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057e438"/>
        <function-ref name="payloadLength" scoped="" ref="0x4057e518"/>
        <function-ref name="getPayload" scoped="" ref="0x4057e5f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4057e6d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4057e7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405749b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405749b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40574b90"/>
        <function-ref name="getPayload" scoped="" ref="0x40574c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40574d50"/>
        <function-ref name="cancel" scoped="" ref="0x40574e30"/>
        <function-ref name="sendDone" scoped="" ref="0x40574f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40573a30" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40573a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40573c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40579530" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40579530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40585118"/>
        <function-ref name="get" scoped="" ref="0x40579e38"/>
        <function-ref name="isSet" scoped="" ref="0x40579b78"/>
        <function-ref name="set" scoped="" ref="0x405853d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4057dc18" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4057dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4057ddf0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4057ded0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4057c010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4057c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40573398" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40573398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40573570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40581750" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40581750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4058e280"/>
        <function-ref name="clear" scoped="" ref="0x4058e630"/>
        <function-ref name="isValid" scoped="" ref="0x40581ea0"/>
        <function-ref name="set" scoped="" ref="0x4058e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4057fba0" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4057fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40581200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4057a0e0" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4057a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4057aca8"/>
        <function-ref name="get" scoped="" ref="0x4057a9e8"/>
        <function-ref name="isSet" scoped="" ref="0x4057a728"/>
        <function-ref name="set" scoped="" ref="0x40579010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4057d690" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4057d868"/>
        <function-ref name="noAck" scoped="" ref="0x4057d948"/>
        <function-ref name="wasAcked" scoped="" ref="0x4057da28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40571800" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40571800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405719d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4057c298" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4057c298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4057c470"/>
        <function-ref name="setRetries" scoped="" ref="0x4057c550"/>
        <function-ref name="getRetries" scoped="" ref="0x4057c630"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4057c710"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4057c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4057e950" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4057e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4057eb28"/>
        <function-ref name="source" scoped="" ref="0x4057ec08"/>
        <function-ref name="address" scoped="" ref="0x4057ece8"/>
        <function-ref name="destination" scoped="" ref="0x4057edc8"/>
        <function-ref name="setSource" scoped="" ref="0x4057eea8"/>
        <function-ref name="setDestination" scoped="" ref="0x4057d010"/>
        <function-ref name="type" scoped="" ref="0x4057d0f0"/>
        <function-ref name="setType" scoped="" ref="0x4057d1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4057d2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4057d390"/>
        <function-ref name="localGroup" scoped="" ref="0x4057d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4057c9b0" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4057c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4057cc08"/>
        <function-ref name="setChannel" scoped="" ref="0x4057cce8"/>
        <function-ref name="getChannel" scoped="" ref="0x4057cdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40580978" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40580978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40580b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40571ee0" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40571ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4057e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4058bd78" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4058bd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40588010"/>
        <function-ref name="stopDone" scoped="" ref="0x405880f0"/>
        <function-ref name="start" scoped="" ref="0x405881d0"/>
        <function-ref name="stop" scoped="" ref="0x405882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405a0010" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a0bd8"/>
        <function-ref name="get" scoped="" ref="0x405a0918"/>
        <function-ref name="isSet" scoped="" ref="0x405a0658"/>
        <function-ref name="set" scoped="" ref="0x405a0e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40593198" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40593198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40593370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x4059a8f8" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x4059a8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4059ab50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4059ac30"/>
        <function-ref name="request" scoped="" ref="0x4059ad10"/>
        <function-ref name="granted" scoped="" ref="0x4059adf0"/>
        <function-ref name="isOwner" scoped="" ref="0x4059aed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40587e10" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40587e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40596010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40588710" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40588710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405888e8"/>
        <function-ref name="getPayload" scoped="" ref="0x405889c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40588aa8"/>
        <function-ref name="cancel" scoped="" ref="0x40588b88"/>
        <function-ref name="sendDone" scoped="" ref="0x40588c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40587798" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40587798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40587970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x405a5a20" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x405a5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x405a5bf8"/>
        <function-ref name="address" scoped="" ref="0x405a5cd8"/>
        <function-ref name="destination" scoped="" ref="0x405a5db8"/>
        <function-ref name="setSource" scoped="" ref="0x405a5e98"/>
        <function-ref name="setDestination" scoped="" ref="0x4059d010"/>
        <function-ref name="pan" scoped="" ref="0x4059d0f0"/>
        <function-ref name="setPan" scoped="" ref="0x4059d1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4059d2b0"/>
        <function-ref name="localPan" scoped="" ref="0x4059d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x4059d618" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x4059d618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4059d7f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4059d8d0"/>
        <function-ref name="getPayload" scoped="" ref="0x4059d9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4059da90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4059db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405a3c80" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405a3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a1868"/>
        <function-ref name="get" scoped="" ref="0x405a15a8"/>
        <function-ref name="isSet" scoped="" ref="0x405a12e8"/>
        <function-ref name="set" scoped="" ref="0x405a1b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405993c0" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405993c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40599598"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40599678"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40599758"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40599838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40595d28" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40595d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40595f00"/>
        <function-ref name="payloadLength" scoped="" ref="0x40594010"/>
        <function-ref name="getPayload" scoped="" ref="0x405940f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405941d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40587100" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40587100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405872d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405ad3a0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405ad3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405ac010"/>
        <function-ref name="clear" scoped="" ref="0x405ac3c0"/>
        <function-ref name="isValid" scoped="" ref="0x405adbf0"/>
        <function-ref name="set" scoped="" ref="0x405ac770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x405ae770" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x405ae770"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405aedb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405a48c0" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a34a0"/>
        <function-ref name="get" scoped="" ref="0x405a31e0"/>
        <function-ref name="isSet" scoped="" ref="0x405a4f08"/>
        <function-ref name="set" scoped="" ref="0x405a3760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4059dd90" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059dd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40599010"/>
        <function-ref name="noAck" scoped="" ref="0x405990f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x405991d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4059e558" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4059e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4059e730"/>
        <function-ref name="getPayload" scoped="" ref="0x4059e810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4059e8f0"/>
        <function-ref name="cancel" scoped="" ref="0x4059e9d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4059eab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40596538" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40596538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40596710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405999e0" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405999e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40599bb8"/>
        <function-ref name="setRetries" scoped="" ref="0x40599c98"/>
        <function-ref name="getRetries" scoped="" ref="0x40599d78"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40599e58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x405a41d0" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x405a41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x405a43a8"/>
        <function-ref name="setChannel" scoped="" ref="0x405a4488"/>
        <function-ref name="getChannel" scoped="" ref="0x405a4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40595010" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40595010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405951e8"/>
        <function-ref name="source" scoped="" ref="0x405952c8"/>
        <function-ref name="address" scoped="" ref="0x405953a8"/>
        <function-ref name="destination" scoped="" ref="0x40595488"/>
        <function-ref name="setSource" scoped="" ref="0x40595568"/>
        <function-ref name="setDestination" scoped="" ref="0x40595648"/>
        <function-ref name="type" scoped="" ref="0x40595728"/>
        <function-ref name="setType" scoped="" ref="0x40595808"/>
        <function-ref name="isForMe" scoped="" ref="0x405958e8"/>
        <function-ref name="setGroup" scoped="" ref="0x405959c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40595aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405acea8" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405acea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405ab9c0"/>
        <function-ref name="clear" scoped="" ref="0x405abd70"/>
        <function-ref name="isValid" scoped="" ref="0x405ab610"/>
        <function-ref name="set" scoped="" ref="0x405a9150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4059ece8" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4059ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4059eec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405ae278" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405ae278"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405ae450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40596c18" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40596c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40596df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x405b9da0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x405b9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x405c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x405b87b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x405b87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x405b8988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x405ceda0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405ceda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405b9010"/>
        <function-ref name="checkFrame" scoped="" ref="0x405b90f0"/>
        <function-ref name="source" scoped="" ref="0x405b91d0"/>
        <function-ref name="destination" scoped="" ref="0x405b92b0"/>
        <function-ref name="setSource" scoped="" ref="0x405b9390"/>
        <function-ref name="setDestination" scoped="" ref="0x405b9470"/>
        <function-ref name="setGroup" scoped="" ref="0x405b9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x405c2360" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x405c2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x405c2538"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x405c2618"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x405c26f8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x405c27d8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x405c28b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x405db040" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405db040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405db218"/>
        <function-ref name="wait" scoped="" ref="0x405db2f8"/>
        <function-ref name="cancel" scoped="" ref="0x405db3d8"/>
        <function-ref name="isFree" scoped="" ref="0x405db4b8"/>
        <function-ref name="getNow" scoped="" ref="0x405db598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x405e42a8" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x405e42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e4480"/>
        <function-ref name="payloadLength" scoped="" ref="0x405e4560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e4640"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405e4720"/>
        <function-ref name="headerLength" scoped="" ref="0x405e4800"/>
        <function-ref name="metadataLength" scoped="" ref="0x405e48e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x405e4c70" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x405e4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405da828"/>
        <function-ref name="clear" scoped="" ref="0x405dabd8"/>
        <function-ref name="isValid" scoped="" ref="0x405da478"/>
        <function-ref name="set" scoped="" ref="0x405e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x405b3d38" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x405b3d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b3f10"/>
        <function-ref name="headerLength" scoped="" ref="0x405b6010"/>
        <function-ref name="metadataLength" scoped="" ref="0x405b60f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x405b61d0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x405b62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x405b5a00" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x405b5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x405b5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x405bc068" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405bc068"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x405bc240"/>
        <function-ref name="createAckPacket" scoped="" ref="0x405bc320"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405bc400"/>
        <function-ref name="isAckPacket" scoped="" ref="0x405bc4e0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x405bc5c0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x405bc6a0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405bc780"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405bc860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x405dca38" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405dca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x405dcc10"/>
        <function-ref name="getDSN" scoped="" ref="0x405dccf0"/>
        <function-ref name="setFCF" scoped="" ref="0x405dcdd0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405dceb0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x405cb010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x405cb0f0"/>
        <function-ref name="setDSN" scoped="" ref="0x405cb1d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x405cb2b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x405cb390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405cb470"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405cb550"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405cb630"/>
        <function-ref name="localAddr" scoped="" ref="0x405cb710"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405cb870"/>
        <function-ref name="localPan" scoped="" ref="0x405cb950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405cba30"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405cbb10"/>
        <function-ref name="setFramePending" scoped="" ref="0x405cbbf0"/>
        <function-ref name="setDestPan" scoped="" ref="0x405cbcd0"/>
        <function-ref name="isForMe" scoped="" ref="0x405cbdb0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405cbe90"/>
        <function-ref name="getFCF" scoped="" ref="0x405ca010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405ca0f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405ca1d0"/>
        <function-ref name="getFramePending" scoped="" ref="0x405ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x405ba760" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x405ba760"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x405ba938"/>
        <function-ref name="reportChannelError" scoped="" ref="0x405baa18"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x405baaf8"/>
        <function-ref name="getSender" scoped="" ref="0x405babd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x405c5930" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405c5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x405c5b08"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x405c5be8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x405c5cc8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x405c5da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40616b50" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40616b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40616d38"/>
        <function-ref name="wait" scoped="" ref="0x40616e18"/>
        <function-ref name="cancel" scoped="" ref="0x40616ef8"/>
        <function-ref name="isFree" scoped="" ref="0x40615010"/>
        <function-ref name="getNow" scoped="" ref="0x406150f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40615440" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40615440"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40518ce8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40639908"/>
        <function-ref name="fired" scoped="" ref="0x406390d8"/>
        <function-ref name="startAt" scoped="" ref="0x406395c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40639350"/>
        <function-ref name="getAlarm" scoped="" ref="0x40639b80"/>
        <function-ref name="start" scoped="" ref="0x40615b90"/>
        <function-ref name="stop" scoped="" ref="0x40615e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40e45ce0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40e45ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40e45ec8"/>
        <function-ref name="wait" scoped="" ref="0x40e43010"/>
        <function-ref name="cancel" scoped="" ref="0x40e430f0"/>
        <function-ref name="isFree" scoped="" ref="0x40e431d0"/>
        <function-ref name="getNow" scoped="" ref="0x40e432b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40e43540" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e43540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40518ce8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e42ab8"/>
        <function-ref name="fired" scoped="" ref="0x40e42288"/>
        <function-ref name="startAt" scoped="" ref="0x40e42778"/>
        <function-ref name="isRunning" scoped="" ref="0x40e42500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e42d30"/>
        <function-ref name="start" scoped="" ref="0x40e43c90"/>
        <function-ref name="stop" scoped="" ref="0x40e42010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40e40010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40e40010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40e401e8"/>
        <function-ref name="suspend" scoped="" ref="0x40e402c8"/>
        <function-ref name="resume" scoped="" ref="0x40e403a8"/>
        <function-ref name="run" scoped="" ref="0x40e40488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x4062f4e0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4062f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4062f6b8"/>
        <function-ref name="suspend" scoped="" ref="0x4062f798"/>
        <function-ref name="resume" scoped="" ref="0x4062f878"/>
        <function-ref name="run" scoped="" ref="0x4062f958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406a16b0" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406a16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406a1888"/>
        <function-ref name="cancel" scoped="" ref="0x406a1968"/>
        <function-ref name="sendDone" scoped="" ref="0x406a1a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x406a1ba8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x406a1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406a23d0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406a23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406a25b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406a4d48" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406a4d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406a4f20"/>
        <function-ref name="payloadLength" scoped="" ref="0x406a3018"/>
        <function-ref name="getPayload" scoped="" ref="0x406a30f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a31d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406a32b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406a3490" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406a3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406a3678"/>
        <function-ref name="getPayload" scoped="" ref="0x406a3758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a3838"/>
        <function-ref name="cancel" scoped="" ref="0x406a3918"/>
        <function-ref name="sendDone" scoped="" ref="0x406a39f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406a2010" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a21f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x406a2f08" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x406a2f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406a10f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x406a11d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a12b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406a1390"/>
        <function-ref name="headerLength" scoped="" ref="0x406a1470"/>
        <function-ref name="metadataLength" scoped="" ref="0x406a1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x406a1ee0" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x406a1ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406a00e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x406a01c0"/>
        <function-ref name="source" scoped="" ref="0x406a02a0"/>
        <function-ref name="destination" scoped="" ref="0x406a0380"/>
        <function-ref name="setSource" scoped="" ref="0x406a0460"/>
        <function-ref name="setDestination" scoped="" ref="0x406a0540"/>
        <function-ref name="setGroup" scoped="" ref="0x406a0620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406a3bd0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406a3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a3db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406a27b0" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406a27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a2998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406a4170" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406a4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406a4348"/>
        <function-ref name="source" scoped="" ref="0x406a4428"/>
        <function-ref name="address" scoped="" ref="0x406a4508"/>
        <function-ref name="destination" scoped="" ref="0x406a45e8"/>
        <function-ref name="setSource" scoped="" ref="0x406a46c8"/>
        <function-ref name="setDestination" scoped="" ref="0x406a47a8"/>
        <function-ref name="type" scoped="" ref="0x406a4888"/>
        <function-ref name="setType" scoped="" ref="0x406a4968"/>
        <function-ref name="isForMe" scoped="" ref="0x406a4a48"/>
        <function-ref name="setGroup" scoped="" ref="0x406a4b28"/>
        <function-ref name="localGroup" scoped="" ref="0x406a4c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406a2b90" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406a2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a2d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e30ca0" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e30ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e30e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e307a8" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e307a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e30980"/>
        <function-ref name="cancel" scoped="" ref="0x40e30a60"/>
        <function-ref name="sendDone" scoped="" ref="0x40e30b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40e31468" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40e31468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40e31650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e33e08" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e33e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e32010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e320f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e321d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e322b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e32390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e32568" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e32568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e32750"/>
        <function-ref name="getPayload" scoped="" ref="0x40e32830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e32910"/>
        <function-ref name="cancel" scoped="" ref="0x40e329f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e32ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40e310a8" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40e310a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e31290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e3aa28" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e3aa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e3ac00"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e3ace0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e3adc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e3aea0"/>
        <function-ref name="headerLength" scoped="" ref="0x40e33010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e330f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40e2f010" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40e2f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e2f268"/>
        <function-ref name="checkFrame" scoped="" ref="0x40e2f348"/>
        <function-ref name="source" scoped="" ref="0x40e2f428"/>
        <function-ref name="destination" scoped="" ref="0x40e2f508"/>
        <function-ref name="setSource" scoped="" ref="0x40e2f5e8"/>
        <function-ref name="setDestination" scoped="" ref="0x40e2f6c8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e2f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40e2f8e8" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40e2f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40e2fac0"/>
        <function-ref name="changed" scoped="" ref="0x40e2fba0"/>
        <function-ref name="amGroup" scoped="" ref="0x40e2fc80"/>
        <function-ref name="setAddress" scoped="" ref="0x40e2fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e30010" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e30010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e301e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e302c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e303a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e30488"/>
        <function-ref name="headerLength" scoped="" ref="0x40e30568"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e30648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e32ca8" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e32ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e32e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40e31848" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40e31848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e31a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e33230" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e33230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e33408"/>
        <function-ref name="source" scoped="" ref="0x40e334e8"/>
        <function-ref name="address" scoped="" ref="0x40e335c8"/>
        <function-ref name="destination" scoped="" ref="0x40e336a8"/>
        <function-ref name="setSource" scoped="" ref="0x40e33788"/>
        <function-ref name="setDestination" scoped="" ref="0x40e33868"/>
        <function-ref name="type" scoped="" ref="0x40e33948"/>
        <function-ref name="setType" scoped="" ref="0x40e33a28"/>
        <function-ref name="isForMe" scoped="" ref="0x40e33b08"/>
        <function-ref name="setGroup" scoped="" ref="0x40e33be8"/>
        <function-ref name="localGroup" scoped="" ref="0x40e33cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40e31c28" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40e31c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e31e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40689820" loc="54:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40689820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x406899f8"/>
        <function-ref name="changed" scoped="" ref="0x40689ad8"/>
        <function-ref name="amGroup" scoped="" ref="0x40689bb8"/>
        <function-ref name="setAddress" scoped="" ref="0x40689c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4069b010" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4069b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4069b1e8"/>
        <function-ref name="cancel" scoped="" ref="0x4069b2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4069b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4069b4e8" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4069b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4069b6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4069b7a0"/>
        <function-ref name="request" scoped="" ref="0x4069b880"/>
        <function-ref name="granted" scoped="" ref="0x4069b960"/>
        <function-ref name="isOwner" scoped="" ref="0x4069ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4069cab0" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4069cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4069cc88"/>
        <function-ref name="cancel" scoped="" ref="0x4069cd68"/>
        <function-ref name="sendDone" scoped="" ref="0x4069ce48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x406e4030" loc="86:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x406e4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x406e4218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406e42f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406e48e8" loc="89:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406e48e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406e4ad0"/>
        <function-ref name="configure" scoped="" ref="0x406e4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406b68c0" loc="85:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406b68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406b6aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406b6b88"/>
        <function-ref name="request" scoped="" ref="0x406b6c68"/>
        <function-ref name="granted" scoped="" ref="0x406b6d48"/>
        <function-ref name="isOwner" scoped="" ref="0x406b6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406e4438" loc="87:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406e4438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406e4610"/>
        <function-ref name="userId" scoped="" ref="0x406e46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e69a88" loc="44:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e69a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e69c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40e69dc0" loc="45:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40e69dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e67010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e670f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e671d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40e672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e655a8" loc="52:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e655a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e65790"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e65870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e65e70" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e65e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e64070"/>
        <function-ref name="configure" scoped="" ref="0x40e64150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40e642b0" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e642b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e64488"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e64568"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e64648"/>
        <function-ref name="dequeue" scoped="" ref="0x40e64728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e67e18" loc="51:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e67e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e65050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e65130"/>
        <function-ref name="request" scoped="" ref="0x40e65210"/>
        <function-ref name="granted" scoped="" ref="0x40e652f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e653d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e659b0" loc="53:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e659b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e65b88"/>
        <function-ref name="userId" scoped="" ref="0x40e65c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40e648a8" loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40e648a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e64a80"/>
        <function-ref name="runTask" scoped="" ref="0x40e64b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40702d68" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40702d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40700010"/>
        <function-ref name="cancel" scoped="" ref="0x407000f0"/>
        <function-ref name="sendDone" scoped="" ref="0x407001d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40700330" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40700330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40700508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406e1808" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406e1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406e19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406e26d8" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406e26d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e28b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x406e2990"/>
        <function-ref name="getPayload" scoped="" ref="0x406e2a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e2b50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406e2c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x407025d0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407025d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407027a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40702888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40702968"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40702a48"/>
        <function-ref name="headerLength" scoped="" ref="0x40702b28"/>
        <function-ref name="metadataLength" scoped="" ref="0x40702c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x406e1b50" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406e1b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406e1d28"/>
        <function-ref name="getDSN" scoped="" ref="0x406e1e08"/>
        <function-ref name="setFCF" scoped="" ref="0x406e1ee8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40703010"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407030f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407031d0"/>
        <function-ref name="setDSN" scoped="" ref="0x407032b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x40703390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40703470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40703550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40703630"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40703710"/>
        <function-ref name="localAddr" scoped="" ref="0x407037f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40703950"/>
        <function-ref name="localPan" scoped="" ref="0x40703a30"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40703b10"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40703bf0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40703cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40703db0"/>
        <function-ref name="isForMe" scoped="" ref="0x40703e90"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40702010"/>
        <function-ref name="getFCF" scoped="" ref="0x407020f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407021d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407022b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40702390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406e2d70" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406e2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e1010"/>
        <function-ref name="getPayload" scoped="" ref="0x406e10f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e11d0"/>
        <function-ref name="cancel" scoped="" ref="0x406e12b0"/>
        <function-ref name="sendDone" scoped="" ref="0x406e1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406e14f0" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406e14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e16c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407206b0" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407206b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40720888"/>
        <function-ref name="cancel" scoped="" ref="0x40720968"/>
        <function-ref name="sendDone" scoped="" ref="0x40720a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40720ba8" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40720ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40720d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40712e98" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40712e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407210c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407211a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40721280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40721360"/>
        <function-ref name="headerLength" scoped="" ref="0x40721440"/>
        <function-ref name="metadataLength" scoped="" ref="0x40721520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x40721b78" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x40721b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40721d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40720ee0" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40720ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407350e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407351c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407352a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40735380"/>
        <function-ref name="headerLength" scoped="" ref="0x40735460"/>
        <function-ref name="metadataLength" scoped="" ref="0x40735540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x40721680" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x40721680"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40721858"/>
        <function-ref name="cancel" scoped="" ref="0x40721938"/>
        <function-ref name="sendDone" scoped="" ref="0x40721a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40712668" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40712668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40712840"/>
        <function-ref name="cancel" scoped="" ref="0x40712920"/>
        <function-ref name="sendDone" scoped="" ref="0x40712a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40712b60" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40712b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40712d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40721eb0" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40721eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407200c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407201a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40720280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40720360"/>
        <function-ref name="headerLength" scoped="" ref="0x40720440"/>
        <function-ref name="metadataLength" scoped="" ref="0x40720520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4077a4f0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4077a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4077a6c8"/>
        <function-ref name="address" scoped="" ref="0x4077a7a8"/>
        <function-ref name="destination" scoped="" ref="0x4077a888"/>
        <function-ref name="setSource" scoped="" ref="0x4077a968"/>
        <function-ref name="setDestination" scoped="" ref="0x4077aa48"/>
        <function-ref name="pan" scoped="" ref="0x4077ab28"/>
        <function-ref name="setPan" scoped="" ref="0x4077ac08"/>
        <function-ref name="isForMe" scoped="" ref="0x4077ace8"/>
        <function-ref name="localPan" scoped="" ref="0x4077adc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4077af08" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4077af08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407790f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407791d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407792b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40779390"/>
        <function-ref name="headerLength" scoped="" ref="0x40779470"/>
        <function-ref name="metadataLength" scoped="" ref="0x40779550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x4077ca58" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4077ca58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4077cc30"/>
        <function-ref name="getDSN" scoped="" ref="0x4077cd10"/>
        <function-ref name="setFCF" scoped="" ref="0x4077cdf0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4077ced0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4077b010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4077b0f0"/>
        <function-ref name="setDSN" scoped="" ref="0x4077b1d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4077b2b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4077b390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4077b470"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4077b550"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4077b630"/>
        <function-ref name="localAddr" scoped="" ref="0x4077b710"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4077b870"/>
        <function-ref name="localPan" scoped="" ref="0x4077b950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4077ba30"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4077bb10"/>
        <function-ref name="setFramePending" scoped="" ref="0x4077bbf0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4077bcd0"/>
        <function-ref name="isForMe" scoped="" ref="0x4077bdb0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4077be90"/>
        <function-ref name="getFCF" scoped="" ref="0x4077a010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4077a0f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4077a1d0"/>
        <function-ref name="getFramePending" scoped="" ref="0x4077a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407796e0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407796e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407798b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40779998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40779a78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40779b58"/>
        <function-ref name="headerLength" scoped="" ref="0x40779c38"/>
        <function-ref name="metadataLength" scoped="" ref="0x40779d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40ec4410" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40ec4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40ec45e8"/>
        <function-ref name="address" scoped="" ref="0x40ec46c8"/>
        <function-ref name="destination" scoped="" ref="0x40ec47a8"/>
        <function-ref name="setSource" scoped="" ref="0x40ec4888"/>
        <function-ref name="setDestination" scoped="" ref="0x40ec4968"/>
        <function-ref name="pan" scoped="" ref="0x40ec4a48"/>
        <function-ref name="setPan" scoped="" ref="0x40ec4b28"/>
        <function-ref name="isForMe" scoped="" ref="0x40ec4c08"/>
        <function-ref name="localPan" scoped="" ref="0x40ec4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40ec4e28" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40ec4e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ec3050"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ec3130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ec3210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ec32f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40ec33d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ec34b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40e97970" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40e97970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40e97b48"/>
        <function-ref name="getDSN" scoped="" ref="0x40e97c28"/>
        <function-ref name="setFCF" scoped="" ref="0x40e97d08"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40e97de8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40e97ec8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40ec5010"/>
        <function-ref name="setDSN" scoped="" ref="0x40ec50f0"/>
        <function-ref name="createAckReply" scoped="" ref="0x40ec51d0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40ec52b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40ec5390"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40ec5470"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40ec5550"/>
        <function-ref name="localAddr" scoped="" ref="0x40ec5630"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40ec5790"/>
        <function-ref name="localPan" scoped="" ref="0x40ec5870"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40ec5950"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40ec5a30"/>
        <function-ref name="setFramePending" scoped="" ref="0x40ec5b10"/>
        <function-ref name="setDestPan" scoped="" ref="0x40ec5bf0"/>
        <function-ref name="isForMe" scoped="" ref="0x40ec5cd0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40ec5db0"/>
        <function-ref name="getFCF" scoped="" ref="0x40ec5e90"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40ec4010"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40ec40f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40ec41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40ec3620" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40ec3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40ec37f8"/>
        <function-ref name="changed" scoped="" ref="0x40ec38d8"/>
        <function-ref name="amGroup" scoped="" ref="0x40ec39b8"/>
        <function-ref name="setAddress" scoped="" ref="0x40ec3a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ec3bf8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ec3bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ec3dd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ec3eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ec2010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ec20f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40ec21d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ec22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407ca280" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407ca280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407ca458"/>
        <function-ref name="cancel" scoped="" ref="0x407ca538"/>
        <function-ref name="sendDone" scoped="" ref="0x407ca618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407ca778" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407ca778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407ca950"/>
        <function-ref name="header" scoped="" ref="0x407caa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4078c8a0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4078c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4078ca78"/>
        <function-ref name="cancel" scoped="" ref="0x4078cb58"/>
        <function-ref name="sendDone" scoped="" ref="0x4078cc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x407cab90" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x407cab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x407cad68"/>
        <function-ref name="reportChannelError" scoped="" ref="0x407cae48"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x407caf28"/>
        <function-ref name="getSender" scoped="" ref="0x407c9018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4078cd78" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4078cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407ca010"/>
        <function-ref name="header" scoped="" ref="0x407ca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ecc598" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ecc598"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ecc770"/>
        <function-ref name="cancel" scoped="" ref="0x40ecc850"/>
        <function-ref name="sendDone" scoped="" ref="0x40ecc930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ecca90" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ecca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40eccc68"/>
        <function-ref name="header" scoped="" ref="0x40eccd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40ecbae8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40ecbae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecbcc0"/>
        <function-ref name="clearAll" scoped="" ref="0x40ecbda0"/>
        <function-ref name="get" scoped="" ref="0x40ecbe80"/>
        <function-ref name="set" scoped="" ref="0x40eca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ecf8f0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ecf8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ecfac8"/>
        <function-ref name="cancel" scoped="" ref="0x40ecfba8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ecfc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40ecb450" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40ecb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40ecb628"/>
        <function-ref name="insertNode" scoped="" ref="0x40ecb708"/>
        <function-ref name="getNode" scoped="" ref="0x40ecb7e8"/>
        <function-ref name="evicted" scoped="" ref="0x40ecb8c8"/>
        <function-ref name="getIndex" scoped="" ref="0x40ecb9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ecfdc8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ecfdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ecc010"/>
        <function-ref name="header" scoped="" ref="0x40ecc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ecc230" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ecc230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ecc408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x40ecce88" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40ecce88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40ecb070"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40ecb150"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40ecb230"/>
        <function-ref name="getSender" scoped="" ref="0x40ecb310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x407a1988" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x407a1988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x407a1b60"/>
        <function-ref name="insertNode" scoped="" ref="0x407a1c40"/>
        <function-ref name="getNode" scoped="" ref="0x407a1d20"/>
        <function-ref name="evicted" scoped="" ref="0x407a1e00"/>
        <function-ref name="getIndex" scoped="" ref="0x407a1ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4079b348" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4079b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4079b520"/>
        <function-ref name="clearAll" scoped="" ref="0x4079b600"/>
        <function-ref name="get" scoped="" ref="0x4079b6e0"/>
        <function-ref name="set" scoped="" ref="0x4079b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x4079e910" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4079e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4079eae8"/>
        <function-ref name="insertNode" scoped="" ref="0x4079ebc8"/>
        <function-ref name="getNode" scoped="" ref="0x4079eca8"/>
        <function-ref name="evicted" scoped="" ref="0x4079ed88"/>
        <function-ref name="getIndex" scoped="" ref="0x4079ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4079e578" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4079e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4079e750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40ec9010" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40ec9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ec91e8"/>
        <function-ref name="clearAll" scoped="" ref="0x40ec92c8"/>
        <function-ref name="get" scoped="" ref="0x40ec93a8"/>
        <function-ref name="set" scoped="" ref="0x40ec9488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407c1bb8" loc="85:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407c1bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c1d90"/>
        <function-ref name="cancel" scoped="" ref="0x407c1e70"/>
        <function-ref name="sendDone" scoped="" ref="0x407c0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407c0170" loc="86:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407c0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407c0348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x407bf868" loc="93:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x407bf868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407bfa40"/>
        <function-ref name="noAck" scoped="" ref="0x407bfb20"/>
        <function-ref name="wasAcked" scoped="" ref="0x407bfc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407c7470" loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407c7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c7648"/>
        <function-ref name="cancel" scoped="" ref="0x407c7728"/>
        <function-ref name="sendDone" scoped="" ref="0x407c7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x407c13f0" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407c13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407c15c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x407c16a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407c1788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407c1868"/>
        <function-ref name="headerLength" scoped="" ref="0x407c1948"/>
        <function-ref name="metadataLength" scoped="" ref="0x407c1a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407c04a8" loc="87:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407c04a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407c0680"/>
        <function-ref name="payloadLength" scoped="" ref="0x407c0760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407c0840"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407c0920"/>
        <function-ref name="headerLength" scoped="" ref="0x407c0a00"/>
        <function-ref name="metadataLength" scoped="" ref="0x407c0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x407bf190" loc="92:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x407bf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x407bf368"/>
        <function-ref name="setRetries" scoped="" ref="0x407bf448"/>
        <function-ref name="getRetries" scoped="" ref="0x407bf528"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x407bf608"/>
        <function-ref name="wasDelivered" scoped="" ref="0x407bf6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407c7968" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407c7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407c7b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x407c0c20" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407c0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407c0df8"/>
        <function-ref name="noAck" scoped="" ref="0x407c0ed8"/>
        <function-ref name="wasAcked" scoped="" ref="0x407bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x407c7c80" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x407c7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x407c7e58"/>
        <function-ref name="setRetries" scoped="" ref="0x407c1010"/>
        <function-ref name="getRetries" scoped="" ref="0x407c10f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x407c11d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x407c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407d4458" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407d4458"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407d4630"/>
        <function-ref name="stopDone" scoped="" ref="0x407d4710"/>
        <function-ref name="start" scoped="" ref="0x407d47f0"/>
        <function-ref name="stop" scoped="" ref="0x407d48d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407de5e8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407de5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407de7c0"/>
        <function-ref name="cancel" scoped="" ref="0x407de8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x407de980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407deae0" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407deae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407decb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407d4a30" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407d4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d4c08"/>
        <function-ref name="cancel" scoped="" ref="0x407d4ce8"/>
        <function-ref name="sendDone" scoped="" ref="0x407d4dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x407d3250" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407d3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d3428"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d3508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d35e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d36c8"/>
        <function-ref name="headerLength" scoped="" ref="0x407d37a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x407d3888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x407d39c8" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x407d39c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x407d3ba0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x407d3c80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x407d3d60"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x407d3e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x407de010" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x407de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407de1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x407de2c8"/>
        <function-ref name="start" scoped="" ref="0x407de3a8"/>
        <function-ref name="stop" scoped="" ref="0x407de488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407d4f28" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407d4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d3110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407dee18" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407dee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407dd010"/>
        <function-ref name="payloadLength" scoped="" ref="0x407dd0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407dd1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407dd2b0"/>
        <function-ref name="headerLength" scoped="" ref="0x407dd390"/>
        <function-ref name="metadataLength" scoped="" ref="0x407dd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40eeaa68" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40eeaa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40eeac40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40eead20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40eeae00"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40eeaee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407d9778" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407d9778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407d9950"/>
        <function-ref name="stopDone" scoped="" ref="0x407d9a30"/>
        <function-ref name="start" scoped="" ref="0x407d9b10"/>
        <function-ref name="stop" scoped="" ref="0x407d9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40818a78" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40818a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40818c50"/>
        <function-ref name="turnOn" scoped="" ref="0x40818d30"/>
        <function-ref name="setChannel" scoped="" ref="0x40818e10"/>
        <function-ref name="done" scoped="" ref="0x40818ef0"/>
        <function-ref name="standby" scoped="" ref="0x40817010"/>
        <function-ref name="getChannel" scoped="" ref="0x408170f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407d9d50" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407d9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d9f28"/>
        <function-ref name="cancel" scoped="" ref="0x40818018"/>
        <function-ref name="sendDone" scoped="" ref="0x408180f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40817708" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40817708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408178e0"/>
        <function-ref name="header" scoped="" ref="0x408179c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40818258" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40818258"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40818430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40817230" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40817230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40817408"/>
        <function-ref name="ready" scoped="" ref="0x408174e8"/>
        <function-ref name="sendDone" scoped="" ref="0x408175c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40818570" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40818570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40818748"/>
        <function-ref name="setChannel" scoped="" ref="0x40818828"/>
        <function-ref name="getChannel" scoped="" ref="0x40818908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ee7dd0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ee7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ee4010"/>
        <function-ref name="stopDone" scoped="" ref="0x40ee40f0"/>
        <function-ref name="start" scoped="" ref="0x40ee41d0"/>
        <function-ref name="stop" scoped="" ref="0x40ee42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40ee4410" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40ee4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ee45e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40ee3518" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ee3518"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ee36f0"/>
        <function-ref name="turnOn" scoped="" ref="0x40ee37d0"/>
        <function-ref name="setChannel" scoped="" ref="0x40ee38b0"/>
        <function-ref name="done" scoped="" ref="0x40ee3990"/>
        <function-ref name="standby" scoped="" ref="0x40ee3a70"/>
        <function-ref name="getChannel" scoped="" ref="0x40ee3b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ee4748" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ee4748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee4920"/>
        <function-ref name="cancel" scoped="" ref="0x40ee4a00"/>
        <function-ref name="sendDone" scoped="" ref="0x40ee4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40ee1080" loc="189:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40ee1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ee1258"/>
        <function-ref name="runTask" scoped="" ref="0x40ee1338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40ee27e8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ee27e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ee29c0"/>
        <function-ref name="header" scoped="" ref="0x40ee2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x40ee14b8" loc="144:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x40ee14b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ee1690"/>
        <function-ref name="runTask" scoped="" ref="0x40ee1770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ee4c40" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ee4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ee4e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x40ee2c20" loc="322:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x40ee2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ee2df8"/>
        <function-ref name="runTask" scoped="" ref="0x40ee2ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40ee2310" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ee2310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee24e8"/>
        <function-ref name="ready" scoped="" ref="0x40ee25c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ee26a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40ee3010" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40ee3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40ee31e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40ee32c8"/>
        <function-ref name="getChannel" scoped="" ref="0x40ee33a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40ee3c90" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40ee3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40ee3e68"/>
        <function-ref name="suspend" scoped="" ref="0x40ee2010"/>
        <function-ref name="resume" scoped="" ref="0x40ee20f0"/>
        <function-ref name="run" scoped="" ref="0x40ee21d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4082de58" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4082de58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40840050"/>
        <function-ref name="ready" scoped="" ref="0x40840130"/>
        <function-ref name="sendDone" scoped="" ref="0x40840210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40840370" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40840370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40840548"/>
        <function-ref name="header" scoped="" ref="0x40840628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40840768" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40840768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40840940"/>
        <function-ref name="wait" scoped="" ref="0x40840a20"/>
        <function-ref name="cancel" scoped="" ref="0x40840b00"/>
        <function-ref name="isFree" scoped="" ref="0x40840be0"/>
        <function-ref name="getNow" scoped="" ref="0x40840cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40840e20" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40840e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4084c010"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4084c0f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4084c1d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4084c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4082da10" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4082da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4082dbe8"/>
        <function-ref name="header" scoped="" ref="0x4082dcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4082d538" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4082d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4082d710"/>
        <function-ref name="ready" scoped="" ref="0x4082d7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4082d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f2b758" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f2b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f2b930"/>
        <function-ref name="ready" scoped="" ref="0x40f2ba10"/>
        <function-ref name="sendDone" scoped="" ref="0x40f2baf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f2bc50" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f2bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f2be28"/>
        <function-ref name="header" scoped="" ref="0x40f2bf08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40f2a070" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40f2a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f2a248"/>
        <function-ref name="wait" scoped="" ref="0x40f2a328"/>
        <function-ref name="cancel" scoped="" ref="0x40f2a408"/>
        <function-ref name="isFree" scoped="" ref="0x40f2a4e8"/>
        <function-ref name="getNow" scoped="" ref="0x40f2a5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40f2a708" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40f2a708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40f2a8e0"/>
        <function-ref name="rand32" scoped="" ref="0x40f2a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40f2ab20" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40f2ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40f2acf8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40f2add8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40f2aeb8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40f29010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40f2b310" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40f2b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f2b4e8"/>
        <function-ref name="header" scoped="" ref="0x40f2b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40f2ede0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40f2ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f2b010"/>
        <function-ref name="ready" scoped="" ref="0x40f2b0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f2b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x40f29190" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x40f29190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f29368"/>
        <function-ref name="runTask" scoped="" ref="0x40f29448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4083e948" loc="46:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4083e948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4083eb20"/>
        <function-ref name="rand32" scoped="" ref="0x4083ec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4083e088" loc="45:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4083e088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4083e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40842dc0" loc="44:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40842dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4083f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40853478" loc="48:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40853478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40853650"/>
        <function-ref name="rand32" scoped="" ref="0x40853730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4083db18" loc="47:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4083db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408531e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4083d5f8" loc="46:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4083d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4083d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40864060" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40864060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40864238"/>
        <function-ref name="ready" scoped="" ref="0x40864318"/>
        <function-ref name="sendDone" scoped="" ref="0x408643f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40864558" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40864558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40864730"/>
        <function-ref name="header" scoped="" ref="0x40864810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40864950" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40864950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40864b28"/>
        <function-ref name="wait" scoped="" ref="0x40864c08"/>
        <function-ref name="cancel" scoped="" ref="0x40864ce8"/>
        <function-ref name="isFree" scoped="" ref="0x40864dc8"/>
        <function-ref name="getNow" scoped="" ref="0x40864ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40863988" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40863988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40863b60"/>
        <function-ref name="get" scoped="" ref="0x40863c40"/>
        <function-ref name="setValue" scoped="" ref="0x40863d20"/>
        <function-ref name="set" scoped="" ref="0x40863e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40863030" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40863030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40863208"/>
        <function-ref name="createAckPacket" scoped="" ref="0x408632e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408633c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x408634a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40863588"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40863668"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40863748"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40863828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4084a720" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4084a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4084a8f8"/>
        <function-ref name="header" scoped="" ref="0x4084a9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4084a248" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4084a248"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4084a420"/>
        <function-ref name="ready" scoped="" ref="0x4084a500"/>
        <function-ref name="sendDone" scoped="" ref="0x4084a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4084ab18" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4084ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4084acf0"/>
        <function-ref name="noAck" scoped="" ref="0x4084add0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4084aeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40879e40" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40879e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40878050"/>
        <function-ref name="stopDone" scoped="" ref="0x40878130"/>
        <function-ref name="start" scoped="" ref="0x40878210"/>
        <function-ref name="stop" scoped="" ref="0x408782f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40888cc0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40888cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40888e98"/>
        <function-ref name="request" scoped="" ref="0x40887010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40885330" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40885330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40885508"/>
        <function-ref name="ready" scoped="" ref="0x408855e8"/>
        <function-ref name="sendDone" scoped="" ref="0x408856c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40885828" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40885828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40885a00"/>
        <function-ref name="header" scoped="" ref="0x40885ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40878c20" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40878c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40878df8"/>
        <function-ref name="turnOn" scoped="" ref="0x40878ed8"/>
        <function-ref name="setChannel" scoped="" ref="0x40888010"/>
        <function-ref name="done" scoped="" ref="0x408880f0"/>
        <function-ref name="standby" scoped="" ref="0x408881d0"/>
        <function-ref name="getChannel" scoped="" ref="0x408882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40887150" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40887150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40887328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40887408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408874e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408875c8"/>
        <function-ref name="headerLength" scoped="" ref="0x408876a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40887788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40886a80" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40886a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40886cd8"/>
        <function-ref name="turnOn" scoped="" ref="0x40886db8"/>
        <function-ref name="setChannel" scoped="" ref="0x40886e98"/>
        <function-ref name="done" scoped="" ref="0x40885010"/>
        <function-ref name="standby" scoped="" ref="0x408850f0"/>
        <function-ref name="getChannel" scoped="" ref="0x408851d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x408878e8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x408878e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40887ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408888c8" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408888c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40888aa0"/>
        <function-ref name="header" scoped="" ref="0x40888b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40886748" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40886748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40886920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40887c50" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40887c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40887e28"/>
        <function-ref name="stopDone" scoped="" ref="0x40887f08"/>
        <function-ref name="start" scoped="" ref="0x40886010"/>
        <function-ref name="stop" scoped="" ref="0x408860f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40883090" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40883090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40883268"/>
        <function-ref name="payloadLength" scoped="" ref="0x40883348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40883428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40883508"/>
        <function-ref name="headerLength" scoped="" ref="0x408835e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408836c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40878908" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40878908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40878ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40883828" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40883828"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40883a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40886250" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40886250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40886428"/>
        <function-ref name="cancel" scoped="" ref="0x40886508"/>
        <function-ref name="sendDone" scoped="" ref="0x408865e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408883f0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408883f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408885c8"/>
        <function-ref name="ready" scoped="" ref="0x408886a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40888788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40885c40" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40885c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40885e18"/>
        <function-ref name="request" scoped="" ref="0x40885ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40878430" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40878430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40878608"/>
        <function-ref name="cancel" scoped="" ref="0x408786e8"/>
        <function-ref name="sendDone" scoped="" ref="0x408787c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x409b8170" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x409b8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409b8348"/>
        <function-ref name="get" scoped="" ref="0x409b8428"/>
        <function-ref name="setValue" scoped="" ref="0x409b8508"/>
        <function-ref name="set" scoped="" ref="0x409b85e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409ba830" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409ba830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409baa08"/>
        <function-ref name="payloadLength" scoped="" ref="0x409baae8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409babc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409baca8"/>
        <function-ref name="headerLength" scoped="" ref="0x409bad88"/>
        <function-ref name="metadataLength" scoped="" ref="0x409bae68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409b9938" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409b9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409b9b10"/>
        <function-ref name="payloadLength" scoped="" ref="0x409b9bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409b9cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409b9db0"/>
        <function-ref name="headerLength" scoped="" ref="0x409b9e90"/>
        <function-ref name="metadataLength" scoped="" ref="0x409b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409bb1b0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409bb1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409bbcb0"/>
        <function-ref name="clear" scoped="" ref="0x409ba088"/>
        <function-ref name="isValid" scoped="" ref="0x409bb900"/>
        <function-ref name="set" scoped="" ref="0x409ba438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x409b90c0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409b90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409b9708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4087e9c8" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4087e9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408c14d8"/>
        <function-ref name="clear" scoped="" ref="0x408c1888"/>
        <function-ref name="isValid" scoped="" ref="0x408c1128"/>
        <function-ref name="set" scoped="" ref="0x408c1c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40f34808" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40f34808"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f349e0"/>
        <function-ref name="get" scoped="" ref="0x40f34ac0"/>
        <function-ref name="setValue" scoped="" ref="0x40f34ba0"/>
        <function-ref name="set" scoped="" ref="0x40f34c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f34040" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f34040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f34218"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f342f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f343d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f344b8"/>
        <function-ref name="headerLength" scoped="" ref="0x40f34598"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f34678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f31030" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f31030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f31208"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f312e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f313c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f314a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40f31588"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f31668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40f369a0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40f369a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40f354d0"/>
        <function-ref name="clear" scoped="" ref="0x40f35880"/>
        <function-ref name="isValid" scoped="" ref="0x40f35120"/>
        <function-ref name="set" scoped="" ref="0x40f35c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40f34e70" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f34e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f334d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40f33798" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40f33798"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f33de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40f381f0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40f381f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40f38cf0"/>
        <function-ref name="clear" scoped="" ref="0x40f360b8"/>
        <function-ref name="isValid" scoped="" ref="0x40f38940"/>
        <function-ref name="set" scoped="" ref="0x40f36468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x408a7c50" loc="20:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408a7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408c02e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x408b6c50" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x408b6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408b5790"/>
        <function-ref name="fired" scoped="" ref="0x408bba20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408b5150"/>
        <function-ref name="isOneShot" scoped="" ref="0x408bbed0"/>
        <function-ref name="getdt" scoped="" ref="0x408b5c40"/>
        <function-ref name="gett0" scoped="" ref="0x408b59e8"/>
        <function-ref name="isRunning" scoped="" ref="0x408bbc78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408bb2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408b5470"/>
        <function-ref name="startOneShot" scoped="" ref="0x408bb548"/>
        <function-ref name="stop" scoped="" ref="0x408bb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x408b4010" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b4658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408c0b80" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408c0b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408c0d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x408c55c8" loc="29:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x408c55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408c5d18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408c9288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408c9010"/>
        <function-ref name="overflow" scoped="" ref="0x408c9500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408ce6c8" loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408ce6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408ce8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x408cec90" loc="28:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x408cec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408ca150"/>
        <function-ref name="fired" scoped="" ref="0x408cb908"/>
        <function-ref name="startAt" scoped="" ref="0x408cbdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x408cbb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x408ca3c8"/>
        <function-ref name="start" scoped="" ref="0x408cb3f0"/>
        <function-ref name="stop" scoped="" ref="0x408cb690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4095c010" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4095c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4095b4e0"/>
        <function-ref name="fired" scoped="" ref="0x4095cc78"/>
        <function-ref name="startAt" scoped="" ref="0x4095b1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4095cef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4095b758"/>
        <function-ref name="start" scoped="" ref="0x4095c760"/>
        <function-ref name="stop" scoped="" ref="0x4095ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408c4bb8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408c4bb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034f5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034f5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408c4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4095ba88" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4095ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4095a200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4095a6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4095a478"/>
        <function-ref name="overflow" scoped="" ref="0x4095a968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40f50a28" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40f50a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40f50c00"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40f50ce0"/>
        <function-ref name="getControlA" scoped="" ref="0x40f50dc0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40f50ea0"/>
        <function-ref name="setControlB" scoped="" ref="0x40f4e010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40f4e0f0"/>
        <function-ref name="getControlB" scoped="" ref="0x40f4e1d0"/>
        <function-ref name="setControlA" scoped="" ref="0x40f4e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40f56c30" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40f56c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f530f8"/>
        <function-ref name="fired" scoped="" ref="0x40f558b8"/>
        <function-ref name="startAt" scoped="" ref="0x40f55da8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f55b30"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f53370"/>
        <function-ref name="start" scoped="" ref="0x40f553a0"/>
        <function-ref name="stop" scoped="" ref="0x40f55640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f567f8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f567f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f569d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f536a0" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f536a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f53df0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f52300"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f52088"/>
        <function-ref name="overflow" scoped="" ref="0x40f52578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40f4de98" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40f4de98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40f4c0c0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40f4c1a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x40f4c280"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40f4c360"/>
        <function-ref name="countBusy" scoped="" ref="0x40f4c440"/>
        <function-ref name="compareABusy" scoped="" ref="0x40f4c520"/>
        <function-ref name="getAssr" scoped="" ref="0x40f4c600"/>
        <function-ref name="setAssr" scoped="" ref="0x40f4c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40f4e4a0" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40f4e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40f4d9f0"/>
        <function-ref name="fired" scoped="" ref="0x40f4d010"/>
        <function-ref name="get" scoped="" ref="0x40f4eae8"/>
        <function-ref name="reset" scoped="" ref="0x40f4d288"/>
        <function-ref name="isOn" scoped="" ref="0x40f4dc68"/>
        <function-ref name="set" scoped="" ref="0x40f4ed60"/>
        <function-ref name="start" scoped="" ref="0x40f4d500"/>
        <function-ref name="stop" scoped="" ref="0x40f4d778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40f52868" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f52868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40f502e0"/>
        <function-ref name="test" scoped="" ref="0x40f51dd0"/>
        <function-ref name="get" scoped="" ref="0x40f52eb0"/>
        <function-ref name="setScale" scoped="" ref="0x40f50558"/>
        <function-ref name="getScale" scoped="" ref="0x40f507f8"/>
        <function-ref name="reset" scoped="" ref="0x40f51668"/>
        <function-ref name="overflow" scoped="" ref="0x40f513f0"/>
        <function-ref name="isOn" scoped="" ref="0x40f50068"/>
        <function-ref name="set" scoped="" ref="0x40f51150"/>
        <function-ref name="start" scoped="" ref="0x40f518e0"/>
        <function-ref name="stop" scoped="" ref="0x40f51b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409221a0" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409221a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40922378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40922458"/>
        <function-ref name="getControlA" scoped="" ref="0x40922538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40922618"/>
        <function-ref name="setControlB" scoped="" ref="0x409226f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409227d8"/>
        <function-ref name="getControlB" scoped="" ref="0x409228b8"/>
        <function-ref name="setControlA" scoped="" ref="0x40922998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40920858" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40920858"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40920a30"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40920b10"/>
        <function-ref name="controlABusy" scoped="" ref="0x40920bf0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40920cd0"/>
        <function-ref name="countBusy" scoped="" ref="0x40920db0"/>
        <function-ref name="compareABusy" scoped="" ref="0x40920e90"/>
        <function-ref name="getAssr" scoped="" ref="0x4091e010"/>
        <function-ref name="setAssr" scoped="" ref="0x4091e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40922cc0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40922cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40920288"/>
        <function-ref name="fired" scoped="" ref="0x40921830"/>
        <function-ref name="get" scoped="" ref="0x40921318"/>
        <function-ref name="reset" scoped="" ref="0x40921aa8"/>
        <function-ref name="isOn" scoped="" ref="0x40920500"/>
        <function-ref name="set" scoped="" ref="0x40921590"/>
        <function-ref name="start" scoped="" ref="0x40921d20"/>
        <function-ref name="stop" scoped="" ref="0x40920010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4090add8" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4090add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40923878"/>
        <function-ref name="test" scoped="" ref="0x40923388"/>
        <function-ref name="get" scoped="" ref="0x40925468"/>
        <function-ref name="setScale" scoped="" ref="0x40923af0"/>
        <function-ref name="getScale" scoped="" ref="0x40923d90"/>
        <function-ref name="reset" scoped="" ref="0x40925bf8"/>
        <function-ref name="overflow" scoped="" ref="0x40925980"/>
        <function-ref name="isOn" scoped="" ref="0x40923600"/>
        <function-ref name="set" scoped="" ref="0x409256e0"/>
        <function-ref name="start" scoped="" ref="0x40925e70"/>
        <function-ref name="stop" scoped="" ref="0x40923110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409191a0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409191a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40919378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40919458"/>
        <function-ref name="getControlA" scoped="" ref="0x40919538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40919618"/>
        <function-ref name="setControlB" scoped="" ref="0x409196f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409197d8"/>
        <function-ref name="getControlB" scoped="" ref="0x409198b8"/>
        <function-ref name="setControlA" scoped="" ref="0x40919998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x409347b8" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x409347b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40934990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40934c18" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40934c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40934df0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40934ed0"/>
        <function-ref name="controlABusy" scoped="" ref="0x40933010"/>
        <function-ref name="controlBBusy" scoped="" ref="0x409330f0"/>
        <function-ref name="countBusy" scoped="" ref="0x409331d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x409332b0"/>
        <function-ref name="getAssr" scoped="" ref="0x40933390"/>
        <function-ref name="setAssr" scoped="" ref="0x40933470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40919cc0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40919cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40934288"/>
        <function-ref name="fired" scoped="" ref="0x40918830"/>
        <function-ref name="get" scoped="" ref="0x40918318"/>
        <function-ref name="reset" scoped="" ref="0x40918aa8"/>
        <function-ref name="isOn" scoped="" ref="0x40934500"/>
        <function-ref name="set" scoped="" ref="0x40918590"/>
        <function-ref name="start" scoped="" ref="0x40918d20"/>
        <function-ref name="stop" scoped="" ref="0x40934010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4091ede8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4091ede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4091a878"/>
        <function-ref name="test" scoped="" ref="0x4091a388"/>
        <function-ref name="get" scoped="" ref="0x4091b468"/>
        <function-ref name="setScale" scoped="" ref="0x4091aaf0"/>
        <function-ref name="getScale" scoped="" ref="0x4091ad90"/>
        <function-ref name="reset" scoped="" ref="0x4091bbf8"/>
        <function-ref name="overflow" scoped="" ref="0x4091b980"/>
        <function-ref name="isOn" scoped="" ref="0x4091a600"/>
        <function-ref name="set" scoped="" ref="0x4091b6e0"/>
        <function-ref name="start" scoped="" ref="0x4091be70"/>
        <function-ref name="stop" scoped="" ref="0x4091a110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4097bbd0" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4097bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4097bda8"/>
        <function-ref name="runTask" scoped="" ref="0x4097be88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4097d248" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4097d248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4097b708"/>
        <function-ref name="fired" scoped="" ref="0x4097deb0"/>
        <function-ref name="startAt" scoped="" ref="0x4097b3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4097b150"/>
        <function-ref name="getAlarm" scoped="" ref="0x4097b980"/>
        <function-ref name="start" scoped="" ref="0x4097d998"/>
        <function-ref name="stop" scoped="" ref="0x4097dc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408ccf08" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408ccf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4097ea18"/>
        <function-ref name="fired" scoped="" ref="0x40957cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4097e3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4097e180"/>
        <function-ref name="getdt" scoped="" ref="0x4097eec8"/>
        <function-ref name="gett0" scoped="" ref="0x4097ec70"/>
        <function-ref name="isRunning" scoped="" ref="0x40957f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40957558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4097e6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x409577d8"/>
        <function-ref name="stop" scoped="" ref="0x40957a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x409ad560" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x409ad560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409ad738"/>
        <function-ref name="runTask" scoped="" ref="0x409ad818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40990338" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40990338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409aee38"/>
        <function-ref name="fired" scoped="" ref="0x409ae0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409ae7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x409ae5a0"/>
        <function-ref name="getdt" scoped="" ref="0x409ad310"/>
        <function-ref name="gett0" scoped="" ref="0x409ad0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x409ae348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40990960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409aeb18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40990be0"/>
        <function-ref name="stop" scoped="" ref="0x40990e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40979f00" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40979f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40991b40"/>
        <function-ref name="fired" scoped="" ref="0x40978ce0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409914e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40991278"/>
        <function-ref name="getdt" scoped="" ref="0x40990048"/>
        <function-ref name="gett0" scoped="" ref="0x40991da8"/>
        <function-ref name="isRunning" scoped="" ref="0x40991010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40978558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40991810"/>
        <function-ref name="startOneShot" scoped="" ref="0x409787e8"/>
        <function-ref name="stop" scoped="" ref="0x40978a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409aba88" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409aba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409a90f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x409a9448" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409a9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409a9b98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409a30a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409a9e10"/>
        <function-ref name="overflow" scoped="" ref="0x409a3320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x408bed10" loc="49:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x408bed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409be8a8"/>
        <function-ref name="fired" scoped="" ref="0x409bfaa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409be268"/>
        <function-ref name="isOneShot" scoped="" ref="0x409be010"/>
        <function-ref name="getdt" scoped="" ref="0x409bed58"/>
        <function-ref name="gett0" scoped="" ref="0x409beb00"/>
        <function-ref name="isRunning" scoped="" ref="0x409bfd00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409bf350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409be588"/>
        <function-ref name="startOneShot" scoped="" ref="0x409bf5d0"/>
        <function-ref name="stop" scoped="" ref="0x409bf850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409b53f0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409b53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409b55c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409b56a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409b5788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409b5868"/>
        <function-ref name="headerLength" scoped="" ref="0x409b5948"/>
        <function-ref name="metadataLength" scoped="" ref="0x409b5a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409b5bb8" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409b5bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409b5d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x409b5e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409b4010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409b40f0"/>
        <function-ref name="headerLength" scoped="" ref="0x409b41d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x409c2db8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x409c2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409b5010"/>
        <function-ref name="get" scoped="" ref="0x409b50f0"/>
        <function-ref name="setValue" scoped="" ref="0x409b51d0"/>
        <function-ref name="set" scoped="" ref="0x409b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409c1548" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409c1548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409c1720"/>
        <function-ref name="stopDone" scoped="" ref="0x409c1800"/>
        <function-ref name="start" scoped="" ref="0x409c18e0"/>
        <function-ref name="stop" scoped="" ref="0x409c19c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409de408" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409de408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409de5e0"/>
        <function-ref name="request" scoped="" ref="0x409de6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409dc9c8" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409dc9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409dcba0"/>
        <function-ref name="ready" scoped="" ref="0x409dcc80"/>
        <function-ref name="sendDone" scoped="" ref="0x409dcd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409dcec0" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409dcec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409db0c0"/>
        <function-ref name="header" scoped="" ref="0x409db1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409c0328" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409c0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409c0500"/>
        <function-ref name="turnOn" scoped="" ref="0x409c05e0"/>
        <function-ref name="setChannel" scoped="" ref="0x409c06c0"/>
        <function-ref name="done" scoped="" ref="0x409c07a0"/>
        <function-ref name="standby" scoped="" ref="0x409c0880"/>
        <function-ref name="getChannel" scoped="" ref="0x409c0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409de800" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409de800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409de9d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409deab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409deb98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409dec78"/>
        <function-ref name="headerLength" scoped="" ref="0x409ded58"/>
        <function-ref name="metadataLength" scoped="" ref="0x409dee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409dc1b0" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409dc1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409dc408"/>
        <function-ref name="turnOn" scoped="" ref="0x409dc4e8"/>
        <function-ref name="setChannel" scoped="" ref="0x409dc5c8"/>
        <function-ref name="done" scoped="" ref="0x409dc6a8"/>
        <function-ref name="standby" scoped="" ref="0x409dc788"/>
        <function-ref name="getChannel" scoped="" ref="0x409dc868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409dd010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409dd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409de010" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409de1e8"/>
        <function-ref name="header" scoped="" ref="0x409de2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x409dde48" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x409dde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409dc050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409dd378" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409dd378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409dd550"/>
        <function-ref name="stopDone" scoped="" ref="0x409dd630"/>
        <function-ref name="start" scoped="" ref="0x409dd710"/>
        <function-ref name="stop" scoped="" ref="0x409dd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409db718" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409db718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409db8f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409db9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409dbab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409dbb90"/>
        <function-ref name="headerLength" scoped="" ref="0x409dbc70"/>
        <function-ref name="metadataLength" scoped="" ref="0x409dbd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409c0010" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c01e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409dbeb0" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409dbeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409da0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x409dd950" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x409dd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409ddb28"/>
        <function-ref name="cancel" scoped="" ref="0x409ddc08"/>
        <function-ref name="sendDone" scoped="" ref="0x409ddce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409c0aa0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409c0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c0c78"/>
        <function-ref name="ready" scoped="" ref="0x409c0d58"/>
        <function-ref name="sendDone" scoped="" ref="0x409c0e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409db300" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409db300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409db4d8"/>
        <function-ref name="request" scoped="" ref="0x409db5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409c1b00" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409c1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c1cd8"/>
        <function-ref name="cancel" scoped="" ref="0x409c1db8"/>
        <function-ref name="sendDone" scoped="" ref="0x409c1e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409d5a68" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409d5a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409d5c40"/>
        <function-ref name="request" scoped="" ref="0x409d5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x409d2bf8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409d2bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d17f8"/>
        <function-ref name="get" scoped="" ref="0x409d1538"/>
        <function-ref name="isSet" scoped="" ref="0x409d1278"/>
        <function-ref name="set" scoped="" ref="0x409d1ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x409e6a08" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x409e6a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e6be0"/>
        <function-ref name="get" scoped="" ref="0x409e6cc0"/>
        <function-ref name="setValue" scoped="" ref="0x409e6da0"/>
        <function-ref name="set" scoped="" ref="0x409e6e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409e9ad8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409e9ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409e86b8"/>
        <function-ref name="clear" scoped="" ref="0x409e8a68"/>
        <function-ref name="isValid" scoped="" ref="0x409e8308"/>
        <function-ref name="set" scoped="" ref="0x409e8e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409d88a8" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409d88a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409d8a80"/>
        <function-ref name="turnOn" scoped="" ref="0x409d8b60"/>
        <function-ref name="setChannel" scoped="" ref="0x409d8c40"/>
        <function-ref name="done" scoped="" ref="0x409d8d20"/>
        <function-ref name="standby" scoped="" ref="0x409d8e00"/>
        <function-ref name="getChannel" scoped="" ref="0x409d8ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409e5700" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409e5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409e58d8"/>
        <function-ref name="wait" scoped="" ref="0x409e59b8"/>
        <function-ref name="cancel" scoped="" ref="0x409e5a98"/>
        <function-ref name="isFree" scoped="" ref="0x409e5b78"/>
        <function-ref name="getNow" scoped="" ref="0x409e5c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409d4888" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409d4888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d2470"/>
        <function-ref name="get" scoped="" ref="0x409d21b0"/>
        <function-ref name="isSet" scoped="" ref="0x409d4ed0"/>
        <function-ref name="set" scoped="" ref="0x409d2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409d5ed0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409d5ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d40c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409d41a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409d4280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409d4360"/>
        <function-ref name="headerLength" scoped="" ref="0x409d4440"/>
        <function-ref name="metadataLength" scoped="" ref="0x409d4520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409e9170" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409e9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409e93c8"/>
        <function-ref name="headerLength" scoped="" ref="0x409e94a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409e9588"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x409e9668"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409e9748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409d5618" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409d5618"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409d57f0"/>
        <function-ref name="header" scoped="" ref="0x409d58d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409eb618" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409eb618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40518ce8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409eaaf0"/>
        <function-ref name="fired" scoped="" ref="0x409ea2c0"/>
        <function-ref name="startAt" scoped="" ref="0x409ea7b0"/>
        <function-ref name="isRunning" scoped="" ref="0x409ea538"/>
        <function-ref name="getAlarm" scoped="" ref="0x409ead68"/>
        <function-ref name="start" scoped="" ref="0x409ebd68"/>
        <function-ref name="stop" scoped="" ref="0x409ea048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x409ef010" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409ef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409efbd8"/>
        <function-ref name="get" scoped="" ref="0x409ef918"/>
        <function-ref name="isSet" scoped="" ref="0x409ef658"/>
        <function-ref name="set" scoped="" ref="0x409efe98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x409edb78" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409edb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409eb200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409d50c0" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409d50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409d5298"/>
        <function-ref name="ready" scoped="" ref="0x409d5378"/>
        <function-ref name="sendDone" scoped="" ref="0x409d5458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x409ee3d8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x409ee3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ed010"/>
        <function-ref name="get" scoped="" ref="0x409eece0"/>
        <function-ref name="isSet" scoped="" ref="0x409eea20"/>
        <function-ref name="set" scoped="" ref="0x409ed2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x409e50e0" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x409e50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e52b8"/>
        <function-ref name="get" scoped="" ref="0x409e5398"/>
        <function-ref name="setValue" scoped="" ref="0x409e5478"/>
        <function-ref name="set" scoped="" ref="0x409e5558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x409e6370" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409e6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e6548"/>
        <function-ref name="get" scoped="" ref="0x409e6628"/>
        <function-ref name="setValue" scoped="" ref="0x409e6708"/>
        <function-ref name="set" scoped="" ref="0x409e67e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x409ed680" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409ed680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x409ed858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409fe628" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409fe628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409fe800"/>
        <function-ref name="request" scoped="" ref="0x409fe8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a0c260" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a0c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a0c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x409fc7d0" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409fc7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fb3b8"/>
        <function-ref name="get" scoped="" ref="0x409fb0f8"/>
        <function-ref name="isSet" scoped="" ref="0x409fce18"/>
        <function-ref name="set" scoped="" ref="0x409fb678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a0d510" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a0d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0d6e8"/>
        <function-ref name="get" scoped="" ref="0x40a0d7c8"/>
        <function-ref name="setValue" scoped="" ref="0x40a0d8a8"/>
        <function-ref name="set" scoped="" ref="0x40a0d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x409e0118" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x409e0118"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409e02f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a0b480" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a0b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a0a0a8"/>
        <function-ref name="clear" scoped="" ref="0x40a0a458"/>
        <function-ref name="isValid" scoped="" ref="0x40a0bcd0"/>
        <function-ref name="set" scoped="" ref="0x40a0a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x409f4820" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x409f4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409f49f8"/>
        <function-ref name="isInput" scoped="" ref="0x409f4ad8"/>
        <function-ref name="toggle" scoped="" ref="0x409f4bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x409f4c98"/>
        <function-ref name="get" scoped="" ref="0x409f4d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f4e58"/>
        <function-ref name="set" scoped="" ref="0x409f3010"/>
        <function-ref name="clr" scoped="" ref="0x409f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a08298" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a08298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a08470"/>
        <function-ref name="wait" scoped="" ref="0x40a08550"/>
        <function-ref name="cancel" scoped="" ref="0x40a08630"/>
        <function-ref name="isFree" scoped="" ref="0x40a08710"/>
        <function-ref name="getNow" scoped="" ref="0x40a087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409e0498" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409e0498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409e0670"/>
        <function-ref name="turnOn" scoped="" ref="0x409e0750"/>
        <function-ref name="setChannel" scoped="" ref="0x409e0830"/>
        <function-ref name="done" scoped="" ref="0x409e0910"/>
        <function-ref name="standby" scoped="" ref="0x409e09f0"/>
        <function-ref name="getChannel" scoped="" ref="0x409e0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40a0cd18" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a0cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a10370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409fd458" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409fd458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fc048"/>
        <function-ref name="get" scoped="" ref="0x409fdd60"/>
        <function-ref name="isSet" scoped="" ref="0x409fdaa0"/>
        <function-ref name="set" scoped="" ref="0x409fc308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409fea90" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409fea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fec68"/>
        <function-ref name="payloadLength" scoped="" ref="0x409fed48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fee28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409fef08"/>
        <function-ref name="headerLength" scoped="" ref="0x409fd010"/>
        <function-ref name="metadataLength" scoped="" ref="0x409fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x409f1d70" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409f1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409f4010"/>
        <function-ref name="isInput" scoped="" ref="0x409f40f0"/>
        <function-ref name="toggle" scoped="" ref="0x409f41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409f42b0"/>
        <function-ref name="get" scoped="" ref="0x409f4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f4470"/>
        <function-ref name="set" scoped="" ref="0x409f4550"/>
        <function-ref name="clr" scoped="" ref="0x409f4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a10690" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a10690"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a10868"/>
        <function-ref name="headerLength" scoped="" ref="0x40a10948"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a10a28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a10b08"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a10be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409fe1d8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409fe1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fe3b0"/>
        <function-ref name="header" scoped="" ref="0x409fe490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40a5fdd0" loc="847:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40a5fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a5e010"/>
        <function-ref name="runTask" scoped="" ref="0x40a5e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x409fbba8" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409fbba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f9790"/>
        <function-ref name="get" scoped="" ref="0x409f94d0"/>
        <function-ref name="isSet" scoped="" ref="0x409f9210"/>
        <function-ref name="set" scoped="" ref="0x409f9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x409e1aa0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x409e1aa0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409e1c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409f5148" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409f5148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409f5320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409f5400"/>
        <function-ref name="request" scoped="" ref="0x409f54e0"/>
        <function-ref name="granted" scoped="" ref="0x409f55c0"/>
        <function-ref name="isOwner" scoped="" ref="0x409f56a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x409f6690" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409f6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409f68e8"/>
        <function-ref name="isInput" scoped="" ref="0x409f69c8"/>
        <function-ref name="toggle" scoped="" ref="0x409f6aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x409f6b88"/>
        <function-ref name="get" scoped="" ref="0x409f6c68"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f6d48"/>
        <function-ref name="set" scoped="" ref="0x409f6e28"/>
        <function-ref name="clr" scoped="" ref="0x409f6f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x409f8010" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x409f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f8bd8"/>
        <function-ref name="get" scoped="" ref="0x409f8918"/>
        <function-ref name="isSet" scoped="" ref="0x409f8658"/>
        <function-ref name="set" scoped="" ref="0x409f8e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409e0c70" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409e0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e0e48"/>
        <function-ref name="ready" scoped="" ref="0x409e0f28"/>
        <function-ref name="sendDone" scoped="" ref="0x409fe018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40a0f9e0" loc="72:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a0f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a0fbb8"/>
        <function-ref name="disable" scoped="" ref="0x40a0fc98"/>
        <function-ref name="captured" scoped="" ref="0x40a0fd78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a0fe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x409f16f8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x409f16f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x409f18d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x409f19b0"/>
        <function-ref name="splitRead" scoped="" ref="0x409f1a90"/>
        <function-ref name="write" scoped="" ref="0x409f1b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a0dbd0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a0dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0dda8"/>
        <function-ref name="get" scoped="" ref="0x40a0de88"/>
        <function-ref name="setValue" scoped="" ref="0x40a0b010"/>
        <function-ref name="set" scoped="" ref="0x40a0b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a10e60" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a10e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0d050"/>
        <function-ref name="get" scoped="" ref="0x40a0d130"/>
        <function-ref name="setValue" scoped="" ref="0x40a0d210"/>
        <function-ref name="set" scoped="" ref="0x40a0d2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x409f6278" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409f6278"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x409f6450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a0ac48" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a0ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a0ae20"/>
        <function-ref name="suspend" scoped="" ref="0x40a0af00"/>
        <function-ref name="resume" scoped="" ref="0x40a08010"/>
        <function-ref name="run" scoped="" ref="0x40a080f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40a7b090" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a7b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7b268"/>
        <function-ref name="isInput" scoped="" ref="0x40a7b348"/>
        <function-ref name="toggle" scoped="" ref="0x40a7b428"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7b508"/>
        <function-ref name="get" scoped="" ref="0x40a7b5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7b6c8"/>
        <function-ref name="set" scoped="" ref="0x40a7b7a8"/>
        <function-ref name="clr" scoped="" ref="0x40a7b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40a7c688" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a7c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7c860"/>
        <function-ref name="isInput" scoped="" ref="0x40a7c940"/>
        <function-ref name="toggle" scoped="" ref="0x40a7ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7cb00"/>
        <function-ref name="get" scoped="" ref="0x40a7cbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7ccc0"/>
        <function-ref name="set" scoped="" ref="0x40a7cda0"/>
        <function-ref name="clr" scoped="" ref="0x40a7ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a7a2a8" loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a7a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a79758"/>
        <function-ref name="fired" scoped="" ref="0x40a7af10"/>
        <function-ref name="startAt" scoped="" ref="0x40a79418"/>
        <function-ref name="isRunning" scoped="" ref="0x40a791a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a799d0"/>
        <function-ref name="start" scoped="" ref="0x40a7a9f8"/>
        <function-ref name="stop" scoped="" ref="0x40a7ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40a7d858" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a7d858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a7da30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a7db10"/>
        <function-ref name="request" scoped="" ref="0x40a7dbf0"/>
        <function-ref name="granted" scoped="" ref="0x40a7dcd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a7ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40a80d90" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a80d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7d010"/>
        <function-ref name="isInput" scoped="" ref="0x40a7d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a7d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7d2b0"/>
        <function-ref name="get" scoped="" ref="0x40a7d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7d470"/>
        <function-ref name="set" scoped="" ref="0x40a7d550"/>
        <function-ref name="clr" scoped="" ref="0x40a7d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a7ba78" loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a7ba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a7bc50"/>
        <function-ref name="disable" scoped="" ref="0x40a7bd30"/>
        <function-ref name="captured" scoped="" ref="0x40a7be10"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a7bef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a7c010" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a7c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a7c1e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a7c2c8"/>
        <function-ref name="splitRead" scoped="" ref="0x40a7c3a8"/>
        <function-ref name="write" scoped="" ref="0x40a7c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a79dc0" loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a79dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x40518a40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a77428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40a95810" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40a95810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a959e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a95ac8"/>
        <function-ref name="toggle" scoped="" ref="0x40a95ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a95c88"/>
        <function-ref name="get" scoped="" ref="0x40a95d68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a95e48"/>
        <function-ref name="set" scoped="" ref="0x40a95f28"/>
        <function-ref name="clr" scoped="" ref="0x40a90018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40a91998" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a91998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a95500"/>
        <function-ref name="test" scoped="" ref="0x40a95010"/>
        <function-ref name="get" scoped="" ref="0x40a96010"/>
        <function-ref name="captured" scoped="" ref="0x40a96528"/>
        <function-ref name="reset" scoped="" ref="0x40a967c8"/>
        <function-ref name="isOn" scoped="" ref="0x40a95288"/>
        <function-ref name="set" scoped="" ref="0x40a96288"/>
        <function-ref name="start" scoped="" ref="0x40a96a40"/>
        <function-ref name="stop" scoped="" ref="0x40a96cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40a90220" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40a90220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a903f8"/>
        <function-ref name="isInput" scoped="" ref="0x40a904d8"/>
        <function-ref name="toggle" scoped="" ref="0x40a905b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a90698"/>
        <function-ref name="get" scoped="" ref="0x40a90778"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a90858"/>
        <function-ref name="set" scoped="" ref="0x40a90938"/>
        <function-ref name="clr" scoped="" ref="0x40a90a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a97300" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a97300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a974d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a77ba8" loc="39:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a77ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a77d80"/>
        <function-ref name="disable" scoped="" ref="0x40a77e60"/>
        <function-ref name="captured" scoped="" ref="0x40a97010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40aa3800" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40aa3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aa39d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40aa3ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40aabde8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40aabde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40aaa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40aab178" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40aab178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aab350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40aaa1e0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40aaa1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40aaa3b8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40aaa498"/>
        <function-ref name="splitRead" scoped="" ref="0x40aaa578"/>
        <function-ref name="write" scoped="" ref="0x40aaa658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aa9010" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aa9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aa91e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aa92c8"/>
        <function-ref name="request" scoped="" ref="0x40aa93a8"/>
        <function-ref name="granted" scoped="" ref="0x40aa9488"/>
        <function-ref name="isOwner" scoped="" ref="0x40aa9568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40ac3860" loc="296:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40ac3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ac3a38"/>
        <function-ref name="runTask" scoped="" ref="0x40ac3b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40aa1e68" loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40aa1e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aa0050"/>
        <function-ref name="sendDone" scoped="" ref="0x40aa0130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a9e3d8" loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a9e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a9e5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a9e690"/>
        <function-ref name="request" scoped="" ref="0x40a9e770"/>
        <function-ref name="granted" scoped="" ref="0x40a9e850"/>
        <function-ref name="isOwner" scoped="" ref="0x40a9e930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40aa14c8" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40aa14c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40aa16a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40aa1168" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40aa1168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aa1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40ab3780" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40ab3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40ab3958"/>
        <function-ref name="sleep" scoped="" ref="0x40a9fdb0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40ab3b18"/>
        <function-ref name="dataReady" scoped="" ref="0x40a9fe90"/>
        <function-ref name="initMaster" scoped="" ref="0x40ab3cd8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40ab3db8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40ab3e98"/>
        <function-ref name="read" scoped="" ref="0x40a9f010"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a9f0f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a9f1d0"/>
        <function-ref name="setClock" scoped="" ref="0x40a9f2b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a9f390"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a9f470"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a9f5d0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a9f6b0"/>
        <function-ref name="write" scoped="" ref="0x40a9f790"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a9f870"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a9f950"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a9fa30"/>
        <function-ref name="getClock" scoped="" ref="0x40a9fb10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a9fbf0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40ab3a38"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40ab3bf8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a9fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40aa1850" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40aa1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40aa1a28"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40aa1b08"/>
        <function-ref name="splitRead" scoped="" ref="0x40aa1be8"/>
        <function-ref name="write" scoped="" ref="0x40aa1cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aa05a8" loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aa05a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aa0780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aa0860"/>
        <function-ref name="request" scoped="" ref="0x40aa0940"/>
        <function-ref name="granted" scoped="" ref="0x40aa0a20"/>
        <function-ref name="isOwner" scoped="" ref="0x40aa0b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a9eae0" loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a9eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a9ecb8"/>
        <function-ref name="userId" scoped="" ref="0x40a9ed98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40ab1010" loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40ab1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40ab11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40aa23d0" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40aa23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40aa25a8"/>
        <function-ref name="sleep" scoped="" ref="0x40af1a30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40aa2768"/>
        <function-ref name="dataReady" scoped="" ref="0x40af1b10"/>
        <function-ref name="initMaster" scoped="" ref="0x40aa2928"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40aa2a08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40aa2ae8"/>
        <function-ref name="read" scoped="" ref="0x40aa2bc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40aa2ca8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40aa2d88"/>
        <function-ref name="setClock" scoped="" ref="0x40aa2e68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40af1010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40af10f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40af1250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40af1330"/>
        <function-ref name="write" scoped="" ref="0x40af1410"/>
        <function-ref name="enableSpi" scoped="" ref="0x40af14f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40af15d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40af16b0"/>
        <function-ref name="getClock" scoped="" ref="0x40af1790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40af1870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40aa2688"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40aa2848"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40af1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40aea4a0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40aea4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aea678"/>
        <function-ref name="isInput" scoped="" ref="0x40aea758"/>
        <function-ref name="toggle" scoped="" ref="0x40aea838"/>
        <function-ref name="isOutput" scoped="" ref="0x40aea918"/>
        <function-ref name="get" scoped="" ref="0x40aea9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aeaad8"/>
        <function-ref name="set" scoped="" ref="0x40aeabb8"/>
        <function-ref name="clr" scoped="" ref="0x40aeac98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40aeb050" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40aeb050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aeb228"/>
        <function-ref name="isInput" scoped="" ref="0x40aeb308"/>
        <function-ref name="toggle" scoped="" ref="0x40aeb3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40aeb4c8"/>
        <function-ref name="get" scoped="" ref="0x40aeb5a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aeb688"/>
        <function-ref name="set" scoped="" ref="0x40aeb768"/>
        <function-ref name="clr" scoped="" ref="0x40aeb848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40ae9658" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40ae9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae9830"/>
        <function-ref name="isInput" scoped="" ref="0x40ae9910"/>
        <function-ref name="toggle" scoped="" ref="0x40ae99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ae9ad0"/>
        <function-ref name="get" scoped="" ref="0x40ae9bb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ae9c90"/>
        <function-ref name="set" scoped="" ref="0x40ae9d70"/>
        <function-ref name="clr" scoped="" ref="0x40ae9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40ae9198" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40ae9198"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ae9370"/>
        <function-ref name="stop" scoped="" ref="0x40ae9450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40aeaea0" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40aeaea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40ae80c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40af07e0" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40af07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40af09b8"/>
        <function-ref name="sleep" scoped="" ref="0x40aeddb0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40af0b78"/>
        <function-ref name="dataReady" scoped="" ref="0x40aede90"/>
        <function-ref name="initMaster" scoped="" ref="0x40af0d38"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40af0e18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40af0ef8"/>
        <function-ref name="read" scoped="" ref="0x40aed010"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40aed0f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40aed1d0"/>
        <function-ref name="setClock" scoped="" ref="0x40aed2b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40aed390"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40aed470"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40aed5d0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40aed6b0"/>
        <function-ref name="write" scoped="" ref="0x40aed790"/>
        <function-ref name="enableSpi" scoped="" ref="0x40aed870"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40aed950"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40aeda30"/>
        <function-ref name="getClock" scoped="" ref="0x40aedb10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40aedbf0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40af0a98"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40af0c58"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40aedcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40aeba38" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40aeba38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aebc10"/>
        <function-ref name="isInput" scoped="" ref="0x40aebcf0"/>
        <function-ref name="toggle" scoped="" ref="0x40aebdd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40aebeb0"/>
        <function-ref name="get" scoped="" ref="0x40aea010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aea0f0"/>
        <function-ref name="set" scoped="" ref="0x40aea1d0"/>
        <function-ref name="clr" scoped="" ref="0x40aea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b0a1e8" loc="86:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b0a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b0a3d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b0a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b0aaa0" loc="89:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b0aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b0ac88"/>
        <function-ref name="configure" scoped="" ref="0x40b0ad68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b0ba40" loc="85:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b0ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b0bc28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b0bd08"/>
        <function-ref name="request" scoped="" ref="0x40b0bde8"/>
        <function-ref name="granted" scoped="" ref="0x40b0bec8"/>
        <function-ref name="isOwner" scoped="" ref="0x40b0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b0a5f0" loc="87:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b0a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b0a7c8"/>
        <function-ref name="userId" scoped="" ref="0x40b0a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fa62e8" loc="44:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fa62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fa64c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40fa6620" loc="45:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40fa6620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40fa67f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40fa68d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40fa69b8"/>
        <function-ref name="dequeue" scoped="" ref="0x40fa6a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40fa5d70" loc="52:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40fa5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40fa3010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fa30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40fa36f0" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40fa36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40fa38d8"/>
        <function-ref name="configure" scoped="" ref="0x40fa39b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40fa3b18" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40fa3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40fa3cf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40fa3dd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40fa3eb0"/>
        <function-ref name="dequeue" scoped="" ref="0x40fa2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fa5630" loc="51:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fa5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fa5818"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fa58f8"/>
        <function-ref name="request" scoped="" ref="0x40fa59d8"/>
        <function-ref name="granted" scoped="" ref="0x40fa5ab8"/>
        <function-ref name="isOwner" scoped="" ref="0x40fa5b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40fa3230" loc="53:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40fa3230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40fa3408"/>
        <function-ref name="userId" scoped="" ref="0x40fa34e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40fa2190" loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40fa2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fa2368"/>
        <function-ref name="runTask" scoped="" ref="0x40fa2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b209d0" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b209d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b20ba8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b20c88"/>
        <function-ref name="getControlA" scoped="" ref="0x40b20d68"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b20e48"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b20f28"/>
        <function-ref name="setControlB" scoped="" ref="0x40b25018"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b250f8"/>
        <function-ref name="getControlB" scoped="" ref="0x40b251d8"/>
        <function-ref name="setControlC" scoped="" ref="0x40b252b8"/>
        <function-ref name="setControlA" scoped="" ref="0x40b25398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b256d0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b256d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b1f288"/>
        <function-ref name="test" scoped="" ref="0x40b24cb8"/>
        <function-ref name="get" scoped="" ref="0x40b25d18"/>
        <function-ref name="captured" scoped="" ref="0x40b242b0"/>
        <function-ref name="reset" scoped="" ref="0x40b24550"/>
        <function-ref name="isOn" scoped="" ref="0x40b1f010"/>
        <function-ref name="set" scoped="" ref="0x40b24010"/>
        <function-ref name="start" scoped="" ref="0x40b247c8"/>
        <function-ref name="stop" scoped="" ref="0x40b24a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b1f998" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b1f998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b1df08"/>
        <function-ref name="fired" scoped="" ref="0x40b1d528"/>
        <function-ref name="get" scoped="" ref="0x40b1d010"/>
        <function-ref name="reset" scoped="" ref="0x40b1d7a0"/>
        <function-ref name="isOn" scoped="" ref="0x40b1c1a0"/>
        <function-ref name="set" scoped="" ref="0x40b1d288"/>
        <function-ref name="start" scoped="" ref="0x40b1da18"/>
        <function-ref name="stop" scoped="" ref="0x40b1dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b29098" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b29098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b27af0"/>
        <function-ref name="test" scoped="" ref="0x40b27600"/>
        <function-ref name="get" scoped="" ref="0x40b296e0"/>
        <function-ref name="setScale" scoped="" ref="0x40b27d68"/>
        <function-ref name="getScale" scoped="" ref="0x40b26048"/>
        <function-ref name="reset" scoped="" ref="0x40b29e70"/>
        <function-ref name="overflow" scoped="" ref="0x40b29bf8"/>
        <function-ref name="isOn" scoped="" ref="0x40b27878"/>
        <function-ref name="set" scoped="" ref="0x40b29958"/>
        <function-ref name="start" scoped="" ref="0x40b27110"/>
        <function-ref name="stop" scoped="" ref="0x40b27388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b3c1b0" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b3c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b3c388"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b3c468"/>
        <function-ref name="getControlA" scoped="" ref="0x40b3c548"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b3c628"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b3c708"/>
        <function-ref name="setControlB" scoped="" ref="0x40b3c7e8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b3c8c8"/>
        <function-ref name="getControlB" scoped="" ref="0x40b3c9a8"/>
        <function-ref name="setControlC" scoped="" ref="0x40b3ca88"/>
        <function-ref name="setControlA" scoped="" ref="0x40b3cb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b3ad58" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b3ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b37300"/>
        <function-ref name="fired" scoped="" ref="0x40b388f8"/>
        <function-ref name="get" scoped="" ref="0x40b383e0"/>
        <function-ref name="reset" scoped="" ref="0x40b38b70"/>
        <function-ref name="isOn" scoped="" ref="0x40b37578"/>
        <function-ref name="set" scoped="" ref="0x40b38658"/>
        <function-ref name="start" scoped="" ref="0x40b38de8"/>
        <function-ref name="stop" scoped="" ref="0x40b37088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b3cea0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b3cea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b3a918"/>
        <function-ref name="test" scoped="" ref="0x40b3a428"/>
        <function-ref name="get" scoped="" ref="0x40b3b4f8"/>
        <function-ref name="captured" scoped="" ref="0x40b3ba10"/>
        <function-ref name="reset" scoped="" ref="0x40b3bcb0"/>
        <function-ref name="isOn" scoped="" ref="0x40b3a6a0"/>
        <function-ref name="set" scoped="" ref="0x40b3b770"/>
        <function-ref name="start" scoped="" ref="0x40b3bf28"/>
        <function-ref name="stop" scoped="" ref="0x40b3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b37990" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b37990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b36f08"/>
        <function-ref name="fired" scoped="" ref="0x40b36528"/>
        <function-ref name="get" scoped="" ref="0x40b36010"/>
        <function-ref name="reset" scoped="" ref="0x40b367a0"/>
        <function-ref name="isOn" scoped="" ref="0x40b341a0"/>
        <function-ref name="set" scoped="" ref="0x40b36288"/>
        <function-ref name="start" scoped="" ref="0x40b36a18"/>
        <function-ref name="stop" scoped="" ref="0x40b36c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b345b8" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b345b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b33b10"/>
        <function-ref name="fired" scoped="" ref="0x40b33130"/>
        <function-ref name="get" scoped="" ref="0x40b34c00"/>
        <function-ref name="reset" scoped="" ref="0x40b333a8"/>
        <function-ref name="isOn" scoped="" ref="0x40b33d88"/>
        <function-ref name="set" scoped="" ref="0x40b34e78"/>
        <function-ref name="start" scoped="" ref="0x40b33620"/>
        <function-ref name="stop" scoped="" ref="0x40b33898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b1ce40" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b1ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b3d8d8"/>
        <function-ref name="test" scoped="" ref="0x40b3d3e8"/>
        <function-ref name="get" scoped="" ref="0x40b194d8"/>
        <function-ref name="setScale" scoped="" ref="0x40b3db50"/>
        <function-ref name="getScale" scoped="" ref="0x40b3ddf0"/>
        <function-ref name="reset" scoped="" ref="0x40b19c68"/>
        <function-ref name="overflow" scoped="" ref="0x40b199f0"/>
        <function-ref name="isOn" scoped="" ref="0x40b3d660"/>
        <function-ref name="set" scoped="" ref="0x40b19750"/>
        <function-ref name="start" scoped="" ref="0x40b19ee0"/>
        <function-ref name="stop" scoped="" ref="0x40b3d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b89960" loc="30:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b89960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40baae20"/>
        <function-ref name="fired" scoped="" ref="0x40baa5f0"/>
        <function-ref name="startAt" scoped="" ref="0x40baaae0"/>
        <function-ref name="isRunning" scoped="" ref="0x40baa868"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ba90b8"/>
        <function-ref name="start" scoped="" ref="0x40baa0d8"/>
        <function-ref name="stop" scoped="" ref="0x40baa378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b822b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b822b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034f5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034f5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b82488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b82698" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b82698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b791a0"/>
        <function-ref name="test" scoped="" ref="0x40b81c90"/>
        <function-ref name="get" scoped="" ref="0x40b82ce0"/>
        <function-ref name="setScale" scoped="" ref="0x40b79418"/>
        <function-ref name="getScale" scoped="" ref="0x40b796b8"/>
        <function-ref name="reset" scoped="" ref="0x40b81528"/>
        <function-ref name="overflow" scoped="" ref="0x40b812b0"/>
        <function-ref name="isOn" scoped="" ref="0x40b81f08"/>
        <function-ref name="set" scoped="" ref="0x40b81010"/>
        <function-ref name="start" scoped="" ref="0x40b817a0"/>
        <function-ref name="stop" scoped="" ref="0x40b81a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40fcdac0" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40fcdac0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4034f3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4034f3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fcb010"/>
        <function-ref name="fired" scoped="" ref="0x40fcc740"/>
        <function-ref name="startAt" scoped="" ref="0x40fccc30"/>
        <function-ref name="isRunning" scoped="" ref="0x40fcc9b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40fcb288"/>
        <function-ref name="start" scoped="" ref="0x40fcc228"/>
        <function-ref name="stop" scoped="" ref="0x40fcc4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x40fc87e8" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x40fc87e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40fc7d58"/>
        <function-ref name="fired" scoped="" ref="0x40fc7378"/>
        <function-ref name="get" scoped="" ref="0x40fc8e30"/>
        <function-ref name="reset" scoped="" ref="0x40fc75f0"/>
        <function-ref name="isOn" scoped="" ref="0x40fc6010"/>
        <function-ref name="set" scoped="" ref="0x40fc70d8"/>
        <function-ref name="start" scoped="" ref="0x40fc7868"/>
        <function-ref name="stop" scoped="" ref="0x40fc7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x40fcb548" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x40fcb548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40fc8010"/>
        <function-ref name="test" scoped="" ref="0x40fcaab8"/>
        <function-ref name="get" scoped="" ref="0x40fcbb90"/>
        <function-ref name="setScale" scoped="" ref="0x40fc8288"/>
        <function-ref name="getScale" scoped="" ref="0x40fc8528"/>
        <function-ref name="reset" scoped="" ref="0x40fca350"/>
        <function-ref name="overflow" scoped="" ref="0x40fca0d8"/>
        <function-ref name="isOn" scoped="" ref="0x40fcad30"/>
        <function-ref name="set" scoped="" ref="0x40fcbe08"/>
        <function-ref name="start" scoped="" ref="0x40fca5c8"/>
        <function-ref name="stop" scoped="" ref="0x40fca840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ba6268" loc="39:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ba6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ba68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ba33a0" loc="24:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ba33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ba3af0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ba1010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ba3d68"/>
        <function-ref name="overflow" scoped="" ref="0x40ba1288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ba0b30" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ba0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b9f308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b9f7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b9f580"/>
        <function-ref name="overflow" scoped="" ref="0x40b9fa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b9fd50" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b9fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bbb7f0"/>
        <function-ref name="test" scoped="" ref="0x40bbb300"/>
        <function-ref name="get" scoped="" ref="0x40bbc3e0"/>
        <function-ref name="setScale" scoped="" ref="0x40bbba68"/>
        <function-ref name="getScale" scoped="" ref="0x40bbbd08"/>
        <function-ref name="reset" scoped="" ref="0x40bbcb70"/>
        <function-ref name="overflow" scoped="" ref="0x40bbc8f8"/>
        <function-ref name="isOn" scoped="" ref="0x40bbb578"/>
        <function-ref name="set" scoped="" ref="0x40bbc658"/>
        <function-ref name="start" scoped="" ref="0x40bbcde8"/>
        <function-ref name="stop" scoped="" ref="0x40bbb088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40bd00e0" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40bd00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bd0830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bd0d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bd0aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40bcf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ba4e60" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ba4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb95e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bb9ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bb9858"/>
        <function-ref name="overflow" scoped="" ref="0x40bb9d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bcff18" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bcff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bce578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40bce8c8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bce8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bcc048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bcc538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bcc2c0"/>
        <function-ref name="overflow" scoped="" ref="0x40bcc7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40bc8010" loc="36:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40bc8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40bc8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c18938" loc="49:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c18938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c18b10"/>
        <function-ref name="getPayload" scoped="" ref="0x40c18bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c18cd0"/>
        <function-ref name="cancel" scoped="" ref="0x40c18db0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c18e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c17010" loc="50:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c17010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c171e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c172c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c173a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c17488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c17568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c176a8" loc="51:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c176a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c17880"/>
        <function-ref name="source" scoped="" ref="0x40c17960"/>
        <function-ref name="address" scoped="" ref="0x40c17a40"/>
        <function-ref name="destination" scoped="" ref="0x40c17b20"/>
        <function-ref name="setSource" scoped="" ref="0x40c17c00"/>
        <function-ref name="setDestination" scoped="" ref="0x40c17ce0"/>
        <function-ref name="type" scoped="" ref="0x40c17dc0"/>
        <function-ref name="setType" scoped="" ref="0x40c17ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x40c44010"/>
        <function-ref name="setGroup" scoped="" ref="0x40c440f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40c441d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40c44330" loc="52:/home/u3f/tinyos-2_1_2/tos/system/AMSenderC.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40c44330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c44508"/>
        <function-ref name="noAck" scoped="" ref="0x40c445e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c446c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fe8c60" loc="49:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fe8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fe8e38"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe8f18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe4010"/>
        <function-ref name="cancel" scoped="" ref="0x40fe40f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40fe41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fe4310" loc="50:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fe4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fe44e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fe45c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe46a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe4788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fe4868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fe49a8" loc="51:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fe49a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fe4b80"/>
        <function-ref name="source" scoped="" ref="0x40fe4c60"/>
        <function-ref name="address" scoped="" ref="0x40fe4d40"/>
        <function-ref name="destination" scoped="" ref="0x40fe4e20"/>
        <function-ref name="setSource" scoped="" ref="0x40fe4f00"/>
        <function-ref name="setDestination" scoped="" ref="0x40fe3010"/>
        <function-ref name="type" scoped="" ref="0x40fe30f0"/>
        <function-ref name="setType" scoped="" ref="0x40fe31d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fe32b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40fe3390"/>
        <function-ref name="localGroup" scoped="" ref="0x40fe3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40fe35d0" loc="52:/home/u3f/tinyos-2_1_2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40fe35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fe37a8"/>
        <function-ref name="noAck" scoped="" ref="0x40fe3888"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fe3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fde700" loc="44:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fde700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fde8d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fde9b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fdea98"/>
        <function-ref name="cancel" scoped="" ref="0x40fdeb78"/>
        <function-ref name="sendDone" scoped="" ref="0x40fdec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40fdedc8" loc="46:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fdedc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41015010"/>
        <function-ref name="getPayload" scoped="" ref="0x410150f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410151d0"/>
        <function-ref name="cancel" scoped="" ref="0x410152b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41015390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410154d0" loc="47:/home/u3f/tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AnchorMoteAppC.MsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410154d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410156a8"/>
        <function-ref name="source" scoped="" ref="0x41015788"/>
        <function-ref name="address" scoped="" ref="0x41015868"/>
        <function-ref name="destination" scoped="" ref="0x41015948"/>
        <function-ref name="setSource" scoped="" ref="0x41015a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41015b08"/>
        <function-ref name="type" scoped="" ref="0x41015be8"/>
        <function-ref name="setType" scoped="" ref="0x41015cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41015da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41015e88"/>
        <function-ref name="localGroup" scoped="" ref="0x41014010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c279f8" loc="43:/home/u3f/tinyos-2_1_2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c279f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c27bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c27cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c27d90"/>
        <function-ref name="cancel" scoped="" ref="0x40c27e70"/>
        <function-ref name="sendDone" scoped="" ref="0x40c24010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40c4e0a8" loc="48:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c4e0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c4e290"/>
        <function-ref name="getPayload" scoped="" ref="0x40c4e370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c4e450"/>
        <function-ref name="cancel" scoped="" ref="0x40c4e530"/>
        <function-ref name="sendDone" scoped="" ref="0x40c4e610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c21908" loc="46:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c21908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c21af0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c21bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c21cb0"/>
        <function-ref name="cancel" scoped="" ref="0x40c21d90"/>
        <function-ref name="sendDone" scoped="" ref="0x40c21e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40c4d3f0" loc="50:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c4d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c4d5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c4d6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c4d788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c4d868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c4d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40c4dac8" loc="169:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40c4dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c4dca0"/>
        <function-ref name="runTask" scoped="" ref="0x40c4dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40c4df00" loc="126:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40c4df00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c4c0f0"/>
        <function-ref name="runTask" scoped="" ref="0x40c4c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40c4e750" loc="49:/home/u3f/tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c4e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c4e928"/>
        <function-ref name="source" scoped="" ref="0x40c4ea08"/>
        <function-ref name="address" scoped="" ref="0x40c4eae8"/>
        <function-ref name="destination" scoped="" ref="0x40c4ebc8"/>
        <function-ref name="setSource" scoped="" ref="0x40c4eca8"/>
        <function-ref name="setDestination" scoped="" ref="0x40c4ed88"/>
        <function-ref name="type" scoped="" ref="0x40c4ee68"/>
        <function-ref name="setType" scoped="" ref="0x40c4d010"/>
        <function-ref name="isForMe" scoped="" ref="0x40c4d0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40c4d1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40c4d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c6c5a8" loc="45:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="AnchorMoteAppC.AnchorTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c6c5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c660d8"/>
        <function-ref name="fired" scoped="" ref="0x40c6b368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c6ba70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c6b818"/>
        <function-ref name="getdt" scoped="" ref="0x40c66588"/>
        <function-ref name="gett0" scoped="" ref="0x40c66330"/>
        <function-ref name="isRunning" scoped="" ref="0x40c6b5c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c6cbd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c6bd90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c6ce50"/>
        <function-ref name="stop" scoped="" ref="0x40c6b110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MsgSend" ref="0x40c62b38" loc="16:AnchorMoteC.nc">
      <component-ref qname="AnchorMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MsgSend" scoped="" ref="0x40c62b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c62d10"/>
        <function-ref name="getPayload" scoped="" ref="0x40c62df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c62ed0"/>
        <function-ref name="cancel" scoped="" ref="0x40c61010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c610f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40c62060" loc="14:AnchorMoteC.nc">
      <component-ref qname="AnchorMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40c62060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40c62238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40c624b8" loc="15:AnchorMoteC.nc">
      <component-ref qname="AnchorMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40c624b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c62690"/>
        <function-ref name="stopDone" scoped="" ref="0x40c62770"/>
        <function-ref name="start" scoped="" ref="0x40c62850"/>
        <function-ref name="stop" scoped="" ref="0x40c62930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AnchorTimer" ref="0x40c613e8" loc="17:AnchorMoteC.nc">
      <component-ref qname="AnchorMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AnchorTimer" scoped="" ref="0x40c613e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c60ec8"/>
        <function-ref name="fired" scoped="" ref="0x40c60180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c60888"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c60630"/>
        <function-ref name="getdt" scoped="" ref="0x40c5f3a8"/>
        <function-ref name="gett0" scoped="" ref="0x40c5f150"/>
        <function-ref name="isRunning" scoped="" ref="0x40c603d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c61a10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c60ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c61c90"/>
        <function-ref name="stop" scoped="" ref="0x40c61f10"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404011a8" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403f95f8" loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404064e8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40406390" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x40400a80" loc="31:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403fd168" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403fd010" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403fd830" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403fd6d8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403fdd88" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4040d138" loc="44:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4040d520" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4040f990" loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4040dcf0" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4040fd50" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4040d8f8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4040f250" loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4040f5e0" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x400329d0" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403673b0" loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40032e10" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x403682d0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x403687e8" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d5b90" loc="76:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403eae90" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4038f010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403ea1a8" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40522168" loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40522010" loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40522eb0" loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40522d58" loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40525860" loc="104:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40522678" loc="130:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40549638" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x405492c0" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405494d8" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4054c988" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054c830" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40554370" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40554218" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40552370" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40552010" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405521f0" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405539a8" loc="106:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40553010" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40554c90" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40554e70" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40544010" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x405459d0" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40545be8" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40545dc8" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40540dd0" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40540a70" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40540c50" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40540510" loc="123:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40544cb0" loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40544b58" loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40542bf8" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405428a0" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40542a98" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40524dd8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
              <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40524890" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40524a70" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40524c50" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x4055db60" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055d7c8" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x4055da00" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40569650" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405694f8" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x4055d2f0" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40550ba8" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40550a50" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x405611e0" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40561088" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40561cd8" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40561b80" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4055e770" loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055e618" loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x405656a8" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40565550" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40562ab8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40562720" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40562958" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40567d18" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40567bc0" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x405676a0" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40567308" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40567540" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40564010" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40565e70" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40556488" loc="177:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40556330" loc="177:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4054fda8" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054fc50" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4054acf8" loc="68:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4054f3a8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054f250" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40559710" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405593a8" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405595b0" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4055b9e8" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4055b680" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4055b888" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4055ae28" loc="147:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4055acd0" loc="147:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40557978" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40557648" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40557818" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4052b320"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4055a2f0" loc="136:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4055a198" loc="136:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40555170" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40556da8" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40555010" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x405559e8" loc="195:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x405637d0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x405632f0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40563198" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40563cd0" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4055f748" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4055f748"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4055f8b0" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055f8b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4056fb60" loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055f8b0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056fa08" loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4056d620" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056d4c8" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x4056f010" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055fde0" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4056e170" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055f8b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056dd70" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4056e010" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055f8b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4057b248" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4057b248"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40578510" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405783b8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4057bee0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4057b248"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057bd88" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4057b8c0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057b768" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40578cb8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4057b248"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40578940" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40578b58" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4057b248"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4057f310" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4057f310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4057f7f0" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40580350" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405801f8" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4059cbd8" loc="120:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4059c2b8" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40593c88" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4059c768" loc="102:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4059a2e8" loc="128:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40598240" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405980e8" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40592660" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40592c60" loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40592b08" loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405971c8" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40598e10" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40597068" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40598a10" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40598670" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405988b0" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40597ce8" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4051fb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40597b90" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x405a5478" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4051fb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a50e8" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x405a5318" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4051fb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40597738" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405975e0" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x405a58b8" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4051fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40590020" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40594aa8" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40594cc0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40594ea0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4059e290" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058ff18" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4059e110" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4058f9b8" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405909b0" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40590858" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4058f3c0" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058f068" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4058f260" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x405b9bf0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x405b85e8" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b8490" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x405bfd70" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bfc18" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x405ceae0" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ce988" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x405bf010" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c0e80" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405c0240" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c00e8" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405bf7a8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bf440" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405bf648" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405c0a08" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c06a0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405c08a8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x405ce508" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ce1a8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x405ce3a8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x405b15f8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x405b1c00" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x405c2168" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c2010" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x405c32e0" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c3188" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x405c39d8" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c3880" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x405d99c8" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x405d9168" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x40518ce8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x405d9010" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x40518ce8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405d95b0" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x405caa88" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x405d9e40" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40518ce8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x405e4010" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e5e60" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405e65f0" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e6498" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405e5320" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x405e6e48" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e6ae8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x405e6ce8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x405dbe60" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dbd08" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x405e59a0" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e5848" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x405b47e0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x405b42e0" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b4188" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x405b4ec0" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b4d68" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x405b3418" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x405b3b48" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b39f0" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x405b5820" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b56c8" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x405bee78" loc="86:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x405be9c0" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405be648" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405be860" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405b0990" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b0838" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x405af088" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b0f00" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x405af9c0" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405af648" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405af860" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x405b6a80" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405b0338" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b0010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405b01d8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405be168" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405be010" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x405d1440" loc="131:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d12e8" loc="131:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x405d3620" loc="120:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d34c8" loc="120:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x405c93b8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c9068" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x405c9258" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x405c8800" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c86a8" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x405cf940" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cf5e0" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405cf7e0" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x405c8168" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c8010" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x405d3e18" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d3ad8" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x405d3cb8" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x405c7798" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405c7420" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405c7638" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x405cf168" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cf010" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x405c9a20" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c98c8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x405d5820" loc="99:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d56c8" loc="99:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x405d5170" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405c7d28" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405d5010" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x405dc0c8" loc="178:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4051fe28"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405dd010" loc="162:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cfe10" loc="162:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x405ddc08" loc="173:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4051fb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x405d0a80" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d0720" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405d0920" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x405c8eb0" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c8d58" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x405d3010" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d4bf8" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x405d4de8" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x405d1c28" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d18d8" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x405d1ac8" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405dc6a0" loc="185:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dc548" loc="185:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405d4060" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d5d00" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405d5ec8" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x405c4b98" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c4a40" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405dd720" loc="168:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dd5c8" loc="168:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x405d02a0" loc="141:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d0148" loc="141:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x405d4710" loc="110:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d45b8" loc="110:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x405ba060" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bbcd8" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x405bbed8" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x405ba4f8" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x405bb1c0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb068" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405bb808" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb6b0" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x405b7a60" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b7908" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x405b7380" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b7228" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x405c5010" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x405c56c8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c5570" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40614e60" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40614e60"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40611010" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40611010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40620350" loc="109:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40611010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40621010" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40621cd8" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40611010"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40611010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40621988" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40611010"/></type-var>
          </variable>
          <variable name="dt" ref="0x40621b78" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40611010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40621480" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x406207e0" loc="116:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40611010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40611640" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40611010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x406114e8" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40611010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40611b20" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40628010" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x406285e0" loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40628c20" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x4061ab38" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x406439f0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40643898" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4063fa78" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4063f920" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4063f388" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4063f030" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4063f228" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40642a78" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
              <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40642900" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40656500" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40656d70" loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40656970" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40656010" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40647c78" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4052b578"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40647e80" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x406b4d30" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406b1328" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x406b3f28" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x406b3a68" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x406b05a8" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x406b0aa8" loc="98:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x406bc820" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406c1200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406bc6c8" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406c1200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x406bd4a8" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x406bdb68" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406c1200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406bda10" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406c1200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x406bc138" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x406c1200"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40789958" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
              <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407897e0" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40789168" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40789010" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40796730" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407965d8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40796bb0" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40783c68" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40783b10" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407961e0" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40796088" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40799698" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40799540" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40798390" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40798238" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40799d68" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40799c10" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40798a48" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407988f0" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40799018" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40784ea8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4052b7d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x407ec3b8" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x407ecdf0" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x407eb478" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x407eb320" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x407eb8e8" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x407ec8f8" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x407ebe28" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x407eeeb0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407eed58" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x407e9b90" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407e9678" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x407e9520" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40825e98" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x408259f0" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4083f580" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4083f580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4083fbd0" loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4083f580"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4083fa78" loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4083f580"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x4085c8e0" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085c788" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4085f580" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085f428" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x4085fd50" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085fa10" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4085fbf0" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4085c350" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085c1f8" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40873538" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408733e0" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40876ee0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408bd490" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408bd490"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x408b7c28" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408b9a58" loc="83:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x408b8bc0" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x408b8878" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x408b8a60" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x408b83d0" loc="98:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x408b65c0" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x408b6090" loc="144:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x408b9ee8" loc="92:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x408bdae8" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x408bd990" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x408b7608" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x408b72c0" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x408b74a8" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x408b91c0" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x408b9068" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408b9690" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408cac88" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408cac88"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x408cadf0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408cadf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x408c72f0" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408cadf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x408c7d18" loc="76:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x408c7818" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x408c5138" loc="82:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x408e32b8" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x408e4818" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x408e5438" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x408e4dd8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x408e4c80" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x408e43a8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x408e4250" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x408e3880" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x408e3728" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x408e5888" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x408e5e00" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x408e5ca8" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x408f5010" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x408f7ca0" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x408f60f8" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x408f65d8" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x408f54d0" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x408f6ab8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x408f71c8" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9618"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b9840"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x408f77c0" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b9840"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x408f7668" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b9840"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x408e7858" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e7858"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x408df830" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408e0760" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408e7d50" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e7858"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x408e0b68" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x408dfc90" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408e0320" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e7858"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x408e01c8" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e7858"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x408df010" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408df408" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x408d1508" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x408d1508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x408ead28" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x408ea498" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408d19f8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x408d1508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x408e92e0" loc="104:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x408e9188" loc="104:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x408e9770" loc="110:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x408d0860" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x408d0440" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x408ea900" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408d0010" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x408d1508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x408d1e18" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x408d1508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x408d0c68" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408ea070" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409f06d0" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409f06d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409f0838" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f0838"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x409f0e50" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f0838"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409f0cf8" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f0838"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x409f3e08" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40a0f7e8" loc="66:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a0f3a0" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a0f248" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x409f3900" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x409f2210" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409f20b8" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x409f2df8" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409f2ca0" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x409f2720" loc="68:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x409f1450" loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409f12f8" loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40a97ad8" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a97ad8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40a91650" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40a914f8" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40a93c30" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a94010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a97ad8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a94b60" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a97ad8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a94a08" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a97ad8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40a93010" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40a910c8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a94588" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a97ad8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a94430" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a97ad8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40a93418" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a93810" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40aa7650" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40aa70e0" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40aa72f8" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40aa74e8" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40aa5ca0" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40aa5520" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40aa5738" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40aa5928" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40aa5b30" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40aabbb0" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40aaba58" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40abc6c8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40ab7ee8" loc="126:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40ab8010" loc="117:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40ab54e8" loc="128:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40ab5390" loc="128:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40abc278" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40ab7010" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40ab8e10" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40ab91e0" loc="113:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40ab9088" loc="113:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40aba010" loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40ab35c8" loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ab3470" loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40ab9638" loc="114:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40ab5e70" loc="131:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40ab5d18" loc="131:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40ab4748" loc="136:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40ab7aa0" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40ab7948" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40ab3038" loc="140:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40ab85a0" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40ab8448" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40aba5a8" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aba450" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40ab9b88" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40ab9a30" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40ab74c0" loc="123:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40ab5910" loc="129:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40ab42d0" loc="132:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40ab4ba0" loc="138:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40ab89d8" loc="120:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40abcaf0" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40abab70" loc="109:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40abaa18" loc="109:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40aec900" loc="95:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40aecde8" loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40b232e8" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b227d0" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40b26a40" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b20210" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b22d90" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b22c38" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40b23dd8" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b23c80" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b207d8" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b20680" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40b26e90" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40b22360" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b22208" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40b23860" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b23708" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40c0bb98" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c0b858" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c0ba38" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40c06a18" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c066b8" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c06898" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40c06158" loc="112:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c08b38" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c089e0" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40c05820" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c054c8" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40546780"/>
                <typename><typedef-ref name="message_t" ref="0x40545538"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40c056c0" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
