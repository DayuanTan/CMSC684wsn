<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="27:TargetMoteAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40e46010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40436730"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40436730"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40441a28"/></to>
    </wire>
    <wire loc="28:TargetMoteAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e46378"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4053a010"/></to>
    </wire>
    <wire loc="51:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4053a010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40540698"/></to>
    </wire>
    <wire loc="29:TargetMoteAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40e450b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4055daf8"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4055daf8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40593b50"/></to>
    </wire>
    <wire loc="30:TargetMoteAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40e457b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c22e40"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c22e40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c5c3a8"/></to>
    </wire>
    <wire loc="31:TargetMoteAppC.nc">
      <from><interface-ref name="MsgReceive" scoped="" ref="0x40e44158"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4056fac8"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4056fac8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40590e30"/></to>
    </wire>
    <wire loc="32:TargetMoteAppC.nc">
      <from><interface-ref name="SerialAMSend" scoped="" ref="0x40e44850"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c1e750"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40c1e750"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c1a180"/></to>
    </wire>
    <wire loc="33:TargetMoteAppC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40e43110"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x405a3390"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405a3390"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x405c0b60"/></to>
    </wire>
    <wire loc="35:TargetMoteAppC.nc">
      <from><interface-ref name="SerialAMPacket" scoped="" ref="0x40e42430"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c1db68"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c1db68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c1abe8"/></to>
    </wire>
    <wire loc="36:TargetMoteAppC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40e41130"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405769d0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405769d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4059dce0"/></to>
    </wire>
    <wire loc="37:TargetMoteAppC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x40e418e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405797b0"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405797b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4059c448"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40da8d80"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40da4920"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d596d8"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c5c010"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411d82e8"/></to>
    </wire>
    <wire loc="119:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40a00118"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408d7b80"/></to>
    </wire>
    <wire loc="52:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4086a5f8"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x41111410"/></to>
    </wire>
    <wire loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c4578"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410f1230"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4106ca88"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40441dc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403675f0"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403675f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403d6820"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40535400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40abc030"/></to>
    </wire>
    <wire loc="122:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40535400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a01aa0"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40535400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4043fc78"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4043fc78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40442010"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40535808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40444c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e2d860"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40444c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bb0a78"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40444508"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40529010"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404427f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4051abf8"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x404423f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40556a38"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x404423f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40446880"/></to>
    </wire>
    <wire loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40446880"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40448828"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40446c50"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40444c68"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4044cdd0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x4045a0a0"/></to>
    </wire>
    <wire loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4045a0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404a7170"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4044f828"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40446c50"/></to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404782f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404fb0b0"/></to>
    </wire>
    <wire loc="165:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40460830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b4090"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404b4090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f333b0"/></to>
    </wire>
    <wire loc="176:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4046eea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404c3d68"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404c3d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f64538"/></to>
    </wire>
    <wire loc="185:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404720a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404c67d0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404c67d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9a228"/></to>
    </wire>
    <wire loc="196:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40475830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40508880"/></to>
    </wire>
    <wire loc="143:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404594b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404a64f0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404a64f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e99538"/></to>
    </wire>
    <wire loc="183:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x4046ac08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404c84f0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404c84f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9ede0"/></to>
    </wire>
    <wire loc="146:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404578e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404a23d8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404a23d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed3418"/></to>
    </wire>
    <wire loc="157:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404640a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b0170"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404b0170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eff228"/></to>
    </wire>
    <wire loc="168:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40468750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404bfd68"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404bfd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f2e228"/></to>
    </wire>
    <wire loc="179:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4046cce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c1ac8"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404c1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f96538"/></to>
    </wire>
    <wire loc="138:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40452210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4049d4f0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4049d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea1010"/></to>
    </wire>
    <wire loc="149:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4045f750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404ab030"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404ab030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ecd228"/></to>
    </wire>
    <wire loc="160:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x40463ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404afe48"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404afe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40efa0b0"/></to>
    </wire>
    <wire loc="171:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40466670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404bdac8"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404bdac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f5f0b0"/></to>
    </wire>
    <wire loc="188:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40471ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404d04f0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404d04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcd0b0"/></to>
    </wire>
    <wire loc="194:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404763d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40500880"/></to>
    </wire>
    <wire loc="174:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40465a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404c4a80"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404c4a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f67010"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404a7170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9c010"/></to>
    </wire>
    <wire loc="152:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x4045d750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404aac88"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404aac88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec80b0"/></to>
    </wire>
    <wire loc="192:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40478ee8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404f9880"/></to>
    </wire>
    <wire loc="155:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4045cc08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404b2dc8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404b2dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f06de8"/></to>
    </wire>
    <wire loc="166:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404692f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b49e8"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404b49e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f32d70"/></to>
    </wire>
    <wire loc="177:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4046d8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404c2790"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404c2790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f62010"/></to>
    </wire>
    <wire loc="186:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40472a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404d1170"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404d1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f99c08"/></to>
    </wire>
    <wire loc="144:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40459ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404a6e48"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404a6e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e97010"/></to>
    </wire>
    <wire loc="147:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404562f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404a2d30"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404a2d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed2de0"/></to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x40464a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404b0ac8"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404b0ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40efec08"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x40467210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404be790"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404be790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f2dc08"/></to>
    </wire>
    <wire loc="180:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4046b750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c04f0"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404c04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f94010"/></to>
    </wire>
    <wire loc="139:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40452c08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4049de48"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4049de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea09e8"/></to>
    </wire>
    <wire loc="150:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4045e210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404ab988"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404ab988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eccc08"/></to>
    </wire>
    <wire loc="161:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404628e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404ae7d0"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404ae7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ef9a88"/></to>
    </wire>
    <wire loc="189:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4046f8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404d0e48"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404d0e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcca88"/></to>
    </wire>
    <wire loc="164:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40461ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404b56f8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404b56f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f36938"/></to>
    </wire>
    <wire loc="175:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4046e4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404c3410"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404c3410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f669e8"/></to>
    </wire>
    <wire loc="184:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40473670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404c8e48"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404c8e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9c7f8"/></to>
    </wire>
    <wire loc="195:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40476dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404fc0b0"/></to>
    </wire>
    <wire loc="142:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4045aa98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404a7ac8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404a7ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9b9e8"/></to>
    </wire>
    <wire loc="153:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4045c210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404a96b0"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404a96b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec7a88"/></to>
    </wire>
    <wire loc="182:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x4046a210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404c9b00"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404c9b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9f418"/></to>
    </wire>
    <wire loc="156:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4045b670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b1790"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404b1790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f017f8"/></to>
    </wire>
    <wire loc="167:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40469ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404bf410"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404bf410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f307f8"/></to>
    </wire>
    <wire loc="178:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4046c2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c1170"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404c1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f619e8"/></to>
    </wire>
    <wire loc="187:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404714b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404d1ac8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404d1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcf6c0"/></to>
    </wire>
    <wire loc="137:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404477f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4049eb18"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4049eb18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea3538"/></to>
    </wire>
    <wire loc="148:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40456ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404ac6b0"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404ac6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed07f8"/></to>
    </wire>
    <wire loc="159:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404634b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404af4f0"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404af4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40efc6c0"/></to>
    </wire>
    <wire loc="170:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40467c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404bd170"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404bd170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f2b6c0"/></to>
    </wire>
    <wire loc="193:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40477900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405020b0"/></to>
    </wire>
    <wire loc="173:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404650a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404c4128"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404c4128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f69538"/></to>
    </wire>
    <wire loc="162:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404612f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404b8170"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404b8170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ef7538"/></to>
    </wire>
    <wire loc="140:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40451670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4049c7d0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4049c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9e538"/></to>
    </wire>
    <wire loc="151:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x4045ec88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404aa330"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404aa330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eca6c0"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403d5100"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d5d68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40362728"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e9218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4094e7b8"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40556a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40540350"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4054d400"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40539ba8"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40539ba8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40452c08"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4054dde8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40557680"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40557680"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40452210"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4054c820"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x405560b0"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405560b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x404477f0"/></to>
    </wire>
    <wire loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40593b50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405aa880"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4056e890"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4058fb88"/></to>
    </wire>
    <wire loc="84:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4058fb88"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405b6870"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4059dce0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x405b47d0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40564670"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40590470"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40590470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405a7178"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4055c178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4058f510"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4058f510"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405b61f8"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40581700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4059b6c8"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4059b6c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405b1e48"/></to>
    </wire>
    <wire loc="82:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40590e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405a7b38"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40585a90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059b140"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059b140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405b18c0"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4057a040"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4059bce8"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4059bce8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x405bc498"/></to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4059c448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405b5a60"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4058aab8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4059a470"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4059a470"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x405bcbb0"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40594408"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405a0260"/></to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405a0260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405cdec8"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058bdb8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405adc38"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405adc38"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405cba08"/></to>
    </wire>
    <wire loc="215:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405aa880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407e3458"/></to>
    </wire>
    <wire loc="305:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405c0b60"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x409f1bf8"/></to>
    </wire>
    <wire loc="270:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405cba08"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408b19c8"/></to>
    </wire>
    <wire loc="124:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405b6870"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406bc108"/></to>
    </wire>
    <wire loc="126:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x405b47d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406bea80"/></to>
    </wire>
    <wire loc="121:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405a7178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406bd1e8"/></to>
    </wire>
    <wire loc="123:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405b61f8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406bdd08"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x405a5010"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x405c27f0"/></to>
    </wire>
    <wire loc="303:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x405c27f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409f3888"/></to>
    </wire>
    <wire loc="216:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405b1e48"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x407fa9c8"/></to>
    </wire>
    <wire loc="122:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405a7b38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406bd928"/></to>
    </wire>
    <wire loc="269:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405cdec8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409da1b0"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x405ae6b8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x405cd330"/></to>
    </wire>
    <wire loc="307:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x405cd330"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a0db78"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a6b88"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x405c3368"/></to>
    </wire>
    <wire loc="304:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405c3368"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0e3d8"/></to>
    </wire>
    <wire loc="248:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405b18c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40877b18"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x4059d2a8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x405b5010"/></to>
    </wire>
    <wire loc="128:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x405b5010"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x406bc4e8"/></to>
    </wire>
    <wire loc="187:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405bc498"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x407eec80"/></to>
    </wire>
    <wire loc="125:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405b5a60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406c0e90"/></to>
    </wire>
    <wire loc="224:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x405bcbb0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40800c20"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4059f500"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405bfdf0"/></to>
    </wire>
    <wire loc="306:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405bfdf0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a0d680"/></to>
    </wire>
    <wire loc="87:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x4059d988"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x405b56f0"/></to>
    </wire>
    <wire loc="129:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x405b56f0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x406bc8c8"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407e3458"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40805010"/></to>
    </wire>
    <wire loc="88:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x409f1bf8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a1e7d0"/></to>
    </wire>
    <wire loc="160:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x405bdc78"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40713808"/></to>
    </wire>
    <wire loc="148:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x405b9428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406d18c0"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406d18c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4106ae18"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406bc108"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x41060638"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406bd1e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41062740"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406bdd08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x41060278"/></to>
    </wire>
    <wire loc="161:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x405c45b8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407a04f0"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x407a04f0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x410a5410"/></to>
    </wire>
    <wire loc="162:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x405b1148"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407146d8"/></to>
    </wire>
    <wire loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409f3888"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a1f458"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x407fa9c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x41118a68"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406bea80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41062010"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406bd928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41062e80"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409da1b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x411409a0"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a0db78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a9db48"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0e3d8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a1a010"/></to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x405bd098"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40714d70"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406bc4e8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x41060a18"/></to>
    </wire>
    <wire loc="117:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x407eec80"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x407e6190"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40800c20"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41110010"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406c0e90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x410633f0"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408b19c8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x411411f0"/></to>
    </wire>
    <wire loc="159:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x405bd828"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x407134f0"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a0d680"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a18278"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406bc8c8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x41060df8"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405fb500"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407a2a58"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407a2a58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x410ac970"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405f8a88"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4063d5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x405f9648"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409da1b0"/></to>
    </wire>
    <wire loc="105:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x40605c68"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409f4ed0"/></to>
    </wire>
    <wire loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409f4ed0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a21a90"/></to>
    </wire>
    <wire loc="110:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4063de78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a0b618"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a0b618"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a9e030"/></to>
    </wire>
    <wire loc="116:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x406bbc40"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405eca08"/></to>
    </wire>
    <wire loc="117:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406bb410"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x406ca948"/></to>
    </wire>
    <wire loc="118:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x406bb908"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x40742b78"/></to>
    </wire>
    <wire loc="119:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x406bcc40"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40742eb0"/></to>
    </wire>
    <wire loc="137:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406c9370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406d18c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406cae70"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x40742680"/></to>
    </wire>
    <wire loc="153:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40713b50"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407a2a58"/></to>
    </wire>
    <wire loc="154:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40723d68"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40733668"/></to>
    </wire>
    <wire loc="155:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40722330"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40733b60"/></to>
    </wire>
    <wire loc="156:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407235d0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40733e98"/></to>
    </wire>
    <wire loc="169:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407416b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4079b8a0"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4079b8a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410f48f0"/></to>
    </wire>
    <wire loc="170:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40741ba8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407ee968"/></to>
    </wire>
    <wire loc="114:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407ee968"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407e7170"/></to>
    </wire>
    <wire loc="171:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40741ee0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x407a0f08"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407a0f08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x410a5e28"/></to>
    </wire>
    <wire loc="176:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4079f6e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x407e83f0"/></to>
    </wire>
    <wire loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407e83f0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407e74a8"/></to>
    </wire>
    <wire loc="181:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x407dab90"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x405d9710"/></to>
    </wire>
    <wire loc="182:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407da280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407ee470"/></to>
    </wire>
    <wire loc="113:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407ee470"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407e8bb8"/></to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407e7c20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40877b18"/></to>
    </wire>
    <wire loc="193:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407e8bb8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407e3a30"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407e3a30"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408055e8"/></to>
    </wire>
    <wire loc="194:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407e7170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407e3f28"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407e3f28"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40805ae0"/></to>
    </wire>
    <wire loc="195:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407e74a8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x407fa250"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407fa250"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40805e18"/></to>
    </wire>
    <wire loc="211:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40805010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40801d98"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40801d98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41114dd0"/></to>
    </wire>
    <wire loc="212:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408055e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40800410"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40800410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41111748"/></to>
    </wire>
    <wire loc="213:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40805ae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40800908"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40800908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41111c40"/></to>
    </wire>
    <wire loc="214:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40805e18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409d9830"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409d9830"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4113d040"/></to>
    </wire>
    <wire loc="221:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408448f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40840538"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40840538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4112fde0"/></to>
    </wire>
    <wire loc="222:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40844dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4079bd78"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4079bd78"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x410f4dc8"/></to>
    </wire>
    <wire loc="223:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40844180"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409ff328"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409ff328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409fb1b0"/></to>
    </wire>
    <wire loc="228:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407da778"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40840a10"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40840a10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4112d310"/></to>
    </wire>
    <wire loc="237:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40868e20"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405e3548"/></to>
    </wire>
    <wire loc="238:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40840e58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40877248"/></to>
    </wire>
    <wire loc="239:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40868370"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40877720"/></to>
    </wire>
    <wire loc="240:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40868768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4063d5c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40892988"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409e1db8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40893950"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4063d5c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40892030"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405d4010"/></to>
    </wire>
    <wire loc="253:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40893060"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4089e3f0"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4089e3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4089b330"/></to>
    </wire>
    <wire loc="254:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40893558"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4089e8c8"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4089e8c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4089b828"/></to>
    </wire>
    <wire loc="259:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4089a828"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405d7a20"/></to>
    </wire>
    <wire loc="260:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4089b330"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409ffaa0"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409ffaa0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409fb9c8"/></to>
    </wire>
    <wire loc="261:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4089b828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409fd010"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409fd010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409fbec0"/></to>
    </wire>
    <wire loc="262:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x4089bc40"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409f4a68"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409f4a68"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a21628"/></to>
    </wire>
    <wire loc="267:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409d80c0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a0db78"/></to>
    </wire>
    <wire loc="268:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409d8938"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409d43f0"/></to>
    </wire>
    <wire loc="271:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x409d7170"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409e1db8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409d4bb8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409f4ed0"/></to>
    </wire>
    <wire loc="286:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409faeb0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405d7a20"/></to>
    </wire>
    <wire loc="287:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409fb9c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409f40c0"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409f40c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a00c70"/></to>
    </wire>
    <wire loc="288:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409fbec0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409f4618"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409f4618"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a211d8"/></to>
    </wire>
    <wire loc="289:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x409fb1b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409f78a8"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409f78a8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a00498"/></to>
    </wire>
    <wire loc="301:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a09170"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x405d2bf0"/></to>
    </wire>
    <wire loc="302:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a09ad8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409da1b0"/></to>
    </wire>
    <wire loc="309:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a06370"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409e1db8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a06a08"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409e1db8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a050e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409e1db8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a05700"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4063d5c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4063d5c0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x410360a8"/></to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x410368a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4063de78"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41034220"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40654010"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4105ea88"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406b6428"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4105f1a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x406bcc40"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4105f938"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x406bb410"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4105fe30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x406bb908"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4105e1b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x406bbc40"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40700030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410695a8"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40700438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410699b0"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41069e70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407008e8"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x410682b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4106cdc0"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x410688a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x410a4620"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406b6428"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x410a4bf8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4079f6e0"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x410f0450"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x407c7988"/></to>
    </wire>
    <wire loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x407c7988"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x407c4910"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410f0ae8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410ee010"/></to>
    </wire>
    <wire loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410ee010"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x407c1348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x410f1598"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407da280"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x410f1a90"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407da778"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x410f1e88"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x407dab90"/></to>
    </wire>
    <wire loc="118:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x407e6868"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407e7c20"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x41110518"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40844180"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41110c90"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40654010"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4110f310"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408448f8"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4110f7e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40844dd0"/></to>
    </wire>
    <wire loc="189:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x4110e080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x4110e4b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x4110fc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4112d758"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40840e58"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4112cb20"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40868e20"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4112dc50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40868370"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4112c070"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40868768"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4112c708"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4086b948"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4086b948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40867478"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x4112a190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4086b088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4086ab18"/></to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40855de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4086a5f8"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4088ee40"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4089dc50"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x4089ecc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x4089bc40"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4088dc20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x4089ca80"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4089d150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4089a090"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x4089d8e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4089a828"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x4088d908"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x4089c748"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x4088d430"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x4089c250"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4113b030"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409d8938"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4113de70"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409d80c0"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x4113c798"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x408dac50"/></to>
    </wire>
    <wire loc="26:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x408dac50"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x408e7010"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x4113d808"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x409d7170"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x408e7010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409c9a88"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x408e9c50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40996f00"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408d7b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408e56c8"/></to>
    </wire>
    <wire loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408e56c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408f7bb8"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x409ce338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408e3f08"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4099a248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x408e5c90"/></to>
    </wire>
    <wire loc="36:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x408e5c90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40976010"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409c8448"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x408f95c8"/></to>
    </wire>
    <wire loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x408f95c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40975a88"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40975a88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x411656a0"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408f7bb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411677f8"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40976010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41167c30"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41163868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40943dd8"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40943dd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40938de8"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41161a28"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4093c1a0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4093c1a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x409511a0"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x411604a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4093ccc0"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4093ccc0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40951cc0"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4115fe98"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4093a858"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4093a858"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4094ec18"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40998bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x409cb560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x408d5d10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x408e9c50"/></to>
    </wire>
    <wire loc="76:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409e0548"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409fc378"/></to>
    </wire>
    <wire loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409fd408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409fa300"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409fd800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409fa718"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409fc010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409faeb0"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x409ff010"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x409fce48"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x409e0b00"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x409fc950"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a9e030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b8fe38"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0f010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a1dba8"/></to>
    </wire>
    <wire loc="81:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a9db48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bd7778"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a11690"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a09170"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a11e60"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a06370"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a30510"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40a06a08"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a30bd0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a050e0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a2e480"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a09ad8"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a2fd18"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a9db48"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a2b298"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a05700"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a18690"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40aa5b08"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40aa5b08"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404578e0"/></to>
    </wire>
    <wire loc="104:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a17148"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40aa15b8"/></to>
    </wire>
    <wire loc="63:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40aa15b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ac8c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a136f8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40aa1cc0"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40aa1cc0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40aace50"/></to>
    </wire>
    <wire loc="107:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a13d70"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40aa03d0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40aa03d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4045c210"/></to>
    </wire>
    <wire loc="108:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a16820"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40aa0db8"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40aa0db8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x404594b0"/></to>
    </wire>
    <wire loc="110:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a329e0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a9f820"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a9f820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a9b980"/></to>
    </wire>
    <wire loc="111:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a2dc48"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40654010"/></to>
    </wire>
    <wire loc="112:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a2f260"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bf8458"/></to>
    </wire>
    <wire loc="847:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40a81998"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b8fe38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x411bfac0"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40aace50"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ac7520"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40bd7778"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bfc440"/></to>
    </wire>
    <wire loc="59:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40aba420"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40467c08"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40abae20"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x40468750"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40ab6660"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b4af08"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40b4af08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b406c8"/></to>
    </wire>
    <wire loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40ac8500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40ac7b38"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40aacaa8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40ac7198"/></to>
    </wire>
    <wire loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a9ad98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40aced80"/></to>
    </wire>
    <wire loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ac8c50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ac62a8"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40ac4100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b35198"/></to>
    </wire>
    <wire loc="98:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b35198"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411d7630"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac4808"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b35ce0"/></to>
    </wire>
    <wire loc="100:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b35ce0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411d6230"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40ad93d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40af4070"/></to>
    </wire>
    <wire loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40af4070"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40b153a8"/></to>
    </wire>
    <wire loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40ac4c88"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></to>
    </wire>
    <wire loc="296:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40ae9420"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40b10a60"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></to>
    </wire>
    <wire loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40b13218"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404578e0"/></to>
    </wire>
    <wire loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40b13bf0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404562f0"/></to>
    </wire>
    <wire loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40b12660"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40456ce8"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40b10060"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x4045f750"/></to>
    </wire>
    <wire loc="99:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b358d8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411d7d70"/></to>
    </wire>
    <wire loc="101:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411d66f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b33208"/></to>
    </wire>
    <wire loc="103:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x411d6b18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x411d8620"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x411d5190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b4a218"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b41920"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b30830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b44640"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b48120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b646c8"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b48120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b61340"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b48120"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b60f28"/></to>
    </wire>
    <wire loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x411fc548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b30830"/></to>
    </wire>
    <wire loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x411fa7e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b48120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bb0e60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b30830"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bfcdd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40be7320"/></to>
    </wire>
    <wire loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40bfe5f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bd4868"/></to>
    </wire>
    <wire loc="31:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bd4868"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bce030"/></to>
    </wire>
    <wire loc="32:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bcc208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b30830"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c5c3a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c6f3d8"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c1d478"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c43850"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c1d120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c1a8c0"/></to>
    </wire>
    <wire loc="67:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c1c850"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c43ee8"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c5c010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c6f040"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c81e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c1cd88"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c60430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c5b288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c60ae8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c5cc68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40c81978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40e51928"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c5b288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d00c60"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c5cc68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d008a0"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40d22400"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40c81978"/></to>
    </wire>
    <wire loc="70:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c94720"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c81e80"/></to>
    </wire>
    <wire loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d213f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c81e80"/></to>
    </wire>
    <wire loc="72:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d49420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c81e80"/></to>
    </wire>
    <wire loc="74:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d228e8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c93c50"/></to>
    </wire>
    <wire loc="75:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40d22dc0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40c95b00"/></to>
    </wire>
    <wire loc="77:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40c90e88"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40d1f868"/></to>
    </wire>
    <wire loc="78:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40c8c3d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d1e3f0"/></to>
    </wire>
    <wire loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d1e3f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d5d168"/></to>
    </wire>
    <wire loc="80:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d43b80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d1e870"/></to>
    </wire>
    <wire loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d1e870"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d5da58"/></to>
    </wire>
    <wire loc="332:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40cb6350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40caa788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40cb9bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40cb4010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x40d20030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40d20468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d5e6e8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d5d5d8"/></to>
    </wire>
    <wire loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d5d5d8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d59e28"/></to>
    </wire>
    <wire loc="52:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d5da58"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d58290"/></to>
    </wire>
    <wire loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d5d168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d59a10"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d5c530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d5f878"/></to>
    </wire>
    <wire loc="33:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d5f878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40dcae68"/></to>
    </wire>
    <wire loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d8d0a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d5c530"/></to>
    </wire>
    <wire loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40d58b28"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40d7aa80"/></to>
    </wire>
    <wire loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40d7aa80"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40da5288"/></to>
    </wire>
    <wire loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40d8e010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40dab010"/></to>
    </wire>
    <wire loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40dab010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40da57b8"/></to>
    </wire>
    <wire loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40d8e448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40dab508"/></to>
    </wire>
    <wire loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40dab508"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40da5cd0"/></to>
    </wire>
    <wire loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40daab80"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40da3880"/></to>
    </wire>
    <wire loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40daa178"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40da4d70"/></to>
    </wire>
    <wire loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40daa688"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40da3368"/></to>
    </wire>
    <wire loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40da24a8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40444508"/></to>
    </wire>
    <wire loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40da2be8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></to>
    </wire>
    <wire loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40e540e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40dc93c0"/></to>
    </wire>
    <wire loc="31:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40dc93c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e2fe40"/></to>
    </wire>
    <wire loc="32:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e28050"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dc8d20"/></to>
    </wire>
    <wire loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40dc8d20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dea438"/></to>
    </wire>
    <wire loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40df2090"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40de7770"/></to>
    </wire>
    <wire loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40df2d80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40de6508"/></to>
    </wire>
    <wire loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40df0f20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40de3450"/></to>
    </wire>
    <wire loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40df0f20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40de10b8"/></to>
    </wire>
    <wire loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40df0f20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40ddfcb0"/></to>
    </wire>
    <wire loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e2dc48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dc8d20"/></to>
    </wire>
    <wire loc="43:TargetMoteC.nc">
      <from><interface-ref name="serialSendTask" scoped="" ref="0x40e6fa98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x408f6330"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d1d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d1d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403d0440"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TargetMoteC" loc="20:TargetMoteC.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4047d688" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4047d8a0" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4047dab8" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40480ae0" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40480d08" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40489010" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40489200" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404d5088" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404d52b0" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404d54d8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404d56c8" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x406d3710" loc="83:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x406dc570" loc="42:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x408f6330" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x408f6330"/></type-var>
        </typedef>
        <constant name="divider" ref="0x408f64f0" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x408f15d0" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x408f15d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x408f1790" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408e49c8" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408e49c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40994010" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40994010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x409941f0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409ca8f0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409ca8f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40bae230" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bae230"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40bae450" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40bb2f10" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40bb2f10"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40ba3378" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40ba3378"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40ba3538" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40bcf6c8" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40bcf6c8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bcfb10" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bcfb10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40bd2890" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40bd2890"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40bd2cf0" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40bd2cf0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40be4010" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40be4010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40be4480" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40be4480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40be46e8" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40be4b70" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40be4b70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x4043f380" loc="58:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4043f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4043f558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40436730" loc="57:/home/u3f/tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40436730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40436908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40444c68" loc="52:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40444c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40444e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4043fc78" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4043fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4043fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40444508" loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40444508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404446e0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404447c0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404448a0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40444980"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40444a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x404423f0" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x404423f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404425c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40442010" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40442010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404421e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404427f8" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404427f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404429d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40446c50" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40446c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40446e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40446880" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40446880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40446a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4044f828" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4044f828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044fa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4044cdd0" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4044cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044f010"/>
        <function-ref name="isInput" scoped="" ref="0x4044f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4044f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044f2b0"/>
        <function-ref name="get" scoped="" ref="0x4044f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f470"/>
        <function-ref name="set" scoped="" ref="0x4044f550"/>
        <function-ref name="clr" scoped="" ref="0x4044f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40448828" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40448828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40448a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404782f0" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404786c8"/>
        <function-ref name="isInput" scoped="" ref="0x404787a8"/>
        <function-ref name="toggle" scoped="" ref="0x40478888"/>
        <function-ref name="isOutput" scoped="" ref="0x40478968"/>
        <function-ref name="get" scoped="" ref="0x40478a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478b28"/>
        <function-ref name="set" scoped="" ref="0x40478c08"/>
        <function-ref name="clr" scoped="" ref="0x40478ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40460830" loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40460830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460a08"/>
        <function-ref name="isInput" scoped="" ref="0x40460ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40460bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40460ca8"/>
        <function-ref name="get" scoped="" ref="0x40460d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460e68"/>
        <function-ref name="set" scoped="" ref="0x40469010"/>
        <function-ref name="clr" scoped="" ref="0x404690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4046eea8" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4046eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4046d1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4046d280"/>
        <function-ref name="isOutput" scoped="" ref="0x4046d360"/>
        <function-ref name="get" scoped="" ref="0x4046d440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046d520"/>
        <function-ref name="set" scoped="" ref="0x4046d600"/>
        <function-ref name="clr" scoped="" ref="0x4046d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404720a0" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404720a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472278"/>
        <function-ref name="isInput" scoped="" ref="0x40472358"/>
        <function-ref name="toggle" scoped="" ref="0x40472438"/>
        <function-ref name="isOutput" scoped="" ref="0x40472518"/>
        <function-ref name="get" scoped="" ref="0x404725f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404726d8"/>
        <function-ref name="set" scoped="" ref="0x404727b8"/>
        <function-ref name="clr" scoped="" ref="0x40472898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40475830" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40475830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475a08"/>
        <function-ref name="isInput" scoped="" ref="0x40475ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40475bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40475ca8"/>
        <function-ref name="get" scoped="" ref="0x40475d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475e68"/>
        <function-ref name="set" scoped="" ref="0x40474010"/>
        <function-ref name="clr" scoped="" ref="0x404740f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404594b0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404594b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459688"/>
        <function-ref name="isInput" scoped="" ref="0x40459768"/>
        <function-ref name="toggle" scoped="" ref="0x40459848"/>
        <function-ref name="isOutput" scoped="" ref="0x40459928"/>
        <function-ref name="get" scoped="" ref="0x40459a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459ae8"/>
        <function-ref name="set" scoped="" ref="0x40459bc8"/>
        <function-ref name="clr" scoped="" ref="0x40459ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x4046ac08" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x4046ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4046aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40473010"/>
        <function-ref name="isOutput" scoped="" ref="0x404730f0"/>
        <function-ref name="get" scoped="" ref="0x404731d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404732b0"/>
        <function-ref name="set" scoped="" ref="0x40473390"/>
        <function-ref name="clr" scoped="" ref="0x40473470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404578e0" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404578e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40457b98"/>
        <function-ref name="toggle" scoped="" ref="0x40457c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40457d58"/>
        <function-ref name="get" scoped="" ref="0x40457e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457f18"/>
        <function-ref name="set" scoped="" ref="0x40456010"/>
        <function-ref name="clr" scoped="" ref="0x404560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404640a0" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464278"/>
        <function-ref name="isInput" scoped="" ref="0x40464358"/>
        <function-ref name="toggle" scoped="" ref="0x40464438"/>
        <function-ref name="isOutput" scoped="" ref="0x40464518"/>
        <function-ref name="get" scoped="" ref="0x404645f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404646d8"/>
        <function-ref name="set" scoped="" ref="0x404647b8"/>
        <function-ref name="clr" scoped="" ref="0x40464898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40468750" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40468750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468928"/>
        <function-ref name="isInput" scoped="" ref="0x40468a08"/>
        <function-ref name="toggle" scoped="" ref="0x40468ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40468bc8"/>
        <function-ref name="get" scoped="" ref="0x40468ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468d88"/>
        <function-ref name="set" scoped="" ref="0x40468e68"/>
        <function-ref name="clr" scoped="" ref="0x40467010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4046cce8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4046cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046cec0"/>
        <function-ref name="isInput" scoped="" ref="0x4046b010"/>
        <function-ref name="toggle" scoped="" ref="0x4046b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b1d0"/>
        <function-ref name="get" scoped="" ref="0x4046b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b390"/>
        <function-ref name="set" scoped="" ref="0x4046b470"/>
        <function-ref name="clr" scoped="" ref="0x4046b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40452210" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40452210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404523e8"/>
        <function-ref name="isInput" scoped="" ref="0x404524c8"/>
        <function-ref name="toggle" scoped="" ref="0x404525a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40452688"/>
        <function-ref name="get" scoped="" ref="0x40452768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452848"/>
        <function-ref name="set" scoped="" ref="0x40452928"/>
        <function-ref name="clr" scoped="" ref="0x40452a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4045f750" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4045f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f928"/>
        <function-ref name="isInput" scoped="" ref="0x4045fa08"/>
        <function-ref name="toggle" scoped="" ref="0x4045fae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045fbc8"/>
        <function-ref name="get" scoped="" ref="0x4045fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045fd88"/>
        <function-ref name="set" scoped="" ref="0x4045fe68"/>
        <function-ref name="clr" scoped="" ref="0x4045e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x40463ea8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x40463ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404620c0"/>
        <function-ref name="isInput" scoped="" ref="0x404621a0"/>
        <function-ref name="toggle" scoped="" ref="0x40462280"/>
        <function-ref name="isOutput" scoped="" ref="0x40462360"/>
        <function-ref name="get" scoped="" ref="0x40462440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462520"/>
        <function-ref name="set" scoped="" ref="0x40462600"/>
        <function-ref name="clr" scoped="" ref="0x404626e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40466670" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40466670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466848"/>
        <function-ref name="isInput" scoped="" ref="0x40466928"/>
        <function-ref name="toggle" scoped="" ref="0x40466a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40466ae8"/>
        <function-ref name="get" scoped="" ref="0x40466bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40466ca8"/>
        <function-ref name="set" scoped="" ref="0x40466d88"/>
        <function-ref name="clr" scoped="" ref="0x40466e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40471ea8" loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40471ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4046f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4046f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f360"/>
        <function-ref name="get" scoped="" ref="0x4046f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f520"/>
        <function-ref name="set" scoped="" ref="0x4046f600"/>
        <function-ref name="clr" scoped="" ref="0x4046f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404763d0" loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404763d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404765a8"/>
        <function-ref name="isInput" scoped="" ref="0x40476688"/>
        <function-ref name="toggle" scoped="" ref="0x40476768"/>
        <function-ref name="isOutput" scoped="" ref="0x40476848"/>
        <function-ref name="get" scoped="" ref="0x40476928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476a08"/>
        <function-ref name="set" scoped="" ref="0x40476ae8"/>
        <function-ref name="clr" scoped="" ref="0x40476bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40465a98" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40465a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465c70"/>
        <function-ref name="isInput" scoped="" ref="0x40465d50"/>
        <function-ref name="toggle" scoped="" ref="0x40465e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40465f10"/>
        <function-ref name="get" scoped="" ref="0x4046e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e0f0"/>
        <function-ref name="set" scoped="" ref="0x4046e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4046e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4045a0a0" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4045a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a278"/>
        <function-ref name="isInput" scoped="" ref="0x4045a358"/>
        <function-ref name="toggle" scoped="" ref="0x4045a438"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a518"/>
        <function-ref name="get" scoped="" ref="0x4045a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a6d8"/>
        <function-ref name="set" scoped="" ref="0x4045a7b8"/>
        <function-ref name="clr" scoped="" ref="0x4045a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x4045d750" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x4045d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045d928"/>
        <function-ref name="isInput" scoped="" ref="0x4045da08"/>
        <function-ref name="toggle" scoped="" ref="0x4045dae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045dbc8"/>
        <function-ref name="get" scoped="" ref="0x4045dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045dd88"/>
        <function-ref name="set" scoped="" ref="0x4045de68"/>
        <function-ref name="clr" scoped="" ref="0x4045c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40478ee8" loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40478ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404770e0"/>
        <function-ref name="isInput" scoped="" ref="0x404771c0"/>
        <function-ref name="toggle" scoped="" ref="0x404772a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40477380"/>
        <function-ref name="get" scoped="" ref="0x40477460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477540"/>
        <function-ref name="set" scoped="" ref="0x40477620"/>
        <function-ref name="clr" scoped="" ref="0x40477700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4045cc08" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4045cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045cde0"/>
        <function-ref name="isInput" scoped="" ref="0x4045cec0"/>
        <function-ref name="toggle" scoped="" ref="0x4045b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4045b0f0"/>
        <function-ref name="get" scoped="" ref="0x4045b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045b2b0"/>
        <function-ref name="set" scoped="" ref="0x4045b390"/>
        <function-ref name="clr" scoped="" ref="0x4045b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404692f0" loc="73:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404694c8"/>
        <function-ref name="isInput" scoped="" ref="0x404695a8"/>
        <function-ref name="toggle" scoped="" ref="0x40469688"/>
        <function-ref name="isOutput" scoped="" ref="0x40469768"/>
        <function-ref name="get" scoped="" ref="0x40469848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469928"/>
        <function-ref name="set" scoped="" ref="0x40469a08"/>
        <function-ref name="clr" scoped="" ref="0x40469ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4046d8e0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4046d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046dab8"/>
        <function-ref name="isInput" scoped="" ref="0x4046db98"/>
        <function-ref name="toggle" scoped="" ref="0x4046dc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4046dd58"/>
        <function-ref name="get" scoped="" ref="0x4046de38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046df18"/>
        <function-ref name="set" scoped="" ref="0x4046c010"/>
        <function-ref name="clr" scoped="" ref="0x4046c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40472a98" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40472a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472c70"/>
        <function-ref name="isInput" scoped="" ref="0x40472d50"/>
        <function-ref name="toggle" scoped="" ref="0x40472e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40472f10"/>
        <function-ref name="get" scoped="" ref="0x40471010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404710f0"/>
        <function-ref name="set" scoped="" ref="0x404711d0"/>
        <function-ref name="clr" scoped="" ref="0x404712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40459ea8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40459ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404570c0"/>
        <function-ref name="isInput" scoped="" ref="0x404571a0"/>
        <function-ref name="toggle" scoped="" ref="0x40457280"/>
        <function-ref name="isOutput" scoped="" ref="0x40457360"/>
        <function-ref name="get" scoped="" ref="0x40457440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457520"/>
        <function-ref name="set" scoped="" ref="0x40457600"/>
        <function-ref name="clr" scoped="" ref="0x404576e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404562f0" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404564c8"/>
        <function-ref name="isInput" scoped="" ref="0x404565a8"/>
        <function-ref name="toggle" scoped="" ref="0x40456688"/>
        <function-ref name="isOutput" scoped="" ref="0x40456768"/>
        <function-ref name="get" scoped="" ref="0x40456848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40456928"/>
        <function-ref name="set" scoped="" ref="0x40456a08"/>
        <function-ref name="clr" scoped="" ref="0x40456ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x40464a98" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x40464a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464c70"/>
        <function-ref name="isInput" scoped="" ref="0x40464d50"/>
        <function-ref name="toggle" scoped="" ref="0x40464e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40464f10"/>
        <function-ref name="get" scoped="" ref="0x40463010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404630f0"/>
        <function-ref name="set" scoped="" ref="0x404631d0"/>
        <function-ref name="clr" scoped="" ref="0x404632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x40467210" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x40467210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404673e8"/>
        <function-ref name="isInput" scoped="" ref="0x404674c8"/>
        <function-ref name="toggle" scoped="" ref="0x404675a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40467688"/>
        <function-ref name="get" scoped="" ref="0x40467768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40467848"/>
        <function-ref name="set" scoped="" ref="0x40467928"/>
        <function-ref name="clr" scoped="" ref="0x40467a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4046b750" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4046b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b928"/>
        <function-ref name="isInput" scoped="" ref="0x4046ba08"/>
        <function-ref name="toggle" scoped="" ref="0x4046bae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046bbc8"/>
        <function-ref name="get" scoped="" ref="0x4046bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046bd88"/>
        <function-ref name="set" scoped="" ref="0x4046be68"/>
        <function-ref name="clr" scoped="" ref="0x4046a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40452c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40452c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452de0"/>
        <function-ref name="isInput" scoped="" ref="0x40452ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40451010"/>
        <function-ref name="isOutput" scoped="" ref="0x404510f0"/>
        <function-ref name="get" scoped="" ref="0x404511d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404512b0"/>
        <function-ref name="set" scoped="" ref="0x40451390"/>
        <function-ref name="clr" scoped="" ref="0x40451470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4045e210" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4045e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045e468"/>
        <function-ref name="isInput" scoped="" ref="0x4045e548"/>
        <function-ref name="toggle" scoped="" ref="0x4045e628"/>
        <function-ref name="isOutput" scoped="" ref="0x4045e708"/>
        <function-ref name="get" scoped="" ref="0x4045e7e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045e8c8"/>
        <function-ref name="set" scoped="" ref="0x4045e9a8"/>
        <function-ref name="clr" scoped="" ref="0x4045ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404628e0" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404628e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40462ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40462b98"/>
        <function-ref name="toggle" scoped="" ref="0x40462c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40462d58"/>
        <function-ref name="get" scoped="" ref="0x40462e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462f18"/>
        <function-ref name="set" scoped="" ref="0x40461010"/>
        <function-ref name="clr" scoped="" ref="0x404610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4046f8e0" loc="96:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4046f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046fab8"/>
        <function-ref name="isInput" scoped="" ref="0x4046fb98"/>
        <function-ref name="toggle" scoped="" ref="0x4046fc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fd58"/>
        <function-ref name="get" scoped="" ref="0x4046fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ff18"/>
        <function-ref name="set" scoped="" ref="0x40478010"/>
        <function-ref name="clr" scoped="" ref="0x404780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40461ce8" loc="71:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40461ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460010"/>
        <function-ref name="isInput" scoped="" ref="0x404600f0"/>
        <function-ref name="toggle" scoped="" ref="0x404601d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404602b0"/>
        <function-ref name="get" scoped="" ref="0x40460390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460470"/>
        <function-ref name="set" scoped="" ref="0x40460550"/>
        <function-ref name="clr" scoped="" ref="0x40460630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4046e4b0" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4046e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e688"/>
        <function-ref name="isInput" scoped="" ref="0x4046e768"/>
        <function-ref name="toggle" scoped="" ref="0x4046e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e928"/>
        <function-ref name="get" scoped="" ref="0x4046ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046eae8"/>
        <function-ref name="set" scoped="" ref="0x4046ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4046eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40473670" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40473670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473848"/>
        <function-ref name="isInput" scoped="" ref="0x40473928"/>
        <function-ref name="toggle" scoped="" ref="0x40473a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40473ae8"/>
        <function-ref name="get" scoped="" ref="0x40473bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473ca8"/>
        <function-ref name="set" scoped="" ref="0x40473d88"/>
        <function-ref name="clr" scoped="" ref="0x40473e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40476dc8" loc="102:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40476dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475010"/>
        <function-ref name="isInput" scoped="" ref="0x404750f0"/>
        <function-ref name="toggle" scoped="" ref="0x404751d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404752b0"/>
        <function-ref name="get" scoped="" ref="0x40475390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475470"/>
        <function-ref name="set" scoped="" ref="0x40475550"/>
        <function-ref name="clr" scoped="" ref="0x40475630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4045aa98" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4045aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045ac70"/>
        <function-ref name="isInput" scoped="" ref="0x4045ad50"/>
        <function-ref name="toggle" scoped="" ref="0x4045ae30"/>
        <function-ref name="isOutput" scoped="" ref="0x4045af10"/>
        <function-ref name="get" scoped="" ref="0x40459010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404590f0"/>
        <function-ref name="set" scoped="" ref="0x404591d0"/>
        <function-ref name="clr" scoped="" ref="0x404592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4045c210" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4045c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045c3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4045c4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4045c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045c688"/>
        <function-ref name="get" scoped="" ref="0x4045c768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c848"/>
        <function-ref name="set" scoped="" ref="0x4045c928"/>
        <function-ref name="clr" scoped="" ref="0x4045ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x4046a210" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x4046a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4046a4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4046a5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a688"/>
        <function-ref name="get" scoped="" ref="0x4046a768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a848"/>
        <function-ref name="set" scoped="" ref="0x4046a928"/>
        <function-ref name="clr" scoped="" ref="0x4046aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4045b670" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4045b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045b848"/>
        <function-ref name="isInput" scoped="" ref="0x4045b928"/>
        <function-ref name="toggle" scoped="" ref="0x4045ba08"/>
        <function-ref name="isOutput" scoped="" ref="0x4045bae8"/>
        <function-ref name="get" scoped="" ref="0x4045bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045bca8"/>
        <function-ref name="set" scoped="" ref="0x4045bd88"/>
        <function-ref name="clr" scoped="" ref="0x4045be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40469ce8" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40469ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40468010"/>
        <function-ref name="toggle" scoped="" ref="0x404680f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404681d0"/>
        <function-ref name="get" scoped="" ref="0x404682b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468390"/>
        <function-ref name="set" scoped="" ref="0x40468470"/>
        <function-ref name="clr" scoped="" ref="0x40468550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4046c2f0" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4046c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4046c5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4046c688"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c768"/>
        <function-ref name="get" scoped="" ref="0x4046c848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c928"/>
        <function-ref name="set" scoped="" ref="0x4046ca08"/>
        <function-ref name="clr" scoped="" ref="0x4046cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404714b0" loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404714b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471688"/>
        <function-ref name="isInput" scoped="" ref="0x40471768"/>
        <function-ref name="toggle" scoped="" ref="0x40471848"/>
        <function-ref name="isOutput" scoped="" ref="0x40471928"/>
        <function-ref name="get" scoped="" ref="0x40471a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471ae8"/>
        <function-ref name="set" scoped="" ref="0x40471bc8"/>
        <function-ref name="clr" scoped="" ref="0x40471ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404477f0" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404477f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404479c8"/>
        <function-ref name="isInput" scoped="" ref="0x40447aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40447b88"/>
        <function-ref name="isOutput" scoped="" ref="0x40447c68"/>
        <function-ref name="get" scoped="" ref="0x40447d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447e28"/>
        <function-ref name="set" scoped="" ref="0x40447f08"/>
        <function-ref name="clr" scoped="" ref="0x40452010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40456ce8" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40456ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40456ec0"/>
        <function-ref name="isInput" scoped="" ref="0x4045f010"/>
        <function-ref name="toggle" scoped="" ref="0x4045f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f1d0"/>
        <function-ref name="get" scoped="" ref="0x4045f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f390"/>
        <function-ref name="set" scoped="" ref="0x4045f470"/>
        <function-ref name="clr" scoped="" ref="0x4045f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404634b0" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404634b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463688"/>
        <function-ref name="isInput" scoped="" ref="0x40463768"/>
        <function-ref name="toggle" scoped="" ref="0x40463848"/>
        <function-ref name="isOutput" scoped="" ref="0x40463928"/>
        <function-ref name="get" scoped="" ref="0x40463a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463ae8"/>
        <function-ref name="set" scoped="" ref="0x40463bc8"/>
        <function-ref name="clr" scoped="" ref="0x40463ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40467c08" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40467c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467de0"/>
        <function-ref name="isInput" scoped="" ref="0x40467ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40466010"/>
        <function-ref name="isOutput" scoped="" ref="0x404660f0"/>
        <function-ref name="get" scoped="" ref="0x404661d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404662b0"/>
        <function-ref name="set" scoped="" ref="0x40466390"/>
        <function-ref name="clr" scoped="" ref="0x40466470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40477900" loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40477900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477ad8"/>
        <function-ref name="isInput" scoped="" ref="0x40477bb8"/>
        <function-ref name="toggle" scoped="" ref="0x40477c98"/>
        <function-ref name="isOutput" scoped="" ref="0x40477d78"/>
        <function-ref name="get" scoped="" ref="0x40477e58"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476010"/>
        <function-ref name="set" scoped="" ref="0x404760f0"/>
        <function-ref name="clr" scoped="" ref="0x404761d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404650a0" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465278"/>
        <function-ref name="isInput" scoped="" ref="0x40465358"/>
        <function-ref name="toggle" scoped="" ref="0x40465438"/>
        <function-ref name="isOutput" scoped="" ref="0x40465518"/>
        <function-ref name="get" scoped="" ref="0x404655f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404656d8"/>
        <function-ref name="set" scoped="" ref="0x404657b8"/>
        <function-ref name="clr" scoped="" ref="0x40465898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404612f0" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404614c8"/>
        <function-ref name="isInput" scoped="" ref="0x404615a8"/>
        <function-ref name="toggle" scoped="" ref="0x40461688"/>
        <function-ref name="isOutput" scoped="" ref="0x40461768"/>
        <function-ref name="get" scoped="" ref="0x40461848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40461928"/>
        <function-ref name="set" scoped="" ref="0x40461a08"/>
        <function-ref name="clr" scoped="" ref="0x40461ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40451670" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40451670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451848"/>
        <function-ref name="isInput" scoped="" ref="0x40451928"/>
        <function-ref name="toggle" scoped="" ref="0x40451a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40451ae8"/>
        <function-ref name="get" scoped="" ref="0x40451bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451ca8"/>
        <function-ref name="set" scoped="" ref="0x40451d88"/>
        <function-ref name="clr" scoped="" ref="0x40451e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x4045ec88" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x4045ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045ee60"/>
        <function-ref name="isInput" scoped="" ref="0x4045d010"/>
        <function-ref name="toggle" scoped="" ref="0x4045d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045d1d0"/>
        <function-ref name="get" scoped="" ref="0x4045d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045d390"/>
        <function-ref name="set" scoped="" ref="0x4045d470"/>
        <function-ref name="clr" scoped="" ref="0x4045d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4049de48" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4049de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049c050"/>
        <function-ref name="isInput" scoped="" ref="0x4049c130"/>
        <function-ref name="toggle" scoped="" ref="0x4049c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4049c2f0"/>
        <function-ref name="get" scoped="" ref="0x4049c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049c4b0"/>
        <function-ref name="set" scoped="" ref="0x4049c590"/>
        <function-ref name="clr" scoped="" ref="0x4049c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404a7ac8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404a7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a7ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404a7d80"/>
        <function-ref name="toggle" scoped="" ref="0x404a7e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404a6010"/>
        <function-ref name="get" scoped="" ref="0x404a60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a61d0"/>
        <function-ref name="set" scoped="" ref="0x404a62b0"/>
        <function-ref name="clr" scoped="" ref="0x404a6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4049eb18" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4049eb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049ecf0"/>
        <function-ref name="isInput" scoped="" ref="0x4049edd0"/>
        <function-ref name="toggle" scoped="" ref="0x4049eeb0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049d010"/>
        <function-ref name="get" scoped="" ref="0x4049d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049d1d0"/>
        <function-ref name="set" scoped="" ref="0x4049d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4049d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4049c7d0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4049c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4049ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4049cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4049cc48"/>
        <function-ref name="get" scoped="" ref="0x4049cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049ce08"/>
        <function-ref name="set" scoped="" ref="0x4049cee8"/>
        <function-ref name="clr" scoped="" ref="0x404a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404a64f0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404a64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a66c8"/>
        <function-ref name="isInput" scoped="" ref="0x404a67a8"/>
        <function-ref name="toggle" scoped="" ref="0x404a6888"/>
        <function-ref name="isOutput" scoped="" ref="0x404a6968"/>
        <function-ref name="get" scoped="" ref="0x404a6a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a6b28"/>
        <function-ref name="set" scoped="" ref="0x404a6c08"/>
        <function-ref name="clr" scoped="" ref="0x404a6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4049d4f0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4049d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4049d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4049d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4049d968"/>
        <function-ref name="get" scoped="" ref="0x4049da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049db28"/>
        <function-ref name="set" scoped="" ref="0x4049dc08"/>
        <function-ref name="clr" scoped="" ref="0x4049dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404a7170" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404a7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a7348"/>
        <function-ref name="isInput" scoped="" ref="0x404a7428"/>
        <function-ref name="toggle" scoped="" ref="0x404a7508"/>
        <function-ref name="isOutput" scoped="" ref="0x404a75e8"/>
        <function-ref name="get" scoped="" ref="0x404a76c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a77a8"/>
        <function-ref name="set" scoped="" ref="0x404a7888"/>
        <function-ref name="clr" scoped="" ref="0x404a7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404a6e48" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404a6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a5050"/>
        <function-ref name="isInput" scoped="" ref="0x404a5130"/>
        <function-ref name="toggle" scoped="" ref="0x404a5210"/>
        <function-ref name="isOutput" scoped="" ref="0x404a52f0"/>
        <function-ref name="get" scoped="" ref="0x404a53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a54b0"/>
        <function-ref name="set" scoped="" ref="0x404a5590"/>
        <function-ref name="clr" scoped="" ref="0x404a5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea3538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea3710"/>
        <function-ref name="isInput" scoped="" ref="0x40ea37f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea39b0"/>
        <function-ref name="get" scoped="" ref="0x40ea3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea3b70"/>
        <function-ref name="set" scoped="" ref="0x40ea3c50"/>
        <function-ref name="clr" scoped="" ref="0x40ea3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea1010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea11e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ea12c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ea13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea1488"/>
        <function-ref name="get" scoped="" ref="0x40ea1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea1648"/>
        <function-ref name="set" scoped="" ref="0x40ea1728"/>
        <function-ref name="clr" scoped="" ref="0x40ea1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea09e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ea0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea0e60"/>
        <function-ref name="get" scoped="" ref="0x40e9f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9f0f0"/>
        <function-ref name="set" scoped="" ref="0x40e9f1d0"/>
        <function-ref name="clr" scoped="" ref="0x40e9f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9e538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9e710"/>
        <function-ref name="isInput" scoped="" ref="0x40e9e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e9e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9e9b0"/>
        <function-ref name="get" scoped="" ref="0x40e9ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9eb70"/>
        <function-ref name="set" scoped="" ref="0x40e9ec50"/>
        <function-ref name="clr" scoped="" ref="0x40e9ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9c010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e9c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e9c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9c488"/>
        <function-ref name="get" scoped="" ref="0x40e9c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9c648"/>
        <function-ref name="set" scoped="" ref="0x40e9c728"/>
        <function-ref name="clr" scoped="" ref="0x40e9c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9b9e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e9bca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e9bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9be60"/>
        <function-ref name="get" scoped="" ref="0x40e9a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e9a0f0"/>
        <function-ref name="set" scoped="" ref="0x40e9a1d0"/>
        <function-ref name="clr" scoped="" ref="0x40e9a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e99538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e99538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e99710"/>
        <function-ref name="isInput" scoped="" ref="0x40e997f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e998d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e999b0"/>
        <function-ref name="get" scoped="" ref="0x40e99a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e99b70"/>
        <function-ref name="set" scoped="" ref="0x40e99c50"/>
        <function-ref name="clr" scoped="" ref="0x40e99d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e97010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e97010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e971e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e972c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e973a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e97488"/>
        <function-ref name="get" scoped="" ref="0x40e97568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e97648"/>
        <function-ref name="set" scoped="" ref="0x40e97728"/>
        <function-ref name="clr" scoped="" ref="0x40e97808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404ac6b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404ac6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac888"/>
        <function-ref name="isInput" scoped="" ref="0x404ac968"/>
        <function-ref name="toggle" scoped="" ref="0x404aca48"/>
        <function-ref name="isOutput" scoped="" ref="0x404acb28"/>
        <function-ref name="get" scoped="" ref="0x404acc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404acce8"/>
        <function-ref name="set" scoped="" ref="0x404acdc8"/>
        <function-ref name="clr" scoped="" ref="0x404acea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404aa330" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404aa330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa508"/>
        <function-ref name="isInput" scoped="" ref="0x404aa5e8"/>
        <function-ref name="toggle" scoped="" ref="0x404aa6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa7a8"/>
        <function-ref name="get" scoped="" ref="0x404aa888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa968"/>
        <function-ref name="set" scoped="" ref="0x404aaa48"/>
        <function-ref name="clr" scoped="" ref="0x404aab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404a23d8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404a23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a25b0"/>
        <function-ref name="isInput" scoped="" ref="0x404a2690"/>
        <function-ref name="toggle" scoped="" ref="0x404a2770"/>
        <function-ref name="isOutput" scoped="" ref="0x404a2850"/>
        <function-ref name="get" scoped="" ref="0x404a2930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a2a10"/>
        <function-ref name="set" scoped="" ref="0x404a2af0"/>
        <function-ref name="clr" scoped="" ref="0x404a2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404ab030" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404ab030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab208"/>
        <function-ref name="isInput" scoped="" ref="0x404ab2e8"/>
        <function-ref name="toggle" scoped="" ref="0x404ab3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab4a8"/>
        <function-ref name="get" scoped="" ref="0x404ab588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab668"/>
        <function-ref name="set" scoped="" ref="0x404ab748"/>
        <function-ref name="clr" scoped="" ref="0x404ab828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404aac88" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404aac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aae60"/>
        <function-ref name="isInput" scoped="" ref="0x404a9010"/>
        <function-ref name="toggle" scoped="" ref="0x404a90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a91d0"/>
        <function-ref name="get" scoped="" ref="0x404a92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a9390"/>
        <function-ref name="set" scoped="" ref="0x404a9470"/>
        <function-ref name="clr" scoped="" ref="0x404a9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404a2d30" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404a2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a2f08"/>
        <function-ref name="isInput" scoped="" ref="0x404ac010"/>
        <function-ref name="toggle" scoped="" ref="0x404ac0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac1d0"/>
        <function-ref name="get" scoped="" ref="0x404ac2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac390"/>
        <function-ref name="set" scoped="" ref="0x404ac470"/>
        <function-ref name="clr" scoped="" ref="0x404ac550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404ab988" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404ab988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404abb60"/>
        <function-ref name="isInput" scoped="" ref="0x404abc40"/>
        <function-ref name="toggle" scoped="" ref="0x404abd20"/>
        <function-ref name="isOutput" scoped="" ref="0x404abe00"/>
        <function-ref name="get" scoped="" ref="0x404abee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa010"/>
        <function-ref name="set" scoped="" ref="0x404aa0f0"/>
        <function-ref name="clr" scoped="" ref="0x404aa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404a96b0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404a96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a9888"/>
        <function-ref name="isInput" scoped="" ref="0x404a9968"/>
        <function-ref name="toggle" scoped="" ref="0x404a9a48"/>
        <function-ref name="isOutput" scoped="" ref="0x404a9b28"/>
        <function-ref name="get" scoped="" ref="0x404a9c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a9ce8"/>
        <function-ref name="set" scoped="" ref="0x404a9dc8"/>
        <function-ref name="clr" scoped="" ref="0x404a9ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed3418" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed3418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed35f0"/>
        <function-ref name="isInput" scoped="" ref="0x40ed36d0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed37b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed3890"/>
        <function-ref name="get" scoped="" ref="0x40ed3970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed3a50"/>
        <function-ref name="set" scoped="" ref="0x40ed3b30"/>
        <function-ref name="clr" scoped="" ref="0x40ed3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed2de0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed1010"/>
        <function-ref name="isInput" scoped="" ref="0x40ed10f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed12b0"/>
        <function-ref name="get" scoped="" ref="0x40ed1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed1470"/>
        <function-ref name="set" scoped="" ref="0x40ed1550"/>
        <function-ref name="clr" scoped="" ref="0x40ed1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed07f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed07f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed09d0"/>
        <function-ref name="isInput" scoped="" ref="0x40ed0ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed0b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed0c70"/>
        <function-ref name="get" scoped="" ref="0x40ed0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed0e30"/>
        <function-ref name="set" scoped="" ref="0x40ed0f10"/>
        <function-ref name="clr" scoped="" ref="0x40ece010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ecd228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ecd228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ecd400"/>
        <function-ref name="isInput" scoped="" ref="0x40ecd4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ecd5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ecd6a0"/>
        <function-ref name="get" scoped="" ref="0x40ecd780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecd860"/>
        <function-ref name="set" scoped="" ref="0x40ecd940"/>
        <function-ref name="clr" scoped="" ref="0x40ecda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eccc08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eccc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eccde0"/>
        <function-ref name="isInput" scoped="" ref="0x40eccec0"/>
        <function-ref name="toggle" scoped="" ref="0x40ecb010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ecb0f0"/>
        <function-ref name="get" scoped="" ref="0x40ecb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecb2b0"/>
        <function-ref name="set" scoped="" ref="0x40ecb390"/>
        <function-ref name="clr" scoped="" ref="0x40ecb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eca6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eca6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eca898"/>
        <function-ref name="isInput" scoped="" ref="0x40eca978"/>
        <function-ref name="toggle" scoped="" ref="0x40ecaa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40ecab38"/>
        <function-ref name="get" scoped="" ref="0x40ecac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ecacf8"/>
        <function-ref name="set" scoped="" ref="0x40ecadd8"/>
        <function-ref name="clr" scoped="" ref="0x40ecaeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec80b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec80b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec8288"/>
        <function-ref name="isInput" scoped="" ref="0x40ec8368"/>
        <function-ref name="toggle" scoped="" ref="0x40ec8448"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec8528"/>
        <function-ref name="get" scoped="" ref="0x40ec8608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec86e8"/>
        <function-ref name="set" scoped="" ref="0x40ec87c8"/>
        <function-ref name="clr" scoped="" ref="0x40ec88a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec7a88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec7c60"/>
        <function-ref name="isInput" scoped="" ref="0x40ec7d40"/>
        <function-ref name="toggle" scoped="" ref="0x40ec7e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec7f00"/>
        <function-ref name="get" scoped="" ref="0x40ec6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec60f0"/>
        <function-ref name="set" scoped="" ref="0x40ec61d0"/>
        <function-ref name="clr" scoped="" ref="0x40ec62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b0170" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0348"/>
        <function-ref name="isInput" scoped="" ref="0x404b0428"/>
        <function-ref name="toggle" scoped="" ref="0x404b0508"/>
        <function-ref name="isOutput" scoped="" ref="0x404b05e8"/>
        <function-ref name="get" scoped="" ref="0x404b06c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b07a8"/>
        <function-ref name="set" scoped="" ref="0x404b0888"/>
        <function-ref name="clr" scoped="" ref="0x404b0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404afe48" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404afe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae050"/>
        <function-ref name="isInput" scoped="" ref="0x404ae130"/>
        <function-ref name="toggle" scoped="" ref="0x404ae210"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae2f0"/>
        <function-ref name="get" scoped="" ref="0x404ae3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae4b0"/>
        <function-ref name="set" scoped="" ref="0x404ae590"/>
        <function-ref name="clr" scoped="" ref="0x404ae670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404b2dc8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404b2dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1010"/>
        <function-ref name="isInput" scoped="" ref="0x404b10f0"/>
        <function-ref name="toggle" scoped="" ref="0x404b11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b12b0"/>
        <function-ref name="get" scoped="" ref="0x404b1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1470"/>
        <function-ref name="set" scoped="" ref="0x404b1550"/>
        <function-ref name="clr" scoped="" ref="0x404b1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404b0ac8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404b0ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404b0d80"/>
        <function-ref name="toggle" scoped="" ref="0x404b0e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404af010"/>
        <function-ref name="get" scoped="" ref="0x404af0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af1d0"/>
        <function-ref name="set" scoped="" ref="0x404af2b0"/>
        <function-ref name="clr" scoped="" ref="0x404af390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404ae7d0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404ae7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae9a8"/>
        <function-ref name="isInput" scoped="" ref="0x404aea88"/>
        <function-ref name="toggle" scoped="" ref="0x404aeb68"/>
        <function-ref name="isOutput" scoped="" ref="0x404aec48"/>
        <function-ref name="get" scoped="" ref="0x404aed28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aee08"/>
        <function-ref name="set" scoped="" ref="0x404aeee8"/>
        <function-ref name="clr" scoped="" ref="0x404b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b1790" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1968"/>
        <function-ref name="isInput" scoped="" ref="0x404b1a48"/>
        <function-ref name="toggle" scoped="" ref="0x404b1b28"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1c08"/>
        <function-ref name="get" scoped="" ref="0x404b1ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1dc8"/>
        <function-ref name="set" scoped="" ref="0x404b1ea8"/>
        <function-ref name="clr" scoped="" ref="0x404b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404af4f0" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404af4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404af7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404af888"/>
        <function-ref name="isOutput" scoped="" ref="0x404af968"/>
        <function-ref name="get" scoped="" ref="0x404afa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404afb28"/>
        <function-ref name="set" scoped="" ref="0x404afc08"/>
        <function-ref name="clr" scoped="" ref="0x404afce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404b8170" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404b8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8348"/>
        <function-ref name="isInput" scoped="" ref="0x404b8428"/>
        <function-ref name="toggle" scoped="" ref="0x404b8508"/>
        <function-ref name="isOutput" scoped="" ref="0x404b85e8"/>
        <function-ref name="get" scoped="" ref="0x404b86c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b87a8"/>
        <function-ref name="set" scoped="" ref="0x404b8888"/>
        <function-ref name="clr" scoped="" ref="0x404b8968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f06de8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f06de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f02010"/>
        <function-ref name="isInput" scoped="" ref="0x40f020f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f021d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f022b0"/>
        <function-ref name="get" scoped="" ref="0x40f02390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f02470"/>
        <function-ref name="set" scoped="" ref="0x40f02550"/>
        <function-ref name="clr" scoped="" ref="0x40f02630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f017f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f017f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f019d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f01ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f01b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f01c70"/>
        <function-ref name="get" scoped="" ref="0x40f01d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f01e30"/>
        <function-ref name="set" scoped="" ref="0x40f01f10"/>
        <function-ref name="clr" scoped="" ref="0x40f00010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eff228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eff228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eff400"/>
        <function-ref name="isInput" scoped="" ref="0x40eff4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40eff5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eff6a0"/>
        <function-ref name="get" scoped="" ref="0x40eff780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eff860"/>
        <function-ref name="set" scoped="" ref="0x40eff940"/>
        <function-ref name="clr" scoped="" ref="0x40effa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40efec08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40efec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40efede0"/>
        <function-ref name="isInput" scoped="" ref="0x40efeec0"/>
        <function-ref name="toggle" scoped="" ref="0x40efd010"/>
        <function-ref name="isOutput" scoped="" ref="0x40efd0f0"/>
        <function-ref name="get" scoped="" ref="0x40efd1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40efd2b0"/>
        <function-ref name="set" scoped="" ref="0x40efd390"/>
        <function-ref name="clr" scoped="" ref="0x40efd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40efc6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40efc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40efc898"/>
        <function-ref name="isInput" scoped="" ref="0x40efc978"/>
        <function-ref name="toggle" scoped="" ref="0x40efca58"/>
        <function-ref name="isOutput" scoped="" ref="0x40efcb38"/>
        <function-ref name="get" scoped="" ref="0x40efcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40efccf8"/>
        <function-ref name="set" scoped="" ref="0x40efcdd8"/>
        <function-ref name="clr" scoped="" ref="0x40efceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40efa0b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40efa0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40efa288"/>
        <function-ref name="isInput" scoped="" ref="0x40efa368"/>
        <function-ref name="toggle" scoped="" ref="0x40efa448"/>
        <function-ref name="isOutput" scoped="" ref="0x40efa528"/>
        <function-ref name="get" scoped="" ref="0x40efa608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40efa6e8"/>
        <function-ref name="set" scoped="" ref="0x40efa7c8"/>
        <function-ref name="clr" scoped="" ref="0x40efa8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ef9a88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ef9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ef9c60"/>
        <function-ref name="isInput" scoped="" ref="0x40ef9d40"/>
        <function-ref name="toggle" scoped="" ref="0x40ef9e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40ef9f00"/>
        <function-ref name="get" scoped="" ref="0x40ef8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ef80f0"/>
        <function-ref name="set" scoped="" ref="0x40ef81d0"/>
        <function-ref name="clr" scoped="" ref="0x40ef82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ef7538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ef7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ef7710"/>
        <function-ref name="isInput" scoped="" ref="0x40ef77f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ef78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ef79b0"/>
        <function-ref name="get" scoped="" ref="0x40ef7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ef7b70"/>
        <function-ref name="set" scoped="" ref="0x40ef7c50"/>
        <function-ref name="clr" scoped="" ref="0x40ef7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b49e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4bc0"/>
        <function-ref name="isInput" scoped="" ref="0x404b4ca0"/>
        <function-ref name="toggle" scoped="" ref="0x404b4d80"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4e60"/>
        <function-ref name="get" scoped="" ref="0x404bf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bf0f0"/>
        <function-ref name="set" scoped="" ref="0x404bf1d0"/>
        <function-ref name="clr" scoped="" ref="0x404bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404be790" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404be790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be968"/>
        <function-ref name="isInput" scoped="" ref="0x404bea48"/>
        <function-ref name="toggle" scoped="" ref="0x404beb28"/>
        <function-ref name="isOutput" scoped="" ref="0x404bec08"/>
        <function-ref name="get" scoped="" ref="0x404bece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bedc8"/>
        <function-ref name="set" scoped="" ref="0x404beea8"/>
        <function-ref name="clr" scoped="" ref="0x404bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404b56f8" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404b56f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b58d0"/>
        <function-ref name="isInput" scoped="" ref="0x404b59b0"/>
        <function-ref name="toggle" scoped="" ref="0x404b5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5b70"/>
        <function-ref name="get" scoped="" ref="0x404b5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b5d30"/>
        <function-ref name="set" scoped="" ref="0x404b5e10"/>
        <function-ref name="clr" scoped="" ref="0x404b5ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404bf410" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404bf410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bf5e8"/>
        <function-ref name="isInput" scoped="" ref="0x404bf6c8"/>
        <function-ref name="toggle" scoped="" ref="0x404bf7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bf888"/>
        <function-ref name="get" scoped="" ref="0x404bf968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bfa48"/>
        <function-ref name="set" scoped="" ref="0x404bfb28"/>
        <function-ref name="clr" scoped="" ref="0x404bfc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404bd170" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404bd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd348"/>
        <function-ref name="isInput" scoped="" ref="0x404bd428"/>
        <function-ref name="toggle" scoped="" ref="0x404bd508"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd5e8"/>
        <function-ref name="get" scoped="" ref="0x404bd6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd7a8"/>
        <function-ref name="set" scoped="" ref="0x404bd888"/>
        <function-ref name="clr" scoped="" ref="0x404bd968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b4090" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b4090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4268"/>
        <function-ref name="isInput" scoped="" ref="0x404b4348"/>
        <function-ref name="toggle" scoped="" ref="0x404b4428"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4508"/>
        <function-ref name="get" scoped="" ref="0x404b45e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b46c8"/>
        <function-ref name="set" scoped="" ref="0x404b47a8"/>
        <function-ref name="clr" scoped="" ref="0x404b4888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404bfd68" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404bfd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be010"/>
        <function-ref name="isInput" scoped="" ref="0x404be0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404be1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404be2b0"/>
        <function-ref name="get" scoped="" ref="0x404be390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be470"/>
        <function-ref name="set" scoped="" ref="0x404be550"/>
        <function-ref name="clr" scoped="" ref="0x404be630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404bdac8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404bdac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bdca0"/>
        <function-ref name="isInput" scoped="" ref="0x404bdd80"/>
        <function-ref name="toggle" scoped="" ref="0x404bde60"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc010"/>
        <function-ref name="get" scoped="" ref="0x404bc0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc1d0"/>
        <function-ref name="set" scoped="" ref="0x404bc2b0"/>
        <function-ref name="clr" scoped="" ref="0x404bc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f36938" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f36938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f36b10"/>
        <function-ref name="isInput" scoped="" ref="0x40f36bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40f36cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f36db0"/>
        <function-ref name="get" scoped="" ref="0x40f36e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f34010"/>
        <function-ref name="set" scoped="" ref="0x40f340f0"/>
        <function-ref name="clr" scoped="" ref="0x40f341d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f333b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f333b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f33588"/>
        <function-ref name="isInput" scoped="" ref="0x40f33668"/>
        <function-ref name="toggle" scoped="" ref="0x40f33748"/>
        <function-ref name="isOutput" scoped="" ref="0x40f33828"/>
        <function-ref name="get" scoped="" ref="0x40f33908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f339e8"/>
        <function-ref name="set" scoped="" ref="0x40f33ac8"/>
        <function-ref name="clr" scoped="" ref="0x40f33ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f32d70" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f32d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f31010"/>
        <function-ref name="isInput" scoped="" ref="0x40f310f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f311d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f312b0"/>
        <function-ref name="get" scoped="" ref="0x40f31390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f31470"/>
        <function-ref name="set" scoped="" ref="0x40f31550"/>
        <function-ref name="clr" scoped="" ref="0x40f31630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f307f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f307f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f309d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f30ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f30b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f30c70"/>
        <function-ref name="get" scoped="" ref="0x40f30d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f30e30"/>
        <function-ref name="set" scoped="" ref="0x40f30f10"/>
        <function-ref name="clr" scoped="" ref="0x40f2f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f2e228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f2e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2e400"/>
        <function-ref name="isInput" scoped="" ref="0x40f2e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f2e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f2e6a0"/>
        <function-ref name="get" scoped="" ref="0x40f2e780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f2e860"/>
        <function-ref name="set" scoped="" ref="0x40f2e940"/>
        <function-ref name="clr" scoped="" ref="0x40f2ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f2dc08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f2dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2dde0"/>
        <function-ref name="isInput" scoped="" ref="0x40f2dec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f2c010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f2c0f0"/>
        <function-ref name="get" scoped="" ref="0x40f2c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f2c2b0"/>
        <function-ref name="set" scoped="" ref="0x40f2c390"/>
        <function-ref name="clr" scoped="" ref="0x40f2c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f2b6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f2b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2b898"/>
        <function-ref name="isInput" scoped="" ref="0x40f2b978"/>
        <function-ref name="toggle" scoped="" ref="0x40f2ba58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f2bb38"/>
        <function-ref name="get" scoped="" ref="0x40f2bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f2bcf8"/>
        <function-ref name="set" scoped="" ref="0x40f2bdd8"/>
        <function-ref name="clr" scoped="" ref="0x40f2beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f5f0b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f5f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f5f288"/>
        <function-ref name="isInput" scoped="" ref="0x40f5f368"/>
        <function-ref name="toggle" scoped="" ref="0x40f5f448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f5f528"/>
        <function-ref name="get" scoped="" ref="0x40f5f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f5f6e8"/>
        <function-ref name="set" scoped="" ref="0x40f5f7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f5f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404c3410" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404c3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c35e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c36c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c37a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3888"/>
        <function-ref name="get" scoped="" ref="0x404c3968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c3a48"/>
        <function-ref name="set" scoped="" ref="0x404c3b28"/>
        <function-ref name="clr" scoped="" ref="0x404c3c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c1170" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1348"/>
        <function-ref name="isInput" scoped="" ref="0x404c1428"/>
        <function-ref name="toggle" scoped="" ref="0x404c1508"/>
        <function-ref name="isOutput" scoped="" ref="0x404c15e8"/>
        <function-ref name="get" scoped="" ref="0x404c16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c17a8"/>
        <function-ref name="set" scoped="" ref="0x404c1888"/>
        <function-ref name="clr" scoped="" ref="0x404c1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404c4128" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404c4128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4300"/>
        <function-ref name="isInput" scoped="" ref="0x404c43e0"/>
        <function-ref name="toggle" scoped="" ref="0x404c44c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c45a0"/>
        <function-ref name="get" scoped="" ref="0x404c4680"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4760"/>
        <function-ref name="set" scoped="" ref="0x404c4840"/>
        <function-ref name="clr" scoped="" ref="0x404c4920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404c3d68" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404c3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c2010"/>
        <function-ref name="isInput" scoped="" ref="0x404c20f0"/>
        <function-ref name="toggle" scoped="" ref="0x404c21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c22b0"/>
        <function-ref name="get" scoped="" ref="0x404c2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2470"/>
        <function-ref name="set" scoped="" ref="0x404c2550"/>
        <function-ref name="clr" scoped="" ref="0x404c2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c1ac8" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404c1d80"/>
        <function-ref name="toggle" scoped="" ref="0x404c1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0010"/>
        <function-ref name="get" scoped="" ref="0x404c00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c01d0"/>
        <function-ref name="set" scoped="" ref="0x404c02b0"/>
        <function-ref name="clr" scoped="" ref="0x404c0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404c4a80" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404c4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4c58"/>
        <function-ref name="isInput" scoped="" ref="0x404c4d38"/>
        <function-ref name="toggle" scoped="" ref="0x404c4e18"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4ef8"/>
        <function-ref name="get" scoped="" ref="0x404c3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c30f0"/>
        <function-ref name="set" scoped="" ref="0x404c31d0"/>
        <function-ref name="clr" scoped="" ref="0x404c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404c2790" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404c2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c2968"/>
        <function-ref name="isInput" scoped="" ref="0x404c2a48"/>
        <function-ref name="toggle" scoped="" ref="0x404c2b28"/>
        <function-ref name="isOutput" scoped="" ref="0x404c2c08"/>
        <function-ref name="get" scoped="" ref="0x404c2ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2dc8"/>
        <function-ref name="set" scoped="" ref="0x404c2ea8"/>
        <function-ref name="clr" scoped="" ref="0x404c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c04f0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c06c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c07a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c0888"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0968"/>
        <function-ref name="get" scoped="" ref="0x404c0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0b28"/>
        <function-ref name="set" scoped="" ref="0x404c0c08"/>
        <function-ref name="clr" scoped="" ref="0x404c0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f69538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f69538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f69710"/>
        <function-ref name="isInput" scoped="" ref="0x40f697f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f698d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f699b0"/>
        <function-ref name="get" scoped="" ref="0x40f69a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f69b70"/>
        <function-ref name="set" scoped="" ref="0x40f69c50"/>
        <function-ref name="clr" scoped="" ref="0x40f69d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f67010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f67010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f671e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f672c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f673a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f67488"/>
        <function-ref name="get" scoped="" ref="0x40f67568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f67648"/>
        <function-ref name="set" scoped="" ref="0x40f67728"/>
        <function-ref name="clr" scoped="" ref="0x40f67808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f669e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f669e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f66bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f66ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f66d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f66e60"/>
        <function-ref name="get" scoped="" ref="0x40f65010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f650f0"/>
        <function-ref name="set" scoped="" ref="0x40f651d0"/>
        <function-ref name="clr" scoped="" ref="0x40f652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f64538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f64538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f64710"/>
        <function-ref name="isInput" scoped="" ref="0x40f647f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f648d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f649b0"/>
        <function-ref name="get" scoped="" ref="0x40f64a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f64b70"/>
        <function-ref name="set" scoped="" ref="0x40f64c50"/>
        <function-ref name="clr" scoped="" ref="0x40f64d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f62010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f62010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f621e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f622c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f623a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f62488"/>
        <function-ref name="get" scoped="" ref="0x40f62568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f62648"/>
        <function-ref name="set" scoped="" ref="0x40f62728"/>
        <function-ref name="clr" scoped="" ref="0x40f62808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f619e8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f619e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f61bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f61ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f61d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f61e60"/>
        <function-ref name="get" scoped="" ref="0x40f97010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f970f0"/>
        <function-ref name="set" scoped="" ref="0x40f971d0"/>
        <function-ref name="clr" scoped="" ref="0x40f972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f96538" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f96538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f96710"/>
        <function-ref name="isInput" scoped="" ref="0x40f967f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f968d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f969b0"/>
        <function-ref name="get" scoped="" ref="0x40f96a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f96b70"/>
        <function-ref name="set" scoped="" ref="0x40f96c50"/>
        <function-ref name="clr" scoped="" ref="0x40f96d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f94010" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f94010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f941e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f942c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f943a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f94488"/>
        <function-ref name="get" scoped="" ref="0x40f94568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f94648"/>
        <function-ref name="set" scoped="" ref="0x40f94728"/>
        <function-ref name="clr" scoped="" ref="0x40f94808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404c8e48" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404c8e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6050"/>
        <function-ref name="isInput" scoped="" ref="0x404c6130"/>
        <function-ref name="toggle" scoped="" ref="0x404c6210"/>
        <function-ref name="isOutput" scoped="" ref="0x404c62f0"/>
        <function-ref name="get" scoped="" ref="0x404c63d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c64b0"/>
        <function-ref name="set" scoped="" ref="0x404c6590"/>
        <function-ref name="clr" scoped="" ref="0x404c6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404d1ac8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404d1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404d1d80"/>
        <function-ref name="toggle" scoped="" ref="0x404d1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0010"/>
        <function-ref name="get" scoped="" ref="0x404d00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d01d0"/>
        <function-ref name="set" scoped="" ref="0x404d02b0"/>
        <function-ref name="clr" scoped="" ref="0x404d0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404c9b00" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404c9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c9cd8"/>
        <function-ref name="isInput" scoped="" ref="0x404c9db8"/>
        <function-ref name="toggle" scoped="" ref="0x404c9e98"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8010"/>
        <function-ref name="get" scoped="" ref="0x404c80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c81d0"/>
        <function-ref name="set" scoped="" ref="0x404c82b0"/>
        <function-ref name="clr" scoped="" ref="0x404c8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404c67d0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404c67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c69a8"/>
        <function-ref name="isInput" scoped="" ref="0x404c6a88"/>
        <function-ref name="toggle" scoped="" ref="0x404c6b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6c48"/>
        <function-ref name="get" scoped="" ref="0x404c6d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6e08"/>
        <function-ref name="set" scoped="" ref="0x404c6ee8"/>
        <function-ref name="clr" scoped="" ref="0x404d1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404d04f0" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404d04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d06c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d07a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d0888"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0968"/>
        <function-ref name="get" scoped="" ref="0x404d0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0b28"/>
        <function-ref name="set" scoped="" ref="0x404d0c08"/>
        <function-ref name="clr" scoped="" ref="0x404d0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404c84f0" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404c84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c86c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c87a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c8888"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8968"/>
        <function-ref name="get" scoped="" ref="0x404c8a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c8b28"/>
        <function-ref name="set" scoped="" ref="0x404c8c08"/>
        <function-ref name="clr" scoped="" ref="0x404c8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404d1170" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404d1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1348"/>
        <function-ref name="isInput" scoped="" ref="0x404d1428"/>
        <function-ref name="toggle" scoped="" ref="0x404d1508"/>
        <function-ref name="isOutput" scoped="" ref="0x404d15e8"/>
        <function-ref name="get" scoped="" ref="0x404d16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d17a8"/>
        <function-ref name="set" scoped="" ref="0x404d1888"/>
        <function-ref name="clr" scoped="" ref="0x404d1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404d0e48" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404d0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf050"/>
        <function-ref name="isInput" scoped="" ref="0x404cf130"/>
        <function-ref name="toggle" scoped="" ref="0x404cf210"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf2f0"/>
        <function-ref name="get" scoped="" ref="0x404cf3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf4b0"/>
        <function-ref name="set" scoped="" ref="0x404cf590"/>
        <function-ref name="clr" scoped="" ref="0x404cf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9f418" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9f5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40f9f6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40f9f7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9f890"/>
        <function-ref name="get" scoped="" ref="0x40f9f970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9fa50"/>
        <function-ref name="set" scoped="" ref="0x40f9fb30"/>
        <function-ref name="clr" scoped="" ref="0x40f9fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9ede0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9d010"/>
        <function-ref name="isInput" scoped="" ref="0x40f9d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f9d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9d2b0"/>
        <function-ref name="get" scoped="" ref="0x40f9d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9d470"/>
        <function-ref name="set" scoped="" ref="0x40f9d550"/>
        <function-ref name="clr" scoped="" ref="0x40f9d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9c7f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f9cab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f9cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9cc70"/>
        <function-ref name="get" scoped="" ref="0x40f9cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9ce30"/>
        <function-ref name="set" scoped="" ref="0x40f9cf10"/>
        <function-ref name="clr" scoped="" ref="0x40f9b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9a228" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9a400"/>
        <function-ref name="isInput" scoped="" ref="0x40f9a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f9a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9a6a0"/>
        <function-ref name="get" scoped="" ref="0x40f9a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9a860"/>
        <function-ref name="set" scoped="" ref="0x40f9a940"/>
        <function-ref name="clr" scoped="" ref="0x40f9aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f99c08" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f99c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f99de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f99ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f98010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f980f0"/>
        <function-ref name="get" scoped="" ref="0x40f981d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f982b0"/>
        <function-ref name="set" scoped="" ref="0x40f98390"/>
        <function-ref name="clr" scoped="" ref="0x40f98470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcf6c0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcf898"/>
        <function-ref name="isInput" scoped="" ref="0x40fcf978"/>
        <function-ref name="toggle" scoped="" ref="0x40fcfa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcfb38"/>
        <function-ref name="get" scoped="" ref="0x40fcfc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcfcf8"/>
        <function-ref name="set" scoped="" ref="0x40fcfdd8"/>
        <function-ref name="clr" scoped="" ref="0x40fcfeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcd0b0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcd0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcd288"/>
        <function-ref name="isInput" scoped="" ref="0x40fcd368"/>
        <function-ref name="toggle" scoped="" ref="0x40fcd448"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcd528"/>
        <function-ref name="get" scoped="" ref="0x40fcd608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcd6e8"/>
        <function-ref name="set" scoped="" ref="0x40fcd7c8"/>
        <function-ref name="clr" scoped="" ref="0x40fcd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcca88" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fccc60"/>
        <function-ref name="isInput" scoped="" ref="0x40fccd40"/>
        <function-ref name="toggle" scoped="" ref="0x40fcce20"/>
        <function-ref name="isOutput" scoped="" ref="0x40fccf00"/>
        <function-ref name="get" scoped="" ref="0x40fcb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcb0f0"/>
        <function-ref name="set" scoped="" ref="0x40fcb1d0"/>
        <function-ref name="clr" scoped="" ref="0x40fcb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d6010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d61e8"/>
        <function-ref name="isInput" scoped="" ref="0x404d62c8"/>
        <function-ref name="toggle" scoped="" ref="0x404d63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6488"/>
        <function-ref name="get" scoped="" ref="0x404d6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6648"/>
        <function-ref name="set" scoped="" ref="0x404d6728"/>
        <function-ref name="clr" scoped="" ref="0x404d6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e07b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e07b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e0990"/>
        <function-ref name="isInput" scoped="" ref="0x404e0a70"/>
        <function-ref name="toggle" scoped="" ref="0x404e0b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404e0c30"/>
        <function-ref name="get" scoped="" ref="0x404e0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e0df0"/>
        <function-ref name="set" scoped="" ref="0x404e0ed0"/>
        <function-ref name="clr" scoped="" ref="0x404df010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e8010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e81e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e82c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8488"/>
        <function-ref name="get" scoped="" ref="0x404e8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8648"/>
        <function-ref name="set" scoped="" ref="0x404e8728"/>
        <function-ref name="clr" scoped="" ref="0x404e8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e67b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e67b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e6990"/>
        <function-ref name="isInput" scoped="" ref="0x404e6a70"/>
        <function-ref name="toggle" scoped="" ref="0x404e6b50"/>
        <function-ref name="isOutput" scoped="" ref="0x404e6c30"/>
        <function-ref name="get" scoped="" ref="0x404e6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e6df0"/>
        <function-ref name="set" scoped="" ref="0x404e6ed0"/>
        <function-ref name="clr" scoped="" ref="0x404e5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ef010" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ef1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ef2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ef3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ef488"/>
        <function-ref name="get" scoped="" ref="0x404ef568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ef648"/>
        <function-ref name="set" scoped="" ref="0x404ef728"/>
        <function-ref name="clr" scoped="" ref="0x404ef808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ec7b8" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ec7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ec990"/>
        <function-ref name="isInput" scoped="" ref="0x404eca70"/>
        <function-ref name="toggle" scoped="" ref="0x404ecb50"/>
        <function-ref name="isOutput" scoped="" ref="0x404ecc30"/>
        <function-ref name="get" scoped="" ref="0x404ecd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ecdf0"/>
        <function-ref name="set" scoped="" ref="0x404eced0"/>
        <function-ref name="clr" scoped="" ref="0x404eb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f5080" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f5258"/>
        <function-ref name="isInput" scoped="" ref="0x404f5338"/>
        <function-ref name="toggle" scoped="" ref="0x404f5418"/>
        <function-ref name="isOutput" scoped="" ref="0x404f54f8"/>
        <function-ref name="get" scoped="" ref="0x404f55d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f56b8"/>
        <function-ref name="set" scoped="" ref="0x404f5798"/>
        <function-ref name="clr" scoped="" ref="0x404f5878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f2840" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2a18"/>
        <function-ref name="isInput" scoped="" ref="0x404f2af8"/>
        <function-ref name="toggle" scoped="" ref="0x404f2bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f2cb8"/>
        <function-ref name="get" scoped="" ref="0x404f2d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2e78"/>
        <function-ref name="set" scoped="" ref="0x404f1010"/>
        <function-ref name="clr" scoped="" ref="0x404f10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fb0b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fb0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb288"/>
        <function-ref name="isInput" scoped="" ref="0x404fb368"/>
        <function-ref name="toggle" scoped="" ref="0x404fb448"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb528"/>
        <function-ref name="get" scoped="" ref="0x404fb608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb6e8"/>
        <function-ref name="set" scoped="" ref="0x404fb7c8"/>
        <function-ref name="clr" scoped="" ref="0x404fb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f9880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f9a58"/>
        <function-ref name="isInput" scoped="" ref="0x404f9b38"/>
        <function-ref name="toggle" scoped="" ref="0x404f9c18"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9cf8"/>
        <function-ref name="get" scoped="" ref="0x404f9dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9eb8"/>
        <function-ref name="set" scoped="" ref="0x404f8010"/>
        <function-ref name="clr" scoped="" ref="0x404f80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405020b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405020b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502288"/>
        <function-ref name="isInput" scoped="" ref="0x40502368"/>
        <function-ref name="toggle" scoped="" ref="0x40502448"/>
        <function-ref name="isOutput" scoped="" ref="0x40502528"/>
        <function-ref name="get" scoped="" ref="0x40502608"/>
        <function-ref name="makeOutput" scoped="" ref="0x405026e8"/>
        <function-ref name="set" scoped="" ref="0x405027c8"/>
        <function-ref name="clr" scoped="" ref="0x405028a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40500880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40500880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500a58"/>
        <function-ref name="isInput" scoped="" ref="0x40500b38"/>
        <function-ref name="toggle" scoped="" ref="0x40500c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40500cf8"/>
        <function-ref name="get" scoped="" ref="0x40500dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500eb8"/>
        <function-ref name="set" scoped="" ref="0x404ff010"/>
        <function-ref name="clr" scoped="" ref="0x404ff0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fc0b0" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fc0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc288"/>
        <function-ref name="isInput" scoped="" ref="0x404fc368"/>
        <function-ref name="toggle" scoped="" ref="0x404fc448"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc528"/>
        <function-ref name="get" scoped="" ref="0x404fc608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc6e8"/>
        <function-ref name="set" scoped="" ref="0x404fc7c8"/>
        <function-ref name="clr" scoped="" ref="0x404fc8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40508880" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40508880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508a58"/>
        <function-ref name="isInput" scoped="" ref="0x40508b38"/>
        <function-ref name="toggle" scoped="" ref="0x40508c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40508cf8"/>
        <function-ref name="get" scoped="" ref="0x40508dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508eb8"/>
        <function-ref name="set" scoped="" ref="0x40507010"/>
        <function-ref name="clr" scoped="" ref="0x405070f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4051abf8" loc="61:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4051abf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4051add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40529010" loc="62:/home/u3f/tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40529010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x405291e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x405292c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x405293a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40529488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40529568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40535808" loc="60:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40535808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405359e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40441a28" loc="57:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40441a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40441c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40535400" loc="59:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40535400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405355d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40441dc0" loc="58:/home/u3f/tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40441dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40535010"/>
        <function-ref name="taskLoop" scoped="" ref="0x405350f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x405351d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40368d58" loc="48:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40368d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40363010"/>
        <function-ref name="runTask" scoped="" ref="0x403630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403675f0" loc="47:/home/u3f/tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403675f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403677c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403678a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x40367988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403d5100" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403d52d8"/>
        <function-ref name="runTask" scoped="" ref="0x403d53b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d5d68" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d5d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403d6820" loc="55:/home/u3f/tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403d6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d69f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403d6ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x403d6bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e9218" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e9218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e93f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40362728" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40362728"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40362900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403ea420" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403ea420"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403ea5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4053a010" loc="46:/home/u3f/tinyos-2_1_2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4053a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4053a1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4053a2c8"/>
        <function-ref name="led1On" scoped="" ref="0x4053a3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4053a488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4053a568"/>
        <function-ref name="get" scoped="" ref="0x4053a648"/>
        <function-ref name="led1Off" scoped="" ref="0x4053a728"/>
        <function-ref name="led2Off" scoped="" ref="0x4053aaa8"/>
        <function-ref name="set" scoped="" ref="0x4053a808"/>
        <function-ref name="led0On" scoped="" ref="0x4053a8e8"/>
        <function-ref name="led2On" scoped="" ref="0x4053a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4054d400" loc="50:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4054d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054d5d8"/>
        <function-ref name="isInput" scoped="" ref="0x4054d6b8"/>
        <function-ref name="toggle" scoped="" ref="0x4054d798"/>
        <function-ref name="isOutput" scoped="" ref="0x4054d878"/>
        <function-ref name="get" scoped="" ref="0x4054d958"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054da38"/>
        <function-ref name="set" scoped="" ref="0x4054db18"/>
        <function-ref name="clr" scoped="" ref="0x4054dbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40540350" loc="46:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40540350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40540528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4054dde8" loc="51:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4054dde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054c010"/>
        <function-ref name="isInput" scoped="" ref="0x4054c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4054c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4054c2b0"/>
        <function-ref name="get" scoped="" ref="0x4054c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054c470"/>
        <function-ref name="set" scoped="" ref="0x4054c550"/>
        <function-ref name="clr" scoped="" ref="0x4054c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40540698" loc="47:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40540698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40540870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40540950"/>
        <function-ref name="led1On" scoped="" ref="0x40540a30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40540b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40540bf0"/>
        <function-ref name="get" scoped="" ref="0x40540cd0"/>
        <function-ref name="led1Off" scoped="" ref="0x40540db0"/>
        <function-ref name="led2Off" scoped="" ref="0x4054d1d0"/>
        <function-ref name="set" scoped="" ref="0x40540e90"/>
        <function-ref name="led0On" scoped="" ref="0x4054d010"/>
        <function-ref name="led2On" scoped="" ref="0x4054d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4054c820" loc="52:/home/u3f/tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4054c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054c9f8"/>
        <function-ref name="isInput" scoped="" ref="0x4054cad8"/>
        <function-ref name="toggle" scoped="" ref="0x4054cbb8"/>
        <function-ref name="isOutput" scoped="" ref="0x4054cc98"/>
        <function-ref name="get" scoped="" ref="0x4054cd78"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054ce58"/>
        <function-ref name="set" scoped="" ref="0x4054b010"/>
        <function-ref name="clr" scoped="" ref="0x4054b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40539ba8" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40539ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40539d80"/>
        <function-ref name="isInput" scoped="" ref="0x40539e60"/>
        <function-ref name="toggle" scoped="" ref="0x40557010"/>
        <function-ref name="isOutput" scoped="" ref="0x405570f0"/>
        <function-ref name="get" scoped="" ref="0x405571d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405572b0"/>
        <function-ref name="set" scoped="" ref="0x40557390"/>
        <function-ref name="clr" scoped="" ref="0x40557470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40557680" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40557680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40557858"/>
        <function-ref name="isInput" scoped="" ref="0x40557938"/>
        <function-ref name="toggle" scoped="" ref="0x40557a18"/>
        <function-ref name="isOutput" scoped="" ref="0x40557af8"/>
        <function-ref name="get" scoped="" ref="0x40557bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40557cb8"/>
        <function-ref name="set" scoped="" ref="0x40557d98"/>
        <function-ref name="clr" scoped="" ref="0x40557e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40556a38" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40556a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40556c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x405560b0" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405560b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40556288"/>
        <function-ref name="isInput" scoped="" ref="0x40556368"/>
        <function-ref name="toggle" scoped="" ref="0x40556448"/>
        <function-ref name="isOutput" scoped="" ref="0x40556528"/>
        <function-ref name="get" scoped="" ref="0x40556608"/>
        <function-ref name="makeOutput" scoped="" ref="0x405566e8"/>
        <function-ref name="set" scoped="" ref="0x405567c8"/>
        <function-ref name="clr" scoped="" ref="0x405568a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4055daf8" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4055daf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4055dcd0"/>
        <function-ref name="stopDone" scoped="" ref="0x4055ddb0"/>
        <function-ref name="start" scoped="" ref="0x4055de90"/>
        <function-ref name="stop" scoped="" ref="0x40560010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4056e890" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4056e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4056ea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405769d0" loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405769d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40576ba8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40576c88"/>
        <function-ref name="getPayload" scoped="" ref="0x40576d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40576e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40576f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40564670" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40564670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40564848"/>
        <function-ref name="getPayload" scoped="" ref="0x40564928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40564a08"/>
        <function-ref name="cancel" scoped="" ref="0x40564ae8"/>
        <function-ref name="sendDone" scoped="" ref="0x40564bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4055c178" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4055c178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4055c350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40581700" loc="52:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40581700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405818d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405819b8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40581a98"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40581b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4056fac8" loc="44:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4056fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4056fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40585a90" loc="51:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40585a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40585c68"/>
        <function-ref name="noAck" scoped="" ref="0x40585d48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40585e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4057a040" loc="53:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4057a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4057a218"/>
        <function-ref name="setRetries" scoped="" ref="0x4057a2f8"/>
        <function-ref name="getRetries" scoped="" ref="0x4057a3d8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4057a4b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4057a598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405797b0" loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405797b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40579988"/>
        <function-ref name="source" scoped="" ref="0x40579a68"/>
        <function-ref name="address" scoped="" ref="0x40579b48"/>
        <function-ref name="destination" scoped="" ref="0x40579c28"/>
        <function-ref name="setSource" scoped="" ref="0x40579d08"/>
        <function-ref name="setDestination" scoped="" ref="0x40579de8"/>
        <function-ref name="type" scoped="" ref="0x40579ec8"/>
        <function-ref name="setType" scoped="" ref="0x40570010"/>
        <function-ref name="isForMe" scoped="" ref="0x405700f0"/>
        <function-ref name="setGroup" scoped="" ref="0x405701d0"/>
        <function-ref name="localGroup" scoped="" ref="0x405702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4058aab8" loc="54:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4058aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4058ac90"/>
        <function-ref name="setChannel" scoped="" ref="0x4058ad70"/>
        <function-ref name="getChannel" scoped="" ref="0x4058ae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x40594408" loc="56:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40594408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40594f08"/>
        <function-ref name="clear" scoped="" ref="0x4058b2d0"/>
        <function-ref name="isValid" scoped="" ref="0x40594b58"/>
        <function-ref name="set" scoped="" ref="0x4058b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4058bdb8" loc="57:/home/u3f/tinyos-2_1_2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4058bdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40595950"/>
        <function-ref name="clear" scoped="" ref="0x40595d00"/>
        <function-ref name="isValid" scoped="" ref="0x405955a0"/>
        <function-ref name="set" scoped="" ref="0x405930d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40593b50" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40593b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40593d28"/>
        <function-ref name="stopDone" scoped="" ref="0x40593e08"/>
        <function-ref name="start" scoped="" ref="0x40593ee8"/>
        <function-ref name="stop" scoped="" ref="0x40590010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405a3390" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405a3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a2010"/>
        <function-ref name="get" scoped="" ref="0x405a3c98"/>
        <function-ref name="isSet" scoped="" ref="0x405a39d8"/>
        <function-ref name="set" scoped="" ref="0x405a22d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405adc38" loc="71:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405adc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405ac750"/>
        <function-ref name="clear" scoped="" ref="0x405acb00"/>
        <function-ref name="isValid" scoped="" ref="0x405ac3a0"/>
        <function-ref name="set" scoped="" ref="0x405aceb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4058fb88" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4058fb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4058fd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4059dce0" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4059dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4059deb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4059c010"/>
        <function-ref name="getPayload" scoped="" ref="0x4059c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4059c1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4059c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40590470" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40590470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40590648"/>
        <function-ref name="getPayload" scoped="" ref="0x40590728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40590808"/>
        <function-ref name="cancel" scoped="" ref="0x405908e8"/>
        <function-ref name="sendDone" scoped="" ref="0x405909c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4058f510" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4058f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058f6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405a5010" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a5bd8"/>
        <function-ref name="get" scoped="" ref="0x405a5918"/>
        <function-ref name="isSet" scoped="" ref="0x405a5658"/>
        <function-ref name="set" scoped="" ref="0x405a5e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4059b6c8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4059b6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4059b8a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4059b980"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4059ba60"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4059bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40590e30" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40590e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058f050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405a0260" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405a0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405a0d60"/>
        <function-ref name="clear" scoped="" ref="0x405ad150"/>
        <function-ref name="isValid" scoped="" ref="0x405a09b0"/>
        <function-ref name="set" scoped="" ref="0x405ad500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x405ae6b8" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x405ae6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405aed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405a6b88" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a6b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40599780"/>
        <function-ref name="get" scoped="" ref="0x405994c0"/>
        <function-ref name="isSet" scoped="" ref="0x40599200"/>
        <function-ref name="set" scoped="" ref="0x40599a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4059b140" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4059b318"/>
        <function-ref name="noAck" scoped="" ref="0x4059b3f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4059b4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x4059d2a8" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x4059d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4059d480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4059bce8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4059bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4059bec0"/>
        <function-ref name="setRetries" scoped="" ref="0x4059a010"/>
        <function-ref name="getRetries" scoped="" ref="0x4059a0f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4059a1d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4059a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4059c448" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4059c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4059c620"/>
        <function-ref name="source" scoped="" ref="0x4059c700"/>
        <function-ref name="address" scoped="" ref="0x4059c7e0"/>
        <function-ref name="destination" scoped="" ref="0x4059c8c0"/>
        <function-ref name="setSource" scoped="" ref="0x4059c9a0"/>
        <function-ref name="setDestination" scoped="" ref="0x4059ca80"/>
        <function-ref name="type" scoped="" ref="0x4059cb60"/>
        <function-ref name="setType" scoped="" ref="0x4059cc40"/>
        <function-ref name="isForMe" scoped="" ref="0x4059cd20"/>
        <function-ref name="setGroup" scoped="" ref="0x4059ce00"/>
        <function-ref name="localGroup" scoped="" ref="0x4059cee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4059a470" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4059a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4059a6c8"/>
        <function-ref name="setChannel" scoped="" ref="0x4059a7a8"/>
        <function-ref name="getChannel" scoped="" ref="0x4059a888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4059f500" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4059f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4059f6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x4059d988" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x4059d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4059db60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405aa880" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405aa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405aaa58"/>
        <function-ref name="stopDone" scoped="" ref="0x405aab38"/>
        <function-ref name="start" scoped="" ref="0x405aac18"/>
        <function-ref name="stop" scoped="" ref="0x405aacf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405c0b60" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405c0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405bf780"/>
        <function-ref name="get" scoped="" ref="0x405bf4c0"/>
        <function-ref name="isSet" scoped="" ref="0x405bf200"/>
        <function-ref name="set" scoped="" ref="0x405bfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x405bdc78" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x405bdc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405bde50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x405b9428" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x405b9428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405b9680"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405b9760"/>
        <function-ref name="request" scoped="" ref="0x405b9840"/>
        <function-ref name="granted" scoped="" ref="0x405b9920"/>
        <function-ref name="isOwner" scoped="" ref="0x405b9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405b6870" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405b6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405b6a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405a7178" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405a7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405a7350"/>
        <function-ref name="getPayload" scoped="" ref="0x405a7430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405a7510"/>
        <function-ref name="cancel" scoped="" ref="0x405a75f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405a76d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405b61f8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405b61f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x405c45b8" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x405c45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x405c4790"/>
        <function-ref name="address" scoped="" ref="0x405c4870"/>
        <function-ref name="destination" scoped="" ref="0x405c4950"/>
        <function-ref name="setSource" scoped="" ref="0x405c4a30"/>
        <function-ref name="setDestination" scoped="" ref="0x405c4b10"/>
        <function-ref name="pan" scoped="" ref="0x405c4bf0"/>
        <function-ref name="setPan" scoped="" ref="0x405c4cd0"/>
        <function-ref name="isForMe" scoped="" ref="0x405c4db0"/>
        <function-ref name="localPan" scoped="" ref="0x405c4e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x405b1148" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x405b1148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b1320"/>
        <function-ref name="payloadLength" scoped="" ref="0x405b1400"/>
        <function-ref name="getPayload" scoped="" ref="0x405b14e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b15c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405b16a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405c27f0" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405c27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c03d8"/>
        <function-ref name="get" scoped="" ref="0x405c0118"/>
        <function-ref name="isSet" scoped="" ref="0x405c2e38"/>
        <function-ref name="set" scoped="" ref="0x405c0698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405b1e48" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405b1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405bc050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405bc130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405bc210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405bc2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x405b47d0" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x405b47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b49a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405b4a88"/>
        <function-ref name="getPayload" scoped="" ref="0x405b4b68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b4c48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405b4d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405a7b38" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405a7b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405a7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405cdec8" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405cdec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405ccb30"/>
        <function-ref name="clear" scoped="" ref="0x405ccee0"/>
        <function-ref name="isValid" scoped="" ref="0x405cc780"/>
        <function-ref name="set" scoped="" ref="0x405cb2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x405cd330" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x405cd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405cd978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405c3368" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405c3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c2010"/>
        <function-ref name="get" scoped="" ref="0x405c3c70"/>
        <function-ref name="isSet" scoped="" ref="0x405c39b0"/>
        <function-ref name="set" scoped="" ref="0x405c22d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405b18c0" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405b18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405b1a98"/>
        <function-ref name="noAck" scoped="" ref="0x405b1b78"/>
        <function-ref name="wasAcked" scoped="" ref="0x405b1c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x405bd098" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x405bd098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405bd270"/>
        <function-ref name="getPayload" scoped="" ref="0x405bd350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405bd430"/>
        <function-ref name="cancel" scoped="" ref="0x405bd510"/>
        <function-ref name="sendDone" scoped="" ref="0x405bd5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x405b5010" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x405b5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405bc498" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405bc498"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405bc670"/>
        <function-ref name="setRetries" scoped="" ref="0x405bc750"/>
        <function-ref name="getRetries" scoped="" ref="0x405bc830"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405bc910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405bc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x405bcbb0" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x405bcbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x405bcd88"/>
        <function-ref name="setChannel" scoped="" ref="0x405bce68"/>
        <function-ref name="getChannel" scoped="" ref="0x405c3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405b5a60" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405b5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405b5c38"/>
        <function-ref name="source" scoped="" ref="0x405b5d18"/>
        <function-ref name="address" scoped="" ref="0x405b5df8"/>
        <function-ref name="destination" scoped="" ref="0x405b5ed8"/>
        <function-ref name="setSource" scoped="" ref="0x405b4010"/>
        <function-ref name="setDestination" scoped="" ref="0x405b40f0"/>
        <function-ref name="type" scoped="" ref="0x405b41d0"/>
        <function-ref name="setType" scoped="" ref="0x405b42b0"/>
        <function-ref name="isForMe" scoped="" ref="0x405b4390"/>
        <function-ref name="setGroup" scoped="" ref="0x405b4470"/>
        <function-ref name="localGroup" scoped="" ref="0x405b4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405cba08" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405cba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405ca5b0"/>
        <function-ref name="clear" scoped="" ref="0x405ca960"/>
        <function-ref name="isValid" scoped="" ref="0x405ca200"/>
        <function-ref name="set" scoped="" ref="0x405cad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x405bd828" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x405bd828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405bda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405bfdf0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405bfdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x405b56f0" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x405b56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b58c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x405d7a20" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x405d7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x405d7bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x405e6388" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x405e6388"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x405e6560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x405eca08" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405eca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405ecbe0"/>
        <function-ref name="checkFrame" scoped="" ref="0x405eccc0"/>
        <function-ref name="source" scoped="" ref="0x405ecda0"/>
        <function-ref name="destination" scoped="" ref="0x405ece80"/>
        <function-ref name="setSource" scoped="" ref="0x405d7010"/>
        <function-ref name="setDestination" scoped="" ref="0x405d70f0"/>
        <function-ref name="setGroup" scoped="" ref="0x405d71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x405e1ee8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x405e1ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x405d00e0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x405d01c0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x405d02a0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x405d0380"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x405d0460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x405f8a88" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405f8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405f8c60"/>
        <function-ref name="wait" scoped="" ref="0x405f8d40"/>
        <function-ref name="cancel" scoped="" ref="0x405f8e20"/>
        <function-ref name="isFree" scoped="" ref="0x405f8f00"/>
        <function-ref name="getNow" scoped="" ref="0x405fa010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x40605c68" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x40605c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40605e40"/>
        <function-ref name="payloadLength" scoped="" ref="0x40605f20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405f9018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405f90f8"/>
        <function-ref name="headerLength" scoped="" ref="0x405f91d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x405f92b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x405f9648" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x405f9648"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405f71d8"/>
        <function-ref name="clear" scoped="" ref="0x405f7588"/>
        <function-ref name="isValid" scoped="" ref="0x405f9e18"/>
        <function-ref name="set" scoped="" ref="0x405f7938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x405d2bf0" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x405d2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d2dc8"/>
        <function-ref name="headerLength" scoped="" ref="0x405d2ea8"/>
        <function-ref name="metadataLength" scoped="" ref="0x405d5010"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x405d50f0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x405d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x405d8658" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x405d8658"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x405d8830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x405d4010" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405d4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x405d41e8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x405d42c8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405d43a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x405d4488"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x405d4568"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x405d4648"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405d4728"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405d4808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x405fb500" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x405fb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x405fb6d8"/>
        <function-ref name="getDSN" scoped="" ref="0x405fb7b8"/>
        <function-ref name="setFCF" scoped="" ref="0x405fb898"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405fb978"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x405fba58"/>
        <function-ref name="createDataFrame" scoped="" ref="0x405fbb38"/>
        <function-ref name="setDSN" scoped="" ref="0x405fbc18"/>
        <function-ref name="createAckReply" scoped="" ref="0x405fbcf8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x405fbdd8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405fbeb8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405e0010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405e00f0"/>
        <function-ref name="localAddr" scoped="" ref="0x405e01d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405e0330"/>
        <function-ref name="localPan" scoped="" ref="0x405e0410"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405e04f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405e05d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x405e06b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x405e0790"/>
        <function-ref name="isForMe" scoped="" ref="0x405e0870"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405e0950"/>
        <function-ref name="getFCF" scoped="" ref="0x405e0a30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405e0b10"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405e0bf0"/>
        <function-ref name="getFramePending" scoped="" ref="0x405e0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x405d9710" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x405d9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x405d98e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x405d99c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x405d9aa8"/>
        <function-ref name="getSender" scoped="" ref="0x405d9b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x405e3548" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405e3548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x405e3720"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x405e3800"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x405e38e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x405e39c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4063d5c0" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4063d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4063d7a8"/>
        <function-ref name="wait" scoped="" ref="0x4063d888"/>
        <function-ref name="cancel" scoped="" ref="0x4063d968"/>
        <function-ref name="isFree" scoped="" ref="0x4063da48"/>
        <function-ref name="getNow" scoped="" ref="0x4063db28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4063de78" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4063de78"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40660350"/>
        <function-ref name="fired" scoped="" ref="0x4063caf8"/>
        <function-ref name="startAt" scoped="" ref="0x40660010"/>
        <function-ref name="isRunning" scoped="" ref="0x4063cd70"/>
        <function-ref name="getAlarm" scoped="" ref="0x406605c8"/>
        <function-ref name="start" scoped="" ref="0x4063c5e0"/>
        <function-ref name="stop" scoped="" ref="0x4063c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x410360a8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x410360a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41036290"/>
        <function-ref name="wait" scoped="" ref="0x41036370"/>
        <function-ref name="cancel" scoped="" ref="0x41036450"/>
        <function-ref name="isFree" scoped="" ref="0x41036530"/>
        <function-ref name="getNow" scoped="" ref="0x41036610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x410368a0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410368a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41035d58"/>
        <function-ref name="fired" scoped="" ref="0x41035528"/>
        <function-ref name="startAt" scoped="" ref="0x41035a18"/>
        <function-ref name="isRunning" scoped="" ref="0x410357a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41034010"/>
        <function-ref name="start" scoped="" ref="0x41035010"/>
        <function-ref name="stop" scoped="" ref="0x410352b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41034220" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41034220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x410343f8"/>
        <function-ref name="suspend" scoped="" ref="0x410344d8"/>
        <function-ref name="resume" scoped="" ref="0x410345b8"/>
        <function-ref name="run" scoped="" ref="0x41034698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40654010" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40654010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x406541e8"/>
        <function-ref name="suspend" scoped="" ref="0x406542c8"/>
        <function-ref name="resume" scoped="" ref="0x406543a8"/>
        <function-ref name="run" scoped="" ref="0x40654488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406bb410" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406bb410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406bb5e8"/>
        <function-ref name="cancel" scoped="" ref="0x406bb6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x406bb7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x406bb908" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x406bb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406bbae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406bc108" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406bc108"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406bc2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406bea80" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406bea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406bec58"/>
        <function-ref name="payloadLength" scoped="" ref="0x406bed38"/>
        <function-ref name="getPayload" scoped="" ref="0x406bee18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406beef8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406bd1e8" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406bd1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406bd3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x406bd4b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406bd590"/>
        <function-ref name="cancel" scoped="" ref="0x406bd670"/>
        <function-ref name="sendDone" scoped="" ref="0x406bd750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406bdd08" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406bdd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406bdef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x406bcc40" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x406bcc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406bce18"/>
        <function-ref name="payloadLength" scoped="" ref="0x406bcef8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406bb010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406bb0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x406bb1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x406bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x406bbc40" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x406bbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406bbe18"/>
        <function-ref name="checkFrame" scoped="" ref="0x406bbef8"/>
        <function-ref name="source" scoped="" ref="0x406ba010"/>
        <function-ref name="destination" scoped="" ref="0x406ba0f0"/>
        <function-ref name="setSource" scoped="" ref="0x406ba1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x406ba2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x406ba390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406bd928" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406bd928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406bdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406bc4e8" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406bc4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406bc6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406c0e90" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406c0e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406be080"/>
        <function-ref name="source" scoped="" ref="0x406be160"/>
        <function-ref name="address" scoped="" ref="0x406be240"/>
        <function-ref name="destination" scoped="" ref="0x406be320"/>
        <function-ref name="setSource" scoped="" ref="0x406be400"/>
        <function-ref name="setDestination" scoped="" ref="0x406be4e0"/>
        <function-ref name="type" scoped="" ref="0x406be5c0"/>
        <function-ref name="setType" scoped="" ref="0x406be6a0"/>
        <function-ref name="isForMe" scoped="" ref="0x406be780"/>
        <function-ref name="setGroup" scoped="" ref="0x406be860"/>
        <function-ref name="localGroup" scoped="" ref="0x406be940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406bc8c8" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406bc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406bcab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4105fe30" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4105fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4105e050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4105f938" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4105f938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4105fb10"/>
        <function-ref name="cancel" scoped="" ref="0x4105fbf0"/>
        <function-ref name="sendDone" scoped="" ref="0x4105fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x41060638" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x41060638"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x41060820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41062010" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41062010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410621e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x410622c8"/>
        <function-ref name="getPayload" scoped="" ref="0x410623a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41062488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41062568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41062740" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41062740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41062928"/>
        <function-ref name="getPayload" scoped="" ref="0x41062a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41062ae8"/>
        <function-ref name="cancel" scoped="" ref="0x41062bc8"/>
        <function-ref name="sendDone" scoped="" ref="0x41062ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x41060278" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x41060278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41060460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4102dbe8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4102dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4102ddc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4102dea0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41063010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410630f0"/>
        <function-ref name="headerLength" scoped="" ref="0x410631d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x410632b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4105e1b0" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4105e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4105e408"/>
        <function-ref name="checkFrame" scoped="" ref="0x4105e4e8"/>
        <function-ref name="source" scoped="" ref="0x4105e5c8"/>
        <function-ref name="destination" scoped="" ref="0x4105e6a8"/>
        <function-ref name="setSource" scoped="" ref="0x4105e788"/>
        <function-ref name="setDestination" scoped="" ref="0x4105e868"/>
        <function-ref name="setGroup" scoped="" ref="0x4105e948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4105ea88" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4105ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4105ec60"/>
        <function-ref name="changed" scoped="" ref="0x4105ed40"/>
        <function-ref name="amGroup" scoped="" ref="0x4105ee20"/>
        <function-ref name="setAddress" scoped="" ref="0x4105ef00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4105f1a0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4105f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4105f378"/>
        <function-ref name="payloadLength" scoped="" ref="0x4105f458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4105f538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4105f618"/>
        <function-ref name="headerLength" scoped="" ref="0x4105f6f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4105f7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41062e80" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41062e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41060080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x41060a18" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x41060a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41060c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410633f0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410633f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410635c8"/>
        <function-ref name="source" scoped="" ref="0x410636a8"/>
        <function-ref name="address" scoped="" ref="0x41063788"/>
        <function-ref name="destination" scoped="" ref="0x41063868"/>
        <function-ref name="setSource" scoped="" ref="0x41063948"/>
        <function-ref name="setDestination" scoped="" ref="0x41063a28"/>
        <function-ref name="type" scoped="" ref="0x41063b08"/>
        <function-ref name="setType" scoped="" ref="0x41063be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41063cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41063da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41063e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x41060df8" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x41060df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4105f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x406b6428" loc="54:/home/u3f/tinyos-2_1_2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406b6428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x406b6600"/>
        <function-ref name="changed" scoped="" ref="0x406b66e0"/>
        <function-ref name="amGroup" scoped="" ref="0x406b67c0"/>
        <function-ref name="setAddress" scoped="" ref="0x406b68a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406cae70" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406cae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406c9070"/>
        <function-ref name="cancel" scoped="" ref="0x406c9150"/>
        <function-ref name="sendDone" scoped="" ref="0x406c9230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x406c9370" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406c9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406c9548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406c9628"/>
        <function-ref name="request" scoped="" ref="0x406c9708"/>
        <function-ref name="granted" scoped="" ref="0x406c97e8"/>
        <function-ref name="isOwner" scoped="" ref="0x406c98c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x406ca948" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x406ca948"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406cab20"/>
        <function-ref name="cancel" scoped="" ref="0x406cac00"/>
        <function-ref name="sendDone" scoped="" ref="0x406cace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40700030" loc="86:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40700030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40700218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407002f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407008e8" loc="89:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407008e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40700ad0"/>
        <function-ref name="configure" scoped="" ref="0x40700bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406d18c0" loc="85:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406d18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406d1aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406d1b88"/>
        <function-ref name="request" scoped="" ref="0x406d1c68"/>
        <function-ref name="granted" scoped="" ref="0x406d1d48"/>
        <function-ref name="isOwner" scoped="" ref="0x406d1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40700438" loc="87:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40700438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40700610"/>
        <function-ref name="userId" scoped="" ref="0x407006f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4106ca88" loc="44:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4106ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4106cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4106cdc0" loc="45:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4106cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4106a010"/>
        <function-ref name="isEmpty" scoped="" ref="0x4106a0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4106a1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x4106a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410695a8" loc="52:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410695a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41069790"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41069870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41069e70" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41069e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41068070"/>
        <function-ref name="configure" scoped="" ref="0x41068150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x410682b0" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410682b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41068488"/>
        <function-ref name="isEmpty" scoped="" ref="0x41068568"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41068648"/>
        <function-ref name="dequeue" scoped="" ref="0x41068728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4106ae18" loc="51:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4106ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41069050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41069130"/>
        <function-ref name="request" scoped="" ref="0x41069210"/>
        <function-ref name="granted" scoped="" ref="0x410692f0"/>
        <function-ref name="isOwner" scoped="" ref="0x410693d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410699b0" loc="53:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410699b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41069b88"/>
        <function-ref name="userId" scoped="" ref="0x41069c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x410688a8" loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x410688a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41068a80"/>
        <function-ref name="runTask" scoped="" ref="0x41068b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40723d68" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40723d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40722010"/>
        <function-ref name="cancel" scoped="" ref="0x407220f0"/>
        <function-ref name="sendDone" scoped="" ref="0x407221d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40722330" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40722330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40722508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40713808" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40713808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x407139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407146d8" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407146d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407148b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40714990"/>
        <function-ref name="getPayload" scoped="" ref="0x40714a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40714b50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40714c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x407235d0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407235d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407237a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40723888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40723968"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40723a48"/>
        <function-ref name="headerLength" scoped="" ref="0x40723b28"/>
        <function-ref name="metadataLength" scoped="" ref="0x40723c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40713b50" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40713b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40713d28"/>
        <function-ref name="getDSN" scoped="" ref="0x40713e08"/>
        <function-ref name="setFCF" scoped="" ref="0x40713ee8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40724010"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407240f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407241d0"/>
        <function-ref name="setDSN" scoped="" ref="0x407242b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x40724390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40724470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40724550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40724630"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40724710"/>
        <function-ref name="localAddr" scoped="" ref="0x407247f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40724950"/>
        <function-ref name="localPan" scoped="" ref="0x40724a30"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40724b10"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40724bf0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40724cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40724db0"/>
        <function-ref name="isForMe" scoped="" ref="0x40724e90"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40723010"/>
        <function-ref name="getFCF" scoped="" ref="0x407230f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407231d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407232b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40723390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40714d70" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40714d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40713010"/>
        <function-ref name="getPayload" scoped="" ref="0x407130f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407131d0"/>
        <function-ref name="cancel" scoped="" ref="0x407132b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40713390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x407134f0" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x407134f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407136c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407416b0" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407416b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40741888"/>
        <function-ref name="cancel" scoped="" ref="0x40741968"/>
        <function-ref name="sendDone" scoped="" ref="0x40741a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40741ba8" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40741ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40741d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40733e98" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40733e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407420c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407421a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40742280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40742360"/>
        <function-ref name="headerLength" scoped="" ref="0x40742440"/>
        <function-ref name="metadataLength" scoped="" ref="0x40742520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x40742b78" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x40742b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40742d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40741ee0" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40741ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407560e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407561c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407562a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40756380"/>
        <function-ref name="headerLength" scoped="" ref="0x40756460"/>
        <function-ref name="metadataLength" scoped="" ref="0x40756540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x40742680" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x40742680"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40742858"/>
        <function-ref name="cancel" scoped="" ref="0x40742938"/>
        <function-ref name="sendDone" scoped="" ref="0x40742a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40733668" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40733668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40733840"/>
        <function-ref name="cancel" scoped="" ref="0x40733920"/>
        <function-ref name="sendDone" scoped="" ref="0x40733a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40733b60" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40733b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40733d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40742eb0" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40742eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407410c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407411a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40741280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40741360"/>
        <function-ref name="headerLength" scoped="" ref="0x40741440"/>
        <function-ref name="metadataLength" scoped="" ref="0x40741520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x407a04f0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407a04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x407a06c8"/>
        <function-ref name="address" scoped="" ref="0x407a07a8"/>
        <function-ref name="destination" scoped="" ref="0x407a0888"/>
        <function-ref name="setSource" scoped="" ref="0x407a0968"/>
        <function-ref name="setDestination" scoped="" ref="0x407a0a48"/>
        <function-ref name="pan" scoped="" ref="0x407a0b28"/>
        <function-ref name="setPan" scoped="" ref="0x407a0c08"/>
        <function-ref name="isForMe" scoped="" ref="0x407a0ce8"/>
        <function-ref name="localPan" scoped="" ref="0x407a0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x407a0f08" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407a0f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4079f0f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4079f1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4079f2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4079f390"/>
        <function-ref name="headerLength" scoped="" ref="0x4079f470"/>
        <function-ref name="metadataLength" scoped="" ref="0x4079f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x407a2a58" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407a2a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x407a2c30"/>
        <function-ref name="getDSN" scoped="" ref="0x407a2d10"/>
        <function-ref name="setFCF" scoped="" ref="0x407a2df0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407a2ed0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407a1010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407a10f0"/>
        <function-ref name="setDSN" scoped="" ref="0x407a11d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x407a12b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x407a1390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407a1470"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407a1550"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407a1630"/>
        <function-ref name="localAddr" scoped="" ref="0x407a1710"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407a1870"/>
        <function-ref name="localPan" scoped="" ref="0x407a1950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407a1a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0x407a1b10"/>
        <function-ref name="setFramePending" scoped="" ref="0x407a1bf0"/>
        <function-ref name="setDestPan" scoped="" ref="0x407a1cd0"/>
        <function-ref name="isForMe" scoped="" ref="0x407a1db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x407a1e90"/>
        <function-ref name="getFCF" scoped="" ref="0x407a0010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407a00f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407a01d0"/>
        <function-ref name="getFramePending" scoped="" ref="0x407a02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4079f6e0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4079f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4079f8b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4079f998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4079fa78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4079fb58"/>
        <function-ref name="headerLength" scoped="" ref="0x4079fc38"/>
        <function-ref name="metadataLength" scoped="" ref="0x4079fd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x410a5410" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x410a5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x410a55e8"/>
        <function-ref name="address" scoped="" ref="0x410a56c8"/>
        <function-ref name="destination" scoped="" ref="0x410a57a8"/>
        <function-ref name="setSource" scoped="" ref="0x410a5888"/>
        <function-ref name="setDestination" scoped="" ref="0x410a5968"/>
        <function-ref name="pan" scoped="" ref="0x410a5a48"/>
        <function-ref name="setPan" scoped="" ref="0x410a5b28"/>
        <function-ref name="isForMe" scoped="" ref="0x410a5c08"/>
        <function-ref name="localPan" scoped="" ref="0x410a5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x410a5e28" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x410a5e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a4050"/>
        <function-ref name="payloadLength" scoped="" ref="0x410a4130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a4210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410a42f0"/>
        <function-ref name="headerLength" scoped="" ref="0x410a43d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x410a44b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x410ac970" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x410ac970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x410acb48"/>
        <function-ref name="getDSN" scoped="" ref="0x410acc28"/>
        <function-ref name="setFCF" scoped="" ref="0x410acd08"/>
        <function-ref name="isAckFrame" scoped="" ref="0x410acde8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x410acec8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x410a6010"/>
        <function-ref name="setDSN" scoped="" ref="0x410a60f0"/>
        <function-ref name="createAckReply" scoped="" ref="0x410a61d0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x410a62b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x410a6390"/>
        <function-ref name="getAckRequired" scoped="" ref="0x410a6470"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x410a6550"/>
        <function-ref name="localAddr" scoped="" ref="0x410a6630"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x410a6790"/>
        <function-ref name="localPan" scoped="" ref="0x410a6870"/>
        <function-ref name="setDestAddr" scoped="" ref="0x410a6950"/>
        <function-ref name="createAckFrame" scoped="" ref="0x410a6a30"/>
        <function-ref name="setFramePending" scoped="" ref="0x410a6b10"/>
        <function-ref name="setDestPan" scoped="" ref="0x410a6bf0"/>
        <function-ref name="isForMe" scoped="" ref="0x410a6cd0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x410a6db0"/>
        <function-ref name="getFCF" scoped="" ref="0x410a6e90"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x410a5010"/>
        <function-ref name="getDestAddr" scoped="" ref="0x410a50f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x410a51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x410a4620" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x410a4620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x410a47f8"/>
        <function-ref name="changed" scoped="" ref="0x410a48d8"/>
        <function-ref name="amGroup" scoped="" ref="0x410a49b8"/>
        <function-ref name="setAddress" scoped="" ref="0x410a4a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x410a4bf8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x410a4bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a4dd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410a4eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a3010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410a30f0"/>
        <function-ref name="headerLength" scoped="" ref="0x410a31d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x410a32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407da280" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407da280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407da458"/>
        <function-ref name="cancel" scoped="" ref="0x407da538"/>
        <function-ref name="sendDone" scoped="" ref="0x407da618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407da778" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407da778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407da950"/>
        <function-ref name="header" scoped="" ref="0x407daa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4079b8a0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4079b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4079ba78"/>
        <function-ref name="cancel" scoped="" ref="0x4079bb58"/>
        <function-ref name="sendDone" scoped="" ref="0x4079bc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x407dab90" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x407dab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x407dad68"/>
        <function-ref name="reportChannelError" scoped="" ref="0x407dae48"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x407daf28"/>
        <function-ref name="getSender" scoped="" ref="0x407d8018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4079bd78" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4079bd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407da010"/>
        <function-ref name="header" scoped="" ref="0x407da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x410f1598" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x410f1598"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410f1770"/>
        <function-ref name="cancel" scoped="" ref="0x410f1850"/>
        <function-ref name="sendDone" scoped="" ref="0x410f1930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x410f1a90" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x410f1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410f1c68"/>
        <function-ref name="header" scoped="" ref="0x410f1d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x410f0ae8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410f0ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410f0cc0"/>
        <function-ref name="clearAll" scoped="" ref="0x410f0da0"/>
        <function-ref name="get" scoped="" ref="0x410f0e80"/>
        <function-ref name="set" scoped="" ref="0x410ef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410f48f0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410f48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410f4ac8"/>
        <function-ref name="cancel" scoped="" ref="0x410f4ba8"/>
        <function-ref name="sendDone" scoped="" ref="0x410f4c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x410f0450" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x410f0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x410f0628"/>
        <function-ref name="insertNode" scoped="" ref="0x410f0708"/>
        <function-ref name="getNode" scoped="" ref="0x410f07e8"/>
        <function-ref name="evicted" scoped="" ref="0x410f08c8"/>
        <function-ref name="getIndex" scoped="" ref="0x410f09a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x410f4dc8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x410f4dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410f1010"/>
        <function-ref name="header" scoped="" ref="0x410f10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410f1230" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410f1230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410f1408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x410f1e88" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x410f1e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x410f0070"/>
        <function-ref name="reportChannelError" scoped="" ref="0x410f0150"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x410f0230"/>
        <function-ref name="getSender" scoped="" ref="0x410f0310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x407c7988" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x407c7988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x407c7b60"/>
        <function-ref name="insertNode" scoped="" ref="0x407c7c40"/>
        <function-ref name="getNode" scoped="" ref="0x407c7d20"/>
        <function-ref name="evicted" scoped="" ref="0x407c7e00"/>
        <function-ref name="getIndex" scoped="" ref="0x407c7ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x407c1348" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x407c1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407c1520"/>
        <function-ref name="clearAll" scoped="" ref="0x407c1600"/>
        <function-ref name="get" scoped="" ref="0x407c16e0"/>
        <function-ref name="set" scoped="" ref="0x407c17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x407c4910" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x407c4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x407c4ae8"/>
        <function-ref name="insertNode" scoped="" ref="0x407c4bc8"/>
        <function-ref name="getNode" scoped="" ref="0x407c4ca8"/>
        <function-ref name="evicted" scoped="" ref="0x407c4d88"/>
        <function-ref name="getIndex" scoped="" ref="0x407c4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c4578" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c4750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x410ee010" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410ee1e8"/>
        <function-ref name="clearAll" scoped="" ref="0x410ee2c8"/>
        <function-ref name="get" scoped="" ref="0x410ee3a8"/>
        <function-ref name="set" scoped="" ref="0x410ee488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407e8bb8" loc="85:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407e8bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e8d90"/>
        <function-ref name="cancel" scoped="" ref="0x407e8e70"/>
        <function-ref name="sendDone" scoped="" ref="0x407e7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407e7170" loc="86:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407e7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e7348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x407e6868" loc="93:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x407e6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407e6a40"/>
        <function-ref name="noAck" scoped="" ref="0x407e6b20"/>
        <function-ref name="wasAcked" scoped="" ref="0x407e6c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407ee470" loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407ee470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407ee648"/>
        <function-ref name="cancel" scoped="" ref="0x407ee728"/>
        <function-ref name="sendDone" scoped="" ref="0x407ee808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x407e83f0" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407e83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e85c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x407e86a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e8788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407e8868"/>
        <function-ref name="headerLength" scoped="" ref="0x407e8948"/>
        <function-ref name="metadataLength" scoped="" ref="0x407e8a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407e74a8" loc="87:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407e74a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e7680"/>
        <function-ref name="payloadLength" scoped="" ref="0x407e7760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e7840"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407e7920"/>
        <function-ref name="headerLength" scoped="" ref="0x407e7a00"/>
        <function-ref name="metadataLength" scoped="" ref="0x407e7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x407e6190" loc="92:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x407e6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x407e6368"/>
        <function-ref name="setRetries" scoped="" ref="0x407e6448"/>
        <function-ref name="getRetries" scoped="" ref="0x407e6528"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x407e6608"/>
        <function-ref name="wasDelivered" scoped="" ref="0x407e66e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407ee968" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407ee968"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407eeb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x407e7c20" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407e7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407e7df8"/>
        <function-ref name="noAck" scoped="" ref="0x407e7ed8"/>
        <function-ref name="wasAcked" scoped="" ref="0x407e6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x407eec80" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x407eec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x407eee58"/>
        <function-ref name="setRetries" scoped="" ref="0x407e8010"/>
        <function-ref name="getRetries" scoped="" ref="0x407e80f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x407e81d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x407e82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407e3458" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407e3458"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407e3630"/>
        <function-ref name="stopDone" scoped="" ref="0x407e3710"/>
        <function-ref name="start" scoped="" ref="0x407e37f0"/>
        <function-ref name="stop" scoped="" ref="0x407e38d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408055e8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408055e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408057c0"/>
        <function-ref name="cancel" scoped="" ref="0x408058a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40805980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40805ae0" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40805ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40805cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407e3a30" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407e3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e3c08"/>
        <function-ref name="cancel" scoped="" ref="0x407e3ce8"/>
        <function-ref name="sendDone" scoped="" ref="0x407e3dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x407fa250" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407fa250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407fa428"/>
        <function-ref name="payloadLength" scoped="" ref="0x407fa508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407fa5e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407fa6c8"/>
        <function-ref name="headerLength" scoped="" ref="0x407fa7a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x407fa888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x407fa9c8" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x407fa9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x407faba0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x407fac80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x407fad60"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x407fae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40805010" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40805010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408051e8"/>
        <function-ref name="stopDone" scoped="" ref="0x408052c8"/>
        <function-ref name="start" scoped="" ref="0x408053a8"/>
        <function-ref name="stop" scoped="" ref="0x40805488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407e3f28" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407e3f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407fa110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40805e18" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40805e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40804010"/>
        <function-ref name="payloadLength" scoped="" ref="0x408040f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408041d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408042b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40804390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40804470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41118a68" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41118a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41118c40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41118d20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41118e00"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41118ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40801d98" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40801d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40800010"/>
        <function-ref name="stopDone" scoped="" ref="0x408000f0"/>
        <function-ref name="start" scoped="" ref="0x408001d0"/>
        <function-ref name="stop" scoped="" ref="0x408002b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40844180" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40844180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40844358"/>
        <function-ref name="turnOn" scoped="" ref="0x40844438"/>
        <function-ref name="setChannel" scoped="" ref="0x40844518"/>
        <function-ref name="done" scoped="" ref="0x408445f8"/>
        <function-ref name="standby" scoped="" ref="0x408446d8"/>
        <function-ref name="getChannel" scoped="" ref="0x408447b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40800410" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40800410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408005e8"/>
        <function-ref name="cancel" scoped="" ref="0x408006c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408007a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40844dd0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40844dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40843010"/>
        <function-ref name="header" scoped="" ref="0x408430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40800908" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40800908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40800ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408448f8" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408448f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40844ad0"/>
        <function-ref name="ready" scoped="" ref="0x40844bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40844c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40800c20" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40800c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40800df8"/>
        <function-ref name="setChannel" scoped="" ref="0x40800ed8"/>
        <function-ref name="getChannel" scoped="" ref="0x40844010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41114dd0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41114dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41111010"/>
        <function-ref name="stopDone" scoped="" ref="0x411110f0"/>
        <function-ref name="start" scoped="" ref="0x411111d0"/>
        <function-ref name="stop" scoped="" ref="0x411112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x41111410" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x41111410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411115e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x41110518" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x41110518"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x411106f0"/>
        <function-ref name="turnOn" scoped="" ref="0x411107d0"/>
        <function-ref name="setChannel" scoped="" ref="0x411108b0"/>
        <function-ref name="done" scoped="" ref="0x41110990"/>
        <function-ref name="standby" scoped="" ref="0x41110a70"/>
        <function-ref name="getChannel" scoped="" ref="0x41110b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41111748" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41111748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41111920"/>
        <function-ref name="cancel" scoped="" ref="0x41111a00"/>
        <function-ref name="sendDone" scoped="" ref="0x41111ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x4110e080" loc="189:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x4110e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4110e258"/>
        <function-ref name="runTask" scoped="" ref="0x4110e338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x4110f7e8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4110f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4110f9c0"/>
        <function-ref name="header" scoped="" ref="0x4110faa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x4110e4b8" loc="144:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x4110e4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4110e690"/>
        <function-ref name="runTask" scoped="" ref="0x4110e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41111c40" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41111c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41111e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x4110fc20" loc="322:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x4110fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4110fdf8"/>
        <function-ref name="runTask" scoped="" ref="0x4110fed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4110f310" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4110f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4110f4e8"/>
        <function-ref name="ready" scoped="" ref="0x4110f5c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4110f6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41110010" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41110010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x411101e8"/>
        <function-ref name="setChannel" scoped="" ref="0x411102c8"/>
        <function-ref name="getChannel" scoped="" ref="0x411103a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41110c90" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41110c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41110e68"/>
        <function-ref name="suspend" scoped="" ref="0x4110f010"/>
        <function-ref name="resume" scoped="" ref="0x4110f0f0"/>
        <function-ref name="run" scoped="" ref="0x4110f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40840e58" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40840e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40868050"/>
        <function-ref name="ready" scoped="" ref="0x40868130"/>
        <function-ref name="sendDone" scoped="" ref="0x40868210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40868370" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40868370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40868548"/>
        <function-ref name="header" scoped="" ref="0x40868628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40868768" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40868768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40868940"/>
        <function-ref name="wait" scoped="" ref="0x40868a20"/>
        <function-ref name="cancel" scoped="" ref="0x40868b00"/>
        <function-ref name="isFree" scoped="" ref="0x40868be0"/>
        <function-ref name="getNow" scoped="" ref="0x40868cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40868e20" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40868e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40879010"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408790f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408791d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40840a10" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40840a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40840be8"/>
        <function-ref name="header" scoped="" ref="0x40840cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40840538" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40840538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40840710"/>
        <function-ref name="ready" scoped="" ref="0x408407f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408408d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4112d758" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4112d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4112d930"/>
        <function-ref name="ready" scoped="" ref="0x4112da10"/>
        <function-ref name="sendDone" scoped="" ref="0x4112daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4112dc50" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4112dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4112de28"/>
        <function-ref name="header" scoped="" ref="0x4112df08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4112c070" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4112c070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4112c248"/>
        <function-ref name="wait" scoped="" ref="0x4112c328"/>
        <function-ref name="cancel" scoped="" ref="0x4112c408"/>
        <function-ref name="isFree" scoped="" ref="0x4112c4e8"/>
        <function-ref name="getNow" scoped="" ref="0x4112c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4112c708" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4112c708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4112c8e0"/>
        <function-ref name="rand32" scoped="" ref="0x4112c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4112cb20" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4112cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4112ccf8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4112cdd8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4112ceb8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4112a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4112d310" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4112d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4112d4e8"/>
        <function-ref name="header" scoped="" ref="0x4112d5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4112fde0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4112fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4112d010"/>
        <function-ref name="ready" scoped="" ref="0x4112d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4112d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x4112a190" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x4112a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4112a368"/>
        <function-ref name="runTask" scoped="" ref="0x4112a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4086b948" loc="46:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4086b948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4086bb20"/>
        <function-ref name="rand32" scoped="" ref="0x4086bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4086b088" loc="45:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4086b088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4086b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40855de0" loc="44:/home/u3f/tinyos-2_1_2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40855de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4086c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40867478" loc="48:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40867478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40867650"/>
        <function-ref name="rand32" scoped="" ref="0x40867730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4086ab18" loc="47:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4086ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408671e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4086a5f8" loc="46:/home/u3f/tinyos-2_1_2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4086a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4086a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40893060" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40893060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40893238"/>
        <function-ref name="ready" scoped="" ref="0x40893318"/>
        <function-ref name="sendDone" scoped="" ref="0x408933f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40893558" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40893558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40893730"/>
        <function-ref name="header" scoped="" ref="0x40893810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40893950" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40893950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40893b28"/>
        <function-ref name="wait" scoped="" ref="0x40893c08"/>
        <function-ref name="cancel" scoped="" ref="0x40893ce8"/>
        <function-ref name="isFree" scoped="" ref="0x40893dc8"/>
        <function-ref name="getNow" scoped="" ref="0x40893ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40892988" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40892988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40892b60"/>
        <function-ref name="get" scoped="" ref="0x40892c40"/>
        <function-ref name="setValue" scoped="" ref="0x40892d20"/>
        <function-ref name="set" scoped="" ref="0x40892e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40892030" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40892030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40892208"/>
        <function-ref name="createAckPacket" scoped="" ref="0x408922e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408923c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x408924a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40892588"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40892668"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40892748"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40892828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40877720" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40877720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408778f8"/>
        <function-ref name="header" scoped="" ref="0x408779d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40877248" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40877248"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40877420"/>
        <function-ref name="ready" scoped="" ref="0x40877500"/>
        <function-ref name="sendDone" scoped="" ref="0x408775e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40877b18" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40877b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40877cf0"/>
        <function-ref name="noAck" scoped="" ref="0x40877dd0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40877eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4088ee40" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4088ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4088d050"/>
        <function-ref name="stopDone" scoped="" ref="0x4088d130"/>
        <function-ref name="start" scoped="" ref="0x4088d210"/>
        <function-ref name="stop" scoped="" ref="0x4088d2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x4089ecc0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x4089ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4089ee98"/>
        <function-ref name="request" scoped="" ref="0x4089d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4089b330" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4089b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089b508"/>
        <function-ref name="ready" scoped="" ref="0x4089b5e8"/>
        <function-ref name="sendDone" scoped="" ref="0x4089b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4089b828" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4089b828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089ba00"/>
        <function-ref name="header" scoped="" ref="0x4089bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4088dc20" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4088dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4088ddf8"/>
        <function-ref name="turnOn" scoped="" ref="0x4088ded8"/>
        <function-ref name="setChannel" scoped="" ref="0x4089e010"/>
        <function-ref name="done" scoped="" ref="0x4089e0f0"/>
        <function-ref name="standby" scoped="" ref="0x4089e1d0"/>
        <function-ref name="getChannel" scoped="" ref="0x4089e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4089d150" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4089d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4089d328"/>
        <function-ref name="payloadLength" scoped="" ref="0x4089d408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089d4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4089d5c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4089d6a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4089d788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4089ca80" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4089ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4089ccd8"/>
        <function-ref name="turnOn" scoped="" ref="0x4089cdb8"/>
        <function-ref name="setChannel" scoped="" ref="0x4089ce98"/>
        <function-ref name="done" scoped="" ref="0x4089b010"/>
        <function-ref name="standby" scoped="" ref="0x4089b0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x4089b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x4089d8e8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x4089d8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4089dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4089e8c8" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4089e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089eaa0"/>
        <function-ref name="header" scoped="" ref="0x4089eb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x4089c748" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x4089c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089c920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4089dc50" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4089dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4089de28"/>
        <function-ref name="stopDone" scoped="" ref="0x4089df08"/>
        <function-ref name="start" scoped="" ref="0x4089c010"/>
        <function-ref name="stop" scoped="" ref="0x4089c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4089a090" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4089a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4089a268"/>
        <function-ref name="payloadLength" scoped="" ref="0x4089a348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089a428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4089a508"/>
        <function-ref name="headerLength" scoped="" ref="0x4089a5e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4089a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x4088d908" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x4088d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4088dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4089a828" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4089a828"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4089aa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x4089c250" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x4089c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089c428"/>
        <function-ref name="cancel" scoped="" ref="0x4089c508"/>
        <function-ref name="sendDone" scoped="" ref="0x4089c5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4089e3f0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4089e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089e5c8"/>
        <function-ref name="ready" scoped="" ref="0x4089e6a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4089e788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x4089bc40" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x4089bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4089be18"/>
        <function-ref name="request" scoped="" ref="0x4089bef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4088d430" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4088d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4088d608"/>
        <function-ref name="cancel" scoped="" ref="0x4088d6e8"/>
        <function-ref name="sendDone" scoped="" ref="0x4088d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x409d7170" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x409d7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d7348"/>
        <function-ref name="get" scoped="" ref="0x409d7428"/>
        <function-ref name="setValue" scoped="" ref="0x409d7508"/>
        <function-ref name="set" scoped="" ref="0x409d75e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409d9830" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409d9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d9a08"/>
        <function-ref name="payloadLength" scoped="" ref="0x409d9ae8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409d9bc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409d9ca8"/>
        <function-ref name="headerLength" scoped="" ref="0x409d9d88"/>
        <function-ref name="metadataLength" scoped="" ref="0x409d9e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409d8938" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409d8938"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d8b10"/>
        <function-ref name="payloadLength" scoped="" ref="0x409d8bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409d8cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409d8db0"/>
        <function-ref name="headerLength" scoped="" ref="0x409d8e90"/>
        <function-ref name="metadataLength" scoped="" ref="0x409d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409da1b0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409da1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409dacb0"/>
        <function-ref name="clear" scoped="" ref="0x409d9088"/>
        <function-ref name="isValid" scoped="" ref="0x409da900"/>
        <function-ref name="set" scoped="" ref="0x409d9438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x409d80c0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409d80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409d8708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408b19c8" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408b19c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408d84d8"/>
        <function-ref name="clear" scoped="" ref="0x408d8888"/>
        <function-ref name="isValid" scoped="" ref="0x408d8128"/>
        <function-ref name="set" scoped="" ref="0x408d8c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x4113d808" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x4113d808"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4113d9e0"/>
        <function-ref name="get" scoped="" ref="0x4113dac0"/>
        <function-ref name="setValue" scoped="" ref="0x4113dba0"/>
        <function-ref name="set" scoped="" ref="0x4113dc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4113d040" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4113d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4113d218"/>
        <function-ref name="payloadLength" scoped="" ref="0x4113d2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4113d3d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4113d4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x4113d598"/>
        <function-ref name="metadataLength" scoped="" ref="0x4113d678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4113b030" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4113b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4113b208"/>
        <function-ref name="payloadLength" scoped="" ref="0x4113b2e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4113b3c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4113b4a8"/>
        <function-ref name="headerLength" scoped="" ref="0x4113b588"/>
        <function-ref name="metadataLength" scoped="" ref="0x4113b668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x411409a0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x411409a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4113e4d0"/>
        <function-ref name="clear" scoped="" ref="0x4113e880"/>
        <function-ref name="isValid" scoped="" ref="0x4113e120"/>
        <function-ref name="set" scoped="" ref="0x4113ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x4113de70" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4113de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4113c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x4113c798" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x4113c798"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4113cde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x411411f0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x411411f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41141cf0"/>
        <function-ref name="clear" scoped="" ref="0x411400b8"/>
        <function-ref name="isValid" scoped="" ref="0x41141940"/>
        <function-ref name="set" scoped="" ref="0x41140468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x408dac50" loc="20:/home/u3f/tinyos-2_1_2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408dac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408d72e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x408e9c50" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x408e9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408e8790"/>
        <function-ref name="fired" scoped="" ref="0x408d3a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408e8150"/>
        <function-ref name="isOneShot" scoped="" ref="0x408d3ed0"/>
        <function-ref name="getdt" scoped="" ref="0x408e8c40"/>
        <function-ref name="gett0" scoped="" ref="0x408e89e8"/>
        <function-ref name="isRunning" scoped="" ref="0x408d3c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408d32c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408e8470"/>
        <function-ref name="startOneShot" scoped="" ref="0x408d3548"/>
        <function-ref name="stop" scoped="" ref="0x408d37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x408e7010" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408e7658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408d7b80" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408d7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d7d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x408f95c8" loc="29:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x408f95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408f9d18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408e0288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408e0010"/>
        <function-ref name="overflow" scoped="" ref="0x408e0500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408e56c8" loc="27:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408e56c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e58a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x408e5c90" loc="28:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x408e5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408e1150"/>
        <function-ref name="fired" scoped="" ref="0x408e2908"/>
        <function-ref name="startAt" scoped="" ref="0x408e2df8"/>
        <function-ref name="isRunning" scoped="" ref="0x408e2b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x408e13c8"/>
        <function-ref name="start" scoped="" ref="0x408e23f0"/>
        <function-ref name="stop" scoped="" ref="0x408e2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40976010" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40976010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409754e0"/>
        <function-ref name="fired" scoped="" ref="0x40976c78"/>
        <function-ref name="startAt" scoped="" ref="0x409751a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40976ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40975758"/>
        <function-ref name="start" scoped="" ref="0x40976760"/>
        <function-ref name="stop" scoped="" ref="0x40976a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408f7bb8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408f7bb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034f5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034f5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408f7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40975a88" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40975a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40974200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409746f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40974478"/>
        <function-ref name="overflow" scoped="" ref="0x40974968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41161a28" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41161a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41161c00"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41161ce0"/>
        <function-ref name="getControlA" scoped="" ref="0x41161dc0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41161ea0"/>
        <function-ref name="setControlB" scoped="" ref="0x41160010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x411600f0"/>
        <function-ref name="getControlB" scoped="" ref="0x411601d0"/>
        <function-ref name="setControlA" scoped="" ref="0x411602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41167c30" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41167c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411650f8"/>
        <function-ref name="fired" scoped="" ref="0x411668b8"/>
        <function-ref name="startAt" scoped="" ref="0x41166da8"/>
        <function-ref name="isRunning" scoped="" ref="0x41166b30"/>
        <function-ref name="getAlarm" scoped="" ref="0x41165370"/>
        <function-ref name="start" scoped="" ref="0x411663a0"/>
        <function-ref name="stop" scoped="" ref="0x41166640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411677f8" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411677f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411679d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x411656a0" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x411656a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41165df0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41163300"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41163088"/>
        <function-ref name="overflow" scoped="" ref="0x41163578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4115fe98" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4115fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4115d0c0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4115d1a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x4115d280"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4115d360"/>
        <function-ref name="countBusy" scoped="" ref="0x4115d440"/>
        <function-ref name="compareABusy" scoped="" ref="0x4115d520"/>
        <function-ref name="getAssr" scoped="" ref="0x4115d600"/>
        <function-ref name="setAssr" scoped="" ref="0x4115d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x411604a0" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x411604a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4115f9f0"/>
        <function-ref name="fired" scoped="" ref="0x4115f010"/>
        <function-ref name="get" scoped="" ref="0x41160ae8"/>
        <function-ref name="reset" scoped="" ref="0x4115f288"/>
        <function-ref name="isOn" scoped="" ref="0x4115fc68"/>
        <function-ref name="set" scoped="" ref="0x41160d60"/>
        <function-ref name="start" scoped="" ref="0x4115f500"/>
        <function-ref name="stop" scoped="" ref="0x4115f778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41163868" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41163868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x411612e0"/>
        <function-ref name="test" scoped="" ref="0x41162dd0"/>
        <function-ref name="get" scoped="" ref="0x41163eb0"/>
        <function-ref name="setScale" scoped="" ref="0x41161558"/>
        <function-ref name="getScale" scoped="" ref="0x411617f8"/>
        <function-ref name="reset" scoped="" ref="0x41162668"/>
        <function-ref name="overflow" scoped="" ref="0x411623f0"/>
        <function-ref name="isOn" scoped="" ref="0x41161068"/>
        <function-ref name="set" scoped="" ref="0x41162150"/>
        <function-ref name="start" scoped="" ref="0x411628e0"/>
        <function-ref name="stop" scoped="" ref="0x41162b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4093c1a0" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4093c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4093c378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4093c458"/>
        <function-ref name="getControlA" scoped="" ref="0x4093c538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4093c618"/>
        <function-ref name="setControlB" scoped="" ref="0x4093c6f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4093c7d8"/>
        <function-ref name="getControlB" scoped="" ref="0x4093c8b8"/>
        <function-ref name="setControlA" scoped="" ref="0x4093c998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4093a858" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4093a858"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4093aa30"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4093ab10"/>
        <function-ref name="controlABusy" scoped="" ref="0x4093abf0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4093acd0"/>
        <function-ref name="countBusy" scoped="" ref="0x4093adb0"/>
        <function-ref name="compareABusy" scoped="" ref="0x4093ae90"/>
        <function-ref name="getAssr" scoped="" ref="0x40938010"/>
        <function-ref name="setAssr" scoped="" ref="0x409380f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4093ccc0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4093ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4093a288"/>
        <function-ref name="fired" scoped="" ref="0x4093b830"/>
        <function-ref name="get" scoped="" ref="0x4093b318"/>
        <function-ref name="reset" scoped="" ref="0x4093baa8"/>
        <function-ref name="isOn" scoped="" ref="0x4093a500"/>
        <function-ref name="set" scoped="" ref="0x4093b590"/>
        <function-ref name="start" scoped="" ref="0x4093bd20"/>
        <function-ref name="stop" scoped="" ref="0x4093a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40943dd8" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40943dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4093d878"/>
        <function-ref name="test" scoped="" ref="0x4093d388"/>
        <function-ref name="get" scoped="" ref="0x4093f468"/>
        <function-ref name="setScale" scoped="" ref="0x4093daf0"/>
        <function-ref name="getScale" scoped="" ref="0x4093dd90"/>
        <function-ref name="reset" scoped="" ref="0x4093fbf8"/>
        <function-ref name="overflow" scoped="" ref="0x4093f980"/>
        <function-ref name="isOn" scoped="" ref="0x4093d600"/>
        <function-ref name="set" scoped="" ref="0x4093f6e0"/>
        <function-ref name="start" scoped="" ref="0x4093fe70"/>
        <function-ref name="stop" scoped="" ref="0x4093d110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409511a0" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409511a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40951378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40951458"/>
        <function-ref name="getControlA" scoped="" ref="0x40951538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40951618"/>
        <function-ref name="setControlB" scoped="" ref="0x409516f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409517d8"/>
        <function-ref name="getControlB" scoped="" ref="0x409518b8"/>
        <function-ref name="setControlA" scoped="" ref="0x40951998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4094e7b8" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4094e7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4094e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4094ec18" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4094ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4094edf0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4094eed0"/>
        <function-ref name="controlABusy" scoped="" ref="0x4094d010"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4094d0f0"/>
        <function-ref name="countBusy" scoped="" ref="0x4094d1d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x4094d2b0"/>
        <function-ref name="getAssr" scoped="" ref="0x4094d390"/>
        <function-ref name="setAssr" scoped="" ref="0x4094d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40951cc0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40951cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4094e288"/>
        <function-ref name="fired" scoped="" ref="0x40950830"/>
        <function-ref name="get" scoped="" ref="0x40950318"/>
        <function-ref name="reset" scoped="" ref="0x40950aa8"/>
        <function-ref name="isOn" scoped="" ref="0x4094e500"/>
        <function-ref name="set" scoped="" ref="0x40950590"/>
        <function-ref name="start" scoped="" ref="0x40950d20"/>
        <function-ref name="stop" scoped="" ref="0x4094e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40938de8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40938de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40952878"/>
        <function-ref name="test" scoped="" ref="0x40952388"/>
        <function-ref name="get" scoped="" ref="0x40935468"/>
        <function-ref name="setScale" scoped="" ref="0x40952af0"/>
        <function-ref name="getScale" scoped="" ref="0x40952d90"/>
        <function-ref name="reset" scoped="" ref="0x40935bf8"/>
        <function-ref name="overflow" scoped="" ref="0x40935980"/>
        <function-ref name="isOn" scoped="" ref="0x40952600"/>
        <function-ref name="set" scoped="" ref="0x409356e0"/>
        <function-ref name="start" scoped="" ref="0x40935e70"/>
        <function-ref name="stop" scoped="" ref="0x40952110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40998bd0" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40998bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40998da8"/>
        <function-ref name="runTask" scoped="" ref="0x40998e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4099a248" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4099a248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40998708"/>
        <function-ref name="fired" scoped="" ref="0x4099aeb0"/>
        <function-ref name="startAt" scoped="" ref="0x409983c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40998150"/>
        <function-ref name="getAlarm" scoped="" ref="0x40998980"/>
        <function-ref name="start" scoped="" ref="0x4099a998"/>
        <function-ref name="stop" scoped="" ref="0x4099ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408e3f08" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408e3f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4099ba18"/>
        <function-ref name="fired" scoped="" ref="0x40971cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4099b3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4099b180"/>
        <function-ref name="getdt" scoped="" ref="0x4099bec8"/>
        <function-ref name="gett0" scoped="" ref="0x4099bc70"/>
        <function-ref name="isRunning" scoped="" ref="0x40971f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40971558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4099b6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x409717d8"/>
        <function-ref name="stop" scoped="" ref="0x40971a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x409cb560" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x409cb560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409cb738"/>
        <function-ref name="runTask" scoped="" ref="0x409cb818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x409ce338" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x409ce338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409cce38"/>
        <function-ref name="fired" scoped="" ref="0x409cc0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409cc7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x409cc5a0"/>
        <function-ref name="getdt" scoped="" ref="0x409cb310"/>
        <function-ref name="gett0" scoped="" ref="0x409cb0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x409cc348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409ce960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409ccb18"/>
        <function-ref name="startOneShot" scoped="" ref="0x409cebe0"/>
        <function-ref name="stop" scoped="" ref="0x409cee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40996f00" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40996f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409cfb40"/>
        <function-ref name="fired" scoped="" ref="0x40995ce0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409cf4e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x409cf278"/>
        <function-ref name="getdt" scoped="" ref="0x409ce048"/>
        <function-ref name="gett0" scoped="" ref="0x409cfda8"/>
        <function-ref name="isRunning" scoped="" ref="0x409cf010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40995558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409cf810"/>
        <function-ref name="startOneShot" scoped="" ref="0x409957e8"/>
        <function-ref name="stop" scoped="" ref="0x40995a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409c9a88" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409c9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409c80f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x409c8448" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409c8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409c8b98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409c20a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409c8e10"/>
        <function-ref name="overflow" scoped="" ref="0x409c2320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x408d5d10" loc="49:/home/u3f/tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x408d5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a3e38"/>
            <typename><typedef-ref name="TMilli" ref="0x403aa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409dd8a8"/>
        <function-ref name="fired" scoped="" ref="0x409deaa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409dd268"/>
        <function-ref name="isOneShot" scoped="" ref="0x409dd010"/>
        <function-ref name="getdt" scoped="" ref="0x409ddd58"/>
        <function-ref name="gett0" scoped="" ref="0x409ddb00"/>
        <function-ref name="isRunning" scoped="" ref="0x409ded00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409de350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409dd588"/>
        <function-ref name="startOneShot" scoped="" ref="0x409de5d0"/>
        <function-ref name="stop" scoped="" ref="0x409de850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409d43f0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409d43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d45c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409d46a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409d4788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409d4868"/>
        <function-ref name="headerLength" scoped="" ref="0x409d4948"/>
        <function-ref name="metadataLength" scoped="" ref="0x409d4a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409d4bb8" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409d4bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d4d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x409d4e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409d3010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409d30f0"/>
        <function-ref name="headerLength" scoped="" ref="0x409d31d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409d32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x409e1db8" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x409e1db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d4010"/>
        <function-ref name="get" scoped="" ref="0x409d40f0"/>
        <function-ref name="setValue" scoped="" ref="0x409d41d0"/>
        <function-ref name="set" scoped="" ref="0x409d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409e0548" loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409e0548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409e0720"/>
        <function-ref name="stopDone" scoped="" ref="0x409e0800"/>
        <function-ref name="start" scoped="" ref="0x409e08e0"/>
        <function-ref name="stop" scoped="" ref="0x409e09c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409fd408" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409fd408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409fd5e0"/>
        <function-ref name="request" scoped="" ref="0x409fd6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409fb9c8" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409fb9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fbba0"/>
        <function-ref name="ready" scoped="" ref="0x409fbc80"/>
        <function-ref name="sendDone" scoped="" ref="0x409fbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409fbec0" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409fbec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fa0c0"/>
        <function-ref name="header" scoped="" ref="0x409fa1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409ff328" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409ff328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409ff500"/>
        <function-ref name="turnOn" scoped="" ref="0x409ff5e0"/>
        <function-ref name="setChannel" scoped="" ref="0x409ff6c0"/>
        <function-ref name="done" scoped="" ref="0x409ff7a0"/>
        <function-ref name="standby" scoped="" ref="0x409ff880"/>
        <function-ref name="getChannel" scoped="" ref="0x409ff960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409fd800" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409fd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fd9d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409fdab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fdb98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409fdc78"/>
        <function-ref name="headerLength" scoped="" ref="0x409fdd58"/>
        <function-ref name="metadataLength" scoped="" ref="0x409fde38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409fb1b0" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409fb1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409fb408"/>
        <function-ref name="turnOn" scoped="" ref="0x409fb4e8"/>
        <function-ref name="setChannel" scoped="" ref="0x409fb5c8"/>
        <function-ref name="done" scoped="" ref="0x409fb6a8"/>
        <function-ref name="standby" scoped="" ref="0x409fb788"/>
        <function-ref name="getChannel" scoped="" ref="0x409fb868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409fc010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409fc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409fc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409fd010" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fd1e8"/>
        <function-ref name="header" scoped="" ref="0x409fd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x409fce48" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x409fce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fb050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409fc378" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409fc378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409fc550"/>
        <function-ref name="stopDone" scoped="" ref="0x409fc630"/>
        <function-ref name="start" scoped="" ref="0x409fc710"/>
        <function-ref name="stop" scoped="" ref="0x409fc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409fa718" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409fa718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fa8f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409fa9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409faab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409fab90"/>
        <function-ref name="headerLength" scoped="" ref="0x409fac70"/>
        <function-ref name="metadataLength" scoped="" ref="0x409fad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409ff010" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ff1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409faeb0" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409faeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409f90c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x409fc950" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x409fc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fcb28"/>
        <function-ref name="cancel" scoped="" ref="0x409fcc08"/>
        <function-ref name="sendDone" scoped="" ref="0x409fcce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409ffaa0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409ffaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409ffc78"/>
        <function-ref name="ready" scoped="" ref="0x409ffd58"/>
        <function-ref name="sendDone" scoped="" ref="0x409ffe38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409fa300" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409fa300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409fa4d8"/>
        <function-ref name="request" scoped="" ref="0x409fa5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409e0b00" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409e0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e0cd8"/>
        <function-ref name="cancel" scoped="" ref="0x409e0db8"/>
        <function-ref name="sendDone" scoped="" ref="0x409e0e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409f4a68" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409f4a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409f4c40"/>
        <function-ref name="request" scoped="" ref="0x409f4d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x409f1bf8" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409f1bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f07f8"/>
        <function-ref name="get" scoped="" ref="0x409f0538"/>
        <function-ref name="isSet" scoped="" ref="0x409f0278"/>
        <function-ref name="set" scoped="" ref="0x409f0ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a06a08" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a06a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a06be0"/>
        <function-ref name="get" scoped="" ref="0x40a06cc0"/>
        <function-ref name="setValue" scoped="" ref="0x40a06da0"/>
        <function-ref name="set" scoped="" ref="0x40a06e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a09ad8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a09ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a086b8"/>
        <function-ref name="clear" scoped="" ref="0x40a08a68"/>
        <function-ref name="isValid" scoped="" ref="0x40a08308"/>
        <function-ref name="set" scoped="" ref="0x40a08e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409f78a8" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409f78a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409f7a80"/>
        <function-ref name="turnOn" scoped="" ref="0x409f7b60"/>
        <function-ref name="setChannel" scoped="" ref="0x409f7c40"/>
        <function-ref name="done" scoped="" ref="0x409f7d20"/>
        <function-ref name="standby" scoped="" ref="0x409f7e00"/>
        <function-ref name="getChannel" scoped="" ref="0x409f7ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a05700" loc="66:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a05700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a058d8"/>
        <function-ref name="wait" scoped="" ref="0x40a059b8"/>
        <function-ref name="cancel" scoped="" ref="0x40a05a98"/>
        <function-ref name="isFree" scoped="" ref="0x40a05b78"/>
        <function-ref name="getNow" scoped="" ref="0x40a05c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409f3888" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409f3888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f1470"/>
        <function-ref name="get" scoped="" ref="0x409f11b0"/>
        <function-ref name="isSet" scoped="" ref="0x409f3ed0"/>
        <function-ref name="set" scoped="" ref="0x409f1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409f4ed0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409f4ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f30c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409f31a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f3280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409f3360"/>
        <function-ref name="headerLength" scoped="" ref="0x409f3440"/>
        <function-ref name="metadataLength" scoped="" ref="0x409f3520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a09170" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a09170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a093c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a094a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a09588"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a09668"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a09748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409f4618" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409f4618"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409f47f0"/>
        <function-ref name="header" scoped="" ref="0x409f48d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a0b618" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a0b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a0aaf0"/>
        <function-ref name="fired" scoped="" ref="0x40a0a2c0"/>
        <function-ref name="startAt" scoped="" ref="0x40a0a7b0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a0a538"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a0ad68"/>
        <function-ref name="start" scoped="" ref="0x40a0bd68"/>
        <function-ref name="stop" scoped="" ref="0x40a0a048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a0f010" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0fbd8"/>
        <function-ref name="get" scoped="" ref="0x40a0f918"/>
        <function-ref name="isSet" scoped="" ref="0x40a0f658"/>
        <function-ref name="set" scoped="" ref="0x40a0fe98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a0db78" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a0db78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a0b200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409f40c0" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409f40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f4298"/>
        <function-ref name="ready" scoped="" ref="0x409f4378"/>
        <function-ref name="sendDone" scoped="" ref="0x409f4458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a0e3d8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0d010"/>
        <function-ref name="get" scoped="" ref="0x40a0ece0"/>
        <function-ref name="isSet" scoped="" ref="0x40a0ea20"/>
        <function-ref name="set" scoped="" ref="0x40a0d2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a050e0" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a050e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a052b8"/>
        <function-ref name="get" scoped="" ref="0x40a05398"/>
        <function-ref name="setValue" scoped="" ref="0x40a05478"/>
        <function-ref name="set" scoped="" ref="0x40a05558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a06370" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a06370"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a06548"/>
        <function-ref name="get" scoped="" ref="0x40a06628"/>
        <function-ref name="setValue" scoped="" ref="0x40a06708"/>
        <function-ref name="set" scoped="" ref="0x40a067e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a0d680" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a0d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a0d858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a21628" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a21628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a21800"/>
        <function-ref name="request" scoped="" ref="0x40a218e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a2f260" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a2f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a2f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a1e7d0" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a1e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1d3b8"/>
        <function-ref name="get" scoped="" ref="0x40a1d0f8"/>
        <function-ref name="isSet" scoped="" ref="0x40a1ee18"/>
        <function-ref name="set" scoped="" ref="0x40a1d678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a30510" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a30510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a306e8"/>
        <function-ref name="get" scoped="" ref="0x40a307c8"/>
        <function-ref name="setValue" scoped="" ref="0x40a308a8"/>
        <function-ref name="set" scoped="" ref="0x40a30988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40a00118" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40a00118"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a002f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a2e480" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a2e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a2d0a8"/>
        <function-ref name="clear" scoped="" ref="0x40a2d458"/>
        <function-ref name="isValid" scoped="" ref="0x40a2ecd0"/>
        <function-ref name="set" scoped="" ref="0x40a2d808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40a16820" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a16820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a169f8"/>
        <function-ref name="isInput" scoped="" ref="0x40a16ad8"/>
        <function-ref name="toggle" scoped="" ref="0x40a16bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a16c98"/>
        <function-ref name="get" scoped="" ref="0x40a16d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a16e58"/>
        <function-ref name="set" scoped="" ref="0x40a15010"/>
        <function-ref name="clr" scoped="" ref="0x40a150f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a2b298" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a2b298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a2b470"/>
        <function-ref name="wait" scoped="" ref="0x40a2b550"/>
        <function-ref name="cancel" scoped="" ref="0x40a2b630"/>
        <function-ref name="isFree" scoped="" ref="0x40a2b710"/>
        <function-ref name="getNow" scoped="" ref="0x40a2b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a00498" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a00498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a00670"/>
        <function-ref name="turnOn" scoped="" ref="0x40a00750"/>
        <function-ref name="setChannel" scoped="" ref="0x40a00830"/>
        <function-ref name="done" scoped="" ref="0x40a00910"/>
        <function-ref name="standby" scoped="" ref="0x40a009f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40a00ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40a2fd18" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a2fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a11370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a1f458" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a1f458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1e048"/>
        <function-ref name="get" scoped="" ref="0x40a1fd60"/>
        <function-ref name="isSet" scoped="" ref="0x40a1faa0"/>
        <function-ref name="set" scoped="" ref="0x40a1e308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a21a90" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a21a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a21c68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a21d48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a21e28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a21f08"/>
        <function-ref name="headerLength" scoped="" ref="0x40a1f010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a1f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40a13d70" loc="69:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a13d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a16010"/>
        <function-ref name="isInput" scoped="" ref="0x40a160f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a161d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a162b0"/>
        <function-ref name="get" scoped="" ref="0x40a16390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a16470"/>
        <function-ref name="set" scoped="" ref="0x40a16550"/>
        <function-ref name="clr" scoped="" ref="0x40a16630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a11690" loc="77:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a11690"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a11868"/>
        <function-ref name="headerLength" scoped="" ref="0x40a11948"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a11a28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a11b08"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a11be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a211d8" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a211d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a213b0"/>
        <function-ref name="header" scoped="" ref="0x40a21490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40a81998" loc="847:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40a81998"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a81b70"/>
        <function-ref name="runTask" scoped="" ref="0x40a81c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a1dba8" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a1dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1b790"/>
        <function-ref name="get" scoped="" ref="0x40a1b4d0"/>
        <function-ref name="isSet" scoped="" ref="0x40a1b210"/>
        <function-ref name="set" scoped="" ref="0x40a1ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a01aa0" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a01aa0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a01c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a17148" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a17148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a17320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a17400"/>
        <function-ref name="request" scoped="" ref="0x40a174e0"/>
        <function-ref name="granted" scoped="" ref="0x40a175c0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a176a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40a18690" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a18690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a188e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a189c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a18aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a18b88"/>
        <function-ref name="get" scoped="" ref="0x40a18c68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a18d48"/>
        <function-ref name="set" scoped="" ref="0x40a18e28"/>
        <function-ref name="clr" scoped="" ref="0x40a18f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a1a010" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a1a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1abd8"/>
        <function-ref name="get" scoped="" ref="0x40a1a918"/>
        <function-ref name="isSet" scoped="" ref="0x40a1a658"/>
        <function-ref name="set" scoped="" ref="0x40a1ae98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a00c70" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a00c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a00e48"/>
        <function-ref name="ready" scoped="" ref="0x40a00f28"/>
        <function-ref name="sendDone" scoped="" ref="0x40a21018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40a329e0" loc="72:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a329e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a32bb8"/>
        <function-ref name="disable" scoped="" ref="0x40a32c98"/>
        <function-ref name="captured" scoped="" ref="0x40a32d78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a32e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40a136f8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a136f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a138d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a139b0"/>
        <function-ref name="splitRead" scoped="" ref="0x40a13a90"/>
        <function-ref name="write" scoped="" ref="0x40a13b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a30bd0" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a30bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a30da8"/>
        <function-ref name="get" scoped="" ref="0x40a30e88"/>
        <function-ref name="setValue" scoped="" ref="0x40a2e010"/>
        <function-ref name="set" scoped="" ref="0x40a2e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a11e60" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a11e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a30050"/>
        <function-ref name="get" scoped="" ref="0x40a30130"/>
        <function-ref name="setValue" scoped="" ref="0x40a30210"/>
        <function-ref name="set" scoped="" ref="0x40a302f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a18278" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a18278"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a18450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a2dc48" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a2dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a2de20"/>
        <function-ref name="suspend" scoped="" ref="0x40a2df00"/>
        <function-ref name="resume" scoped="" ref="0x40a2b010"/>
        <function-ref name="run" scoped="" ref="0x40a2b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40aa0db8" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40aa0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9f010"/>
        <function-ref name="isInput" scoped="" ref="0x40a9f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a9f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9f2b0"/>
        <function-ref name="get" scoped="" ref="0x40a9f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9f470"/>
        <function-ref name="set" scoped="" ref="0x40a9f550"/>
        <function-ref name="clr" scoped="" ref="0x40a9f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40aa03d0" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40aa03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aa05a8"/>
        <function-ref name="isInput" scoped="" ref="0x40aa0688"/>
        <function-ref name="toggle" scoped="" ref="0x40aa0768"/>
        <function-ref name="isOutput" scoped="" ref="0x40aa0848"/>
        <function-ref name="get" scoped="" ref="0x40aa0928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aa0a08"/>
        <function-ref name="set" scoped="" ref="0x40aa0ae8"/>
        <function-ref name="clr" scoped="" ref="0x40aa0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a9e030" loc="49:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a9e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a9d4e0"/>
        <function-ref name="fired" scoped="" ref="0x40a9ec98"/>
        <function-ref name="startAt" scoped="" ref="0x40a9d1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a9ef10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a9d758"/>
        <function-ref name="start" scoped="" ref="0x40a9e780"/>
        <function-ref name="stop" scoped="" ref="0x40a9ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40aa15b8" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40aa15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aa1790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aa1870"/>
        <function-ref name="request" scoped="" ref="0x40aa1950"/>
        <function-ref name="granted" scoped="" ref="0x40aa1a30"/>
        <function-ref name="isOwner" scoped="" ref="0x40aa1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40aa5b08" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40aa5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aa5ce0"/>
        <function-ref name="isInput" scoped="" ref="0x40aa5dc0"/>
        <function-ref name="toggle" scoped="" ref="0x40aa5ea0"/>
        <function-ref name="isOutput" scoped="" ref="0x40aa1010"/>
        <function-ref name="get" scoped="" ref="0x40aa10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aa11d0"/>
        <function-ref name="set" scoped="" ref="0x40aa12b0"/>
        <function-ref name="clr" scoped="" ref="0x40aa1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a9f820" loc="48:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a9f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a9f9f8"/>
        <function-ref name="disable" scoped="" ref="0x40a9fad8"/>
        <function-ref name="captured" scoped="" ref="0x40a9fbb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a9fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40aa1cc0" loc="43:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40aa1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40aa1e98"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40aa0010"/>
        <function-ref name="splitRead" scoped="" ref="0x40aa00f0"/>
        <function-ref name="write" scoped="" ref="0x40aa01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a9db48" loc="50:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a9db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TRadio" ref="0x4041b728"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a9b200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40aba420" loc="46:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40aba420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aba5f8"/>
        <function-ref name="isInput" scoped="" ref="0x40aba6d8"/>
        <function-ref name="toggle" scoped="" ref="0x40aba7b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40aba898"/>
        <function-ref name="get" scoped="" ref="0x40aba978"/>
        <function-ref name="makeOutput" scoped="" ref="0x40abaa58"/>
        <function-ref name="set" scoped="" ref="0x40abab38"/>
        <function-ref name="clr" scoped="" ref="0x40abac18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40ab6660" loc="45:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40ab6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40aba110"/>
        <function-ref name="test" scoped="" ref="0x40abbbe0"/>
        <function-ref name="get" scoped="" ref="0x40ab6ca8"/>
        <function-ref name="captured" scoped="" ref="0x40abb1d8"/>
        <function-ref name="reset" scoped="" ref="0x40abb478"/>
        <function-ref name="isOn" scoped="" ref="0x40abbe58"/>
        <function-ref name="set" scoped="" ref="0x40ab6f20"/>
        <function-ref name="start" scoped="" ref="0x40abb6f0"/>
        <function-ref name="stop" scoped="" ref="0x40abb968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40abae20" loc="47:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40abae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ab5010"/>
        <function-ref name="isInput" scoped="" ref="0x40ab50f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ab51d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ab52b0"/>
        <function-ref name="get" scoped="" ref="0x40ab5390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ab5470"/>
        <function-ref name="set" scoped="" ref="0x40ab5550"/>
        <function-ref name="clr" scoped="" ref="0x40ab5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40abc030" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40abc030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40abc208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a9b980" loc="39:/home/u3f/tinyos-2_1_2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a9b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a9bb58"/>
        <function-ref name="disable" scoped="" ref="0x40a9bc38"/>
        <function-ref name="captured" scoped="" ref="0x40a9bd18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a9bdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40ac8500" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40ac8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ac86d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ac87b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40aacaa8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40aacaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40aacc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a9ad98" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a9ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40aace50" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40aace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40acf050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40acf130"/>
        <function-ref name="splitRead" scoped="" ref="0x40acf210"/>
        <function-ref name="write" scoped="" ref="0x40acf2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ac8c50" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ac8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac8e28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ac8f08"/>
        <function-ref name="request" scoped="" ref="0x40ace010"/>
        <function-ref name="granted" scoped="" ref="0x40ace0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ace1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40ae9420" loc="296:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40ae9420"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ae95f8"/>
        <function-ref name="runTask" scoped="" ref="0x40ae96d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40ac7b38" loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40ac7b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ac7d10"/>
        <function-ref name="sendDone" scoped="" ref="0x40ac7df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40ac4100" loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40ac4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac42d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ac43b8"/>
        <function-ref name="request" scoped="" ref="0x40ac4498"/>
        <function-ref name="granted" scoped="" ref="0x40ac4578"/>
        <function-ref name="isOwner" scoped="" ref="0x40ac4658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40ac7198" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40ac7198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40ac7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40aced80" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40aced80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ac7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40ad93d0" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40ad93d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40ad95a8"/>
        <function-ref name="sleep" scoped="" ref="0x40ac5a30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40ad9768"/>
        <function-ref name="dataReady" scoped="" ref="0x40ac5b10"/>
        <function-ref name="initMaster" scoped="" ref="0x40ad9928"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40ad9a08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40ad9ae8"/>
        <function-ref name="read" scoped="" ref="0x40ad9bc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40ad9ca8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40ad9d88"/>
        <function-ref name="setClock" scoped="" ref="0x40ad9e68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40ac5010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40ac50f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40ac5250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40ac5330"/>
        <function-ref name="write" scoped="" ref="0x40ac5410"/>
        <function-ref name="enableSpi" scoped="" ref="0x40ac54f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40ac55d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40ac56b0"/>
        <function-ref name="getClock" scoped="" ref="0x40ac5790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40ac5870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40ad9688"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40ad9848"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40ac5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ac7520" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ac7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ac76f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ac77d8"/>
        <function-ref name="splitRead" scoped="" ref="0x40ac78b8"/>
        <function-ref name="write" scoped="" ref="0x40ac7998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ac62a8" loc="95:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ac62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac6480"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ac6560"/>
        <function-ref name="request" scoped="" ref="0x40ac6640"/>
        <function-ref name="granted" scoped="" ref="0x40ac6720"/>
        <function-ref name="isOwner" scoped="" ref="0x40ac6800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40ac4808" loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ac49e0"/>
        <function-ref name="userId" scoped="" ref="0x40ac4ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40ac4c88" loc="101:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40ac4c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40ac4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40af4070" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40af4070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40af4248"/>
        <function-ref name="sleep" scoped="" ref="0x40b18630"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40af4408"/>
        <function-ref name="dataReady" scoped="" ref="0x40b18710"/>
        <function-ref name="initMaster" scoped="" ref="0x40af45c8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40af46a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40af4788"/>
        <function-ref name="read" scoped="" ref="0x40af4868"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40af4948"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40af4a28"/>
        <function-ref name="setClock" scoped="" ref="0x40af4b08"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40af4be8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40af4cc8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40af4e28"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40af4f08"/>
        <function-ref name="write" scoped="" ref="0x40b18010"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b180f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b181d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b182b0"/>
        <function-ref name="getClock" scoped="" ref="0x40b18390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b18470"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40af4328"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40af44e8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b18550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40b10060" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40b10060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b10238"/>
        <function-ref name="isInput" scoped="" ref="0x40b10318"/>
        <function-ref name="toggle" scoped="" ref="0x40b103f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b104d8"/>
        <function-ref name="get" scoped="" ref="0x40b105b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b10698"/>
        <function-ref name="set" scoped="" ref="0x40b10778"/>
        <function-ref name="clr" scoped="" ref="0x40b10858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40b13bf0" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40b13bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b13dc8"/>
        <function-ref name="isInput" scoped="" ref="0x40b13ea8"/>
        <function-ref name="toggle" scoped="" ref="0x40b12010"/>
        <function-ref name="isOutput" scoped="" ref="0x40b120f0"/>
        <function-ref name="get" scoped="" ref="0x40b121d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b122b0"/>
        <function-ref name="set" scoped="" ref="0x40b12390"/>
        <function-ref name="clr" scoped="" ref="0x40b12470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40b13218" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40b13218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b133f0"/>
        <function-ref name="isInput" scoped="" ref="0x40b134d0"/>
        <function-ref name="toggle" scoped="" ref="0x40b135b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b13690"/>
        <function-ref name="get" scoped="" ref="0x40b13770"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b13850"/>
        <function-ref name="set" scoped="" ref="0x40b13930"/>
        <function-ref name="clr" scoped="" ref="0x40b13a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40b11cd0" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b11cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b11ea8"/>
        <function-ref name="stop" scoped="" ref="0x40b13010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40b10a60" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40b10a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b10c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40b153a8" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40b153a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b15580"/>
        <function-ref name="sleep" scoped="" ref="0x40b14958"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b15740"/>
        <function-ref name="dataReady" scoped="" ref="0x40b14a38"/>
        <function-ref name="initMaster" scoped="" ref="0x40b15900"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b159e0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b15ac0"/>
        <function-ref name="read" scoped="" ref="0x40b15ba0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b15c80"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b15d60"/>
        <function-ref name="setClock" scoped="" ref="0x40b15e40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b15f20"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b14018"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b14178"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b14258"/>
        <function-ref name="write" scoped="" ref="0x40b14338"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b14418"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b144f8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b145d8"/>
        <function-ref name="getClock" scoped="" ref="0x40b146b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b14798"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b15660"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b15820"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b14878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40b12660" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40b12660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b12838"/>
        <function-ref name="isInput" scoped="" ref="0x40b12918"/>
        <function-ref name="toggle" scoped="" ref="0x40b129f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b12ad8"/>
        <function-ref name="get" scoped="" ref="0x40b12bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b12c98"/>
        <function-ref name="set" scoped="" ref="0x40b12d78"/>
        <function-ref name="clr" scoped="" ref="0x40b12e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b358d8" loc="86:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b358d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b35ac0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b35ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b33208" loc="89:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b33208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b333f0"/>
        <function-ref name="configure" scoped="" ref="0x40b334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b35198" loc="85:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b35198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b35380"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b35460"/>
        <function-ref name="request" scoped="" ref="0x40b35540"/>
        <function-ref name="granted" scoped="" ref="0x40b35620"/>
        <function-ref name="isOwner" scoped="" ref="0x40b35700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b35ce0" loc="87:/home/u3f/tinyos-2_1_2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b35ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b35eb8"/>
        <function-ref name="userId" scoped="" ref="0x40b33010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411d82e8" loc="44:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411d82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411d84c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x411d8620" loc="45:/home/u3f/tinyos-2_1_2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x411d8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411d87f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x411d88d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411d89b8"/>
        <function-ref name="dequeue" scoped="" ref="0x411d8a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411d7d70" loc="52:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411d7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411d6010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411d66f0" loc="56:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411d66f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411d68d8"/>
        <function-ref name="configure" scoped="" ref="0x411d69b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x411d6b18" loc="57:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x411d6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411d6cf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x411d6dd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411d6eb0"/>
        <function-ref name="dequeue" scoped="" ref="0x411d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411d7630" loc="51:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411d7630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411d7818"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411d78f8"/>
        <function-ref name="request" scoped="" ref="0x411d79d8"/>
        <function-ref name="granted" scoped="" ref="0x411d7ab8"/>
        <function-ref name="isOwner" scoped="" ref="0x411d7b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411d6230" loc="53:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411d6230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411d6408"/>
        <function-ref name="userId" scoped="" ref="0x411d64e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x411d5190" loc="69:/home/u3f/tinyos-2_1_2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x411d5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411d5368"/>
        <function-ref name="runTask" scoped="" ref="0x411d5448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b4a218" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b4a218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b4a3f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b4a4d0"/>
        <function-ref name="getControlA" scoped="" ref="0x40b4a5b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b4a690"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b4a770"/>
        <function-ref name="setControlB" scoped="" ref="0x40b4a850"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b4a930"/>
        <function-ref name="getControlB" scoped="" ref="0x40b4aa10"/>
        <function-ref name="setControlC" scoped="" ref="0x40b4aaf0"/>
        <function-ref name="setControlA" scoped="" ref="0x40b4abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b4af08" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b4af08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b4f9f0"/>
        <function-ref name="test" scoped="" ref="0x40b4f500"/>
        <function-ref name="get" scoped="" ref="0x40b50578"/>
        <function-ref name="captured" scoped="" ref="0x40b50a90"/>
        <function-ref name="reset" scoped="" ref="0x40b50d30"/>
        <function-ref name="isOn" scoped="" ref="0x40b4f778"/>
        <function-ref name="set" scoped="" ref="0x40b507f0"/>
        <function-ref name="start" scoped="" ref="0x40b4f010"/>
        <function-ref name="stop" scoped="" ref="0x40b4f288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b48120" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b48120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b47690"/>
        <function-ref name="fired" scoped="" ref="0x40b48c80"/>
        <function-ref name="get" scoped="" ref="0x40b48768"/>
        <function-ref name="reset" scoped="" ref="0x40b48ef8"/>
        <function-ref name="isOn" scoped="" ref="0x40b47908"/>
        <function-ref name="set" scoped="" ref="0x40b489e0"/>
        <function-ref name="start" scoped="" ref="0x40b471a0"/>
        <function-ref name="stop" scoped="" ref="0x40b47418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b30830" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b30830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b512c0"/>
        <function-ref name="test" scoped="" ref="0x40b2dd90"/>
        <function-ref name="get" scoped="" ref="0x40b30e78"/>
        <function-ref name="setScale" scoped="" ref="0x40b51538"/>
        <function-ref name="getScale" scoped="" ref="0x40b517d8"/>
        <function-ref name="reset" scoped="" ref="0x40b2d628"/>
        <function-ref name="overflow" scoped="" ref="0x40b2d3b0"/>
        <function-ref name="isOn" scoped="" ref="0x40b51048"/>
        <function-ref name="set" scoped="" ref="0x40b2d110"/>
        <function-ref name="start" scoped="" ref="0x40b2d8a0"/>
        <function-ref name="stop" scoped="" ref="0x40b2db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b41920" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b41920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b41af8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b41bd8"/>
        <function-ref name="getControlA" scoped="" ref="0x40b41cb8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b41d98"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b41e78"/>
        <function-ref name="setControlB" scoped="" ref="0x40b40010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b400f0"/>
        <function-ref name="getControlB" scoped="" ref="0x40b401d0"/>
        <function-ref name="setControlC" scoped="" ref="0x40b402b0"/>
        <function-ref name="setControlA" scoped="" ref="0x40b40390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b646c8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b646c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b62c90"/>
        <function-ref name="fired" scoped="" ref="0x40b622b0"/>
        <function-ref name="get" scoped="" ref="0x40b64d10"/>
        <function-ref name="reset" scoped="" ref="0x40b62528"/>
        <function-ref name="isOn" scoped="" ref="0x40b62f08"/>
        <function-ref name="set" scoped="" ref="0x40b62010"/>
        <function-ref name="start" scoped="" ref="0x40b627a0"/>
        <function-ref name="stop" scoped="" ref="0x40b62a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b406c8" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b406c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b64288"/>
        <function-ref name="test" scoped="" ref="0x40b3fcb8"/>
        <function-ref name="get" scoped="" ref="0x40b40d10"/>
        <function-ref name="captured" scoped="" ref="0x40b3f2b0"/>
        <function-ref name="reset" scoped="" ref="0x40b3f550"/>
        <function-ref name="isOn" scoped="" ref="0x40b64010"/>
        <function-ref name="set" scoped="" ref="0x40b3f010"/>
        <function-ref name="start" scoped="" ref="0x40b3f7c8"/>
        <function-ref name="stop" scoped="" ref="0x40b3fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b61340" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b61340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b60898"/>
        <function-ref name="fired" scoped="" ref="0x40b61ea0"/>
        <function-ref name="get" scoped="" ref="0x40b61988"/>
        <function-ref name="reset" scoped="" ref="0x40b60130"/>
        <function-ref name="isOn" scoped="" ref="0x40b60b10"/>
        <function-ref name="set" scoped="" ref="0x40b61c00"/>
        <function-ref name="start" scoped="" ref="0x40b603a8"/>
        <function-ref name="stop" scoped="" ref="0x40b60620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b60f28" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b60f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b5d500"/>
        <function-ref name="fired" scoped="" ref="0x40b5ea98"/>
        <function-ref name="get" scoped="" ref="0x40b5e580"/>
        <function-ref name="reset" scoped="" ref="0x40b5ed10"/>
        <function-ref name="isOn" scoped="" ref="0x40b5d778"/>
        <function-ref name="set" scoped="" ref="0x40b5e7f8"/>
        <function-ref name="start" scoped="" ref="0x40b5d010"/>
        <function-ref name="stop" scoped="" ref="0x40b5d288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b44640" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b44640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b410a8"/>
        <function-ref name="test" scoped="" ref="0x40b43ba0"/>
        <function-ref name="get" scoped="" ref="0x40b44c88"/>
        <function-ref name="setScale" scoped="" ref="0x40b41320"/>
        <function-ref name="getScale" scoped="" ref="0x40b415c0"/>
        <function-ref name="reset" scoped="" ref="0x40b43438"/>
        <function-ref name="overflow" scoped="" ref="0x40b431c0"/>
        <function-ref name="isOn" scoped="" ref="0x40b43e18"/>
        <function-ref name="set" scoped="" ref="0x40b44f00"/>
        <function-ref name="start" scoped="" ref="0x40b436b0"/>
        <function-ref name="stop" scoped="" ref="0x40b43928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b8fe38" loc="30:/home/u3f/tinyos-2_1_2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b8fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bd8350"/>
        <function-ref name="fired" scoped="" ref="0x40b8eab8"/>
        <function-ref name="startAt" scoped="" ref="0x40bd8010"/>
        <function-ref name="isRunning" scoped="" ref="0x40b8ed30"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bd85c8"/>
        <function-ref name="start" scoped="" ref="0x40b8e5a0"/>
        <function-ref name="stop" scoped="" ref="0x40b8e840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bb0a78" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bb0a78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034f5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034f5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bb0c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40bb0e60" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bb0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ba78d8"/>
        <function-ref name="test" scoped="" ref="0x40ba73e8"/>
        <function-ref name="get" scoped="" ref="0x40baf4d8"/>
        <function-ref name="setScale" scoped="" ref="0x40ba7b50"/>
        <function-ref name="getScale" scoped="" ref="0x40ba7df0"/>
        <function-ref name="reset" scoped="" ref="0x40bafc68"/>
        <function-ref name="overflow" scoped="" ref="0x40baf9f0"/>
        <function-ref name="isOn" scoped="" ref="0x40ba7660"/>
        <function-ref name="set" scoped="" ref="0x40baf750"/>
        <function-ref name="start" scoped="" ref="0x40bafee0"/>
        <function-ref name="stop" scoped="" ref="0x40ba7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x411bfac0" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x411bfac0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4034f3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4034f3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411fc010"/>
        <function-ref name="fired" scoped="" ref="0x411be740"/>
        <function-ref name="startAt" scoped="" ref="0x411bec30"/>
        <function-ref name="isRunning" scoped="" ref="0x411be9b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x411fc288"/>
        <function-ref name="start" scoped="" ref="0x411be228"/>
        <function-ref name="stop" scoped="" ref="0x411be4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x411fa7e8" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x411fa7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411f9d58"/>
        <function-ref name="fired" scoped="" ref="0x411f9378"/>
        <function-ref name="get" scoped="" ref="0x411fae30"/>
        <function-ref name="reset" scoped="" ref="0x411f95f0"/>
        <function-ref name="isOn" scoped="" ref="0x411f7010"/>
        <function-ref name="set" scoped="" ref="0x411f90d8"/>
        <function-ref name="start" scoped="" ref="0x411f9868"/>
        <function-ref name="stop" scoped="" ref="0x411f9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x411fc548" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x411fc548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x411fa010"/>
        <function-ref name="test" scoped="" ref="0x411fbab8"/>
        <function-ref name="get" scoped="" ref="0x411fcb90"/>
        <function-ref name="setScale" scoped="" ref="0x411fa288"/>
        <function-ref name="getScale" scoped="" ref="0x411fa528"/>
        <function-ref name="reset" scoped="" ref="0x411fb350"/>
        <function-ref name="overflow" scoped="" ref="0x411fb0d8"/>
        <function-ref name="isOn" scoped="" ref="0x411fbd30"/>
        <function-ref name="set" scoped="" ref="0x411fce08"/>
        <function-ref name="start" scoped="" ref="0x411fb5c8"/>
        <function-ref name="stop" scoped="" ref="0x411fb840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bd7778" loc="39:/home/u3f/tinyos-2_1_2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bd7778"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bd7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bd4868" loc="24:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bd4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bd0010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bd0500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bd0288"/>
        <function-ref name="overflow" scoped="" ref="0x40bd0778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bce030" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bce030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TOne" ref="0x403d1b68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bce780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bcec70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bce9f8"/>
        <function-ref name="overflow" scoped="" ref="0x40bceee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40bcc208" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bcc208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40be9c68"/>
        <function-ref name="test" scoped="" ref="0x40be9778"/>
        <function-ref name="get" scoped="" ref="0x40bcc850"/>
        <function-ref name="setScale" scoped="" ref="0x40be9ee0"/>
        <function-ref name="getScale" scoped="" ref="0x40be81c0"/>
        <function-ref name="reset" scoped="" ref="0x40be9010"/>
        <function-ref name="overflow" scoped="" ref="0x40bccd68"/>
        <function-ref name="isOn" scoped="" ref="0x40be99f0"/>
        <function-ref name="set" scoped="" ref="0x40bccac8"/>
        <function-ref name="start" scoped="" ref="0x40be9288"/>
        <function-ref name="stop" scoped="" ref="0x40be9500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40bfe5f8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40bfe5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfed48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bfd288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bfd010"/>
        <function-ref name="overflow" scoped="" ref="0x40bfd500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40be7320" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40be7320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be7a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bfe010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be7ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40bfe288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bfc440" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bfc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfca88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40bfcdd8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bfcdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfa570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bfaa60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bfa7e8"/>
        <function-ref name="overflow" scoped="" ref="0x40bfacd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40bf8458" loc="36:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40bf8458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40bf8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c22e40" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c22e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c1e050"/>
        <function-ref name="stopDone" scoped="" ref="0x40c1e130"/>
        <function-ref name="start" scoped="" ref="0x40c1e210"/>
        <function-ref name="stop" scoped="" ref="0x40c1e2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c1e750" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c1e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c1e928"/>
        <function-ref name="getPayload" scoped="" ref="0x40c1ea08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c1eae8"/>
        <function-ref name="cancel" scoped="" ref="0x40c1ebc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c1eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c1d478" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c1d478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c1d650"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c1d730"/>
        <function-ref name="getPayload" scoped="" ref="0x40c1d810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c1d8f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c1d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c1d120" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c1d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c1d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c1cd88" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c1cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c1b010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c1b0f0"/>
        <function-ref name="led1On" scoped="" ref="0x40c1b1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c1b2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c1b390"/>
        <function-ref name="get" scoped="" ref="0x40c1b470"/>
        <function-ref name="led1Off" scoped="" ref="0x40c1b550"/>
        <function-ref name="led2Off" scoped="" ref="0x40c1b8d0"/>
        <function-ref name="set" scoped="" ref="0x40c1b630"/>
        <function-ref name="led0On" scoped="" ref="0x40c1b710"/>
        <function-ref name="led2On" scoped="" ref="0x40c1b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c1c850" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c1c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c1ca28"/>
        <function-ref name="noAck" scoped="" ref="0x40c1cb08"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c1cbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c1db68" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c1db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c1dd40"/>
        <function-ref name="source" scoped="" ref="0x40c1de20"/>
        <function-ref name="address" scoped="" ref="0x40c1df00"/>
        <function-ref name="destination" scoped="" ref="0x40c1c010"/>
        <function-ref name="setSource" scoped="" ref="0x40c1c0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c1c1d0"/>
        <function-ref name="type" scoped="" ref="0x40c1c2b0"/>
        <function-ref name="setType" scoped="" ref="0x40c1c390"/>
        <function-ref name="isForMe" scoped="" ref="0x40c1c470"/>
        <function-ref name="setGroup" scoped="" ref="0x40c1c550"/>
        <function-ref name="localGroup" scoped="" ref="0x40c1c630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c60430" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c60430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c60608"/>
        <function-ref name="getPayload" scoped="" ref="0x40c606e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c607c8"/>
        <function-ref name="cancel" scoped="" ref="0x40c608a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c60988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c60ae8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c60ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c60cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c1a180" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c1a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c1a368"/>
        <function-ref name="getPayload" scoped="" ref="0x40c1a448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c1a528"/>
        <function-ref name="cancel" scoped="" ref="0x40c1a608"/>
        <function-ref name="sendDone" scoped="" ref="0x40c1a6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c43850" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c43850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c43a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c43b08"/>
        <function-ref name="getPayload" scoped="" ref="0x40c43be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c43cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c43da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c1a8c0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c1a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c1aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c43ee8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c43ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c600e0"/>
        <function-ref name="noAck" scoped="" ref="0x40c601c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c602a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c1abe8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c1abe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c1adc0"/>
        <function-ref name="source" scoped="" ref="0x40c1aea0"/>
        <function-ref name="address" scoped="" ref="0x40c43010"/>
        <function-ref name="destination" scoped="" ref="0x40c430f0"/>
        <function-ref name="setSource" scoped="" ref="0x40c431d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c432b0"/>
        <function-ref name="type" scoped="" ref="0x40c43390"/>
        <function-ref name="setType" scoped="" ref="0x40c43470"/>
        <function-ref name="isForMe" scoped="" ref="0x40c43550"/>
        <function-ref name="setGroup" scoped="" ref="0x40c43630"/>
        <function-ref name="localGroup" scoped="" ref="0x40c43710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c5c3a8" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c5c3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c5c580"/>
        <function-ref name="stopDone" scoped="" ref="0x40c5c660"/>
        <function-ref name="start" scoped="" ref="0x40c5c740"/>
        <function-ref name="stop" scoped="" ref="0x40c5c820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c5b288" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c5b288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4042e358"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c5b460"/>
        <function-ref name="getPayload" scoped="" ref="0x40c5b540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c5b620"/>
        <function-ref name="cancel" scoped="" ref="0x40c5b700"/>
        <function-ref name="sendDone" scoped="" ref="0x40c5b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c5c010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c5c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c5c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c5cc68" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c5cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4042e358"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c5ce40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c81e80" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c81e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c5a070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c5a150"/>
        <function-ref name="led1On" scoped="" ref="0x40c5a230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c5a310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c5a3f0"/>
        <function-ref name="get" scoped="" ref="0x40c5a4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c5a5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40c5a930"/>
        <function-ref name="set" scoped="" ref="0x40c5a690"/>
        <function-ref name="led0On" scoped="" ref="0x40c5a770"/>
        <function-ref name="led2On" scoped="" ref="0x40c5a850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40c81978" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40c81978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4042e358"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40c81b50"/>
        <function-ref name="offset" scoped="" ref="0x40c81c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40c81d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c6f3d8" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c6f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c6f5b0"/>
        <function-ref name="stopDone" scoped="" ref="0x40c6f690"/>
        <function-ref name="start" scoped="" ref="0x40c6f770"/>
        <function-ref name="stop" scoped="" ref="0x40c6f850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40cb6350" loc="332:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40cb6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cb6528"/>
        <function-ref name="runTask" scoped="" ref="0x40cb6608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40c8c3d8" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40c8c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c8c5b0"/>
        <function-ref name="stop" scoped="" ref="0x40c8c690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40caa788" loc="191:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40caa788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40caa960"/>
        <function-ref name="runTask" scoped="" ref="0x40caaa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c6f040" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c6f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c6f218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40c8b3c0" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40c8b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40c8b598"/>
        <function-ref name="flush" scoped="" ref="0x40c8b678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40cb9bd0" loc="322:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40cb9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cb9da8"/>
        <function-ref name="runTask" scoped="" ref="0x40cb9e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40c90e88" loc="72:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40c90e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40c94070"/>
        <function-ref name="resetSend" scoped="" ref="0x40c94150"/>
        <function-ref name="dataReceived" scoped="" ref="0x40c94230"/>
        <function-ref name="resetReceive" scoped="" ref="0x40c94310"/>
        <function-ref name="putData" scoped="" ref="0x40c943f0"/>
        <function-ref name="putDone" scoped="" ref="0x40c944d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40c945b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c94720" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c94720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c948f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c949d8"/>
        <function-ref name="led1On" scoped="" ref="0x40c94ab8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c94b98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c94c78"/>
        <function-ref name="get" scoped="" ref="0x40c94d58"/>
        <function-ref name="led1Off" scoped="" ref="0x40c94e38"/>
        <function-ref name="led2Off" scoped="" ref="0x40c921d0"/>
        <function-ref name="set" scoped="" ref="0x40c94f18"/>
        <function-ref name="led0On" scoped="" ref="0x40c92010"/>
        <function-ref name="led2On" scoped="" ref="0x40c920f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40cb4010" loc="341:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40cb4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cb41e8"/>
        <function-ref name="runTask" scoped="" ref="0x40cb42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40c95b00" loc="67:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40c95b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40c95cd8"/>
        <function-ref name="nextByte" scoped="" ref="0x40c95db8"/>
        <function-ref name="startSend" scoped="" ref="0x40c95e98"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40c6e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40c93c50" loc="68:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c93c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40c93e28"/>
        <function-ref name="byteReceived" scoped="" ref="0x40c93f08"/>
        <function-ref name="endPacket" scoped="" ref="0x40c98010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40d20030" loc="275:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40d20030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d20208"/>
        <function-ref name="runTask" scoped="" ref="0x40d202e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d00c60" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d00c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4042e358"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d00e48"/>
        <function-ref name="getPayload" scoped="" ref="0x40d00f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d22018"/>
        <function-ref name="cancel" scoped="" ref="0x40d220f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d221d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40d20468" loc="158:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40d20468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d20640"/>
        <function-ref name="runTask" scoped="" ref="0x40d20720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d008a0" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d008a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4042e358"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d00a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40d22400" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40d22400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4042e358"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40d225e8"/>
        <function-ref name="offset" scoped="" ref="0x40d226c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40d227a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d213f0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d215c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d216a8"/>
        <function-ref name="led1On" scoped="" ref="0x40d21788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d21868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d21948"/>
        <function-ref name="get" scoped="" ref="0x40d21a28"/>
        <function-ref name="led1Off" scoped="" ref="0x40d21b08"/>
        <function-ref name="led2On" scoped="" ref="0x40d21e88"/>
        <function-ref name="set" scoped="" ref="0x40d21cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40d21be8"/>
        <function-ref name="led0On" scoped="" ref="0x40d21da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40d22dc0" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40d22dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40d21010"/>
        <function-ref name="nextByte" scoped="" ref="0x40d210f0"/>
        <function-ref name="startSend" scoped="" ref="0x40d211d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40d212b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40d228e8" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d228e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40d22ac0"/>
        <function-ref name="byteReceived" scoped="" ref="0x40d22ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x40d22c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40d43b80" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d43b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d43d58"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d43e38"/>
        <function-ref name="receive" scoped="" ref="0x40d43f18"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d49010"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d490f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d491d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40d1f868" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40d1f868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40d1fa40"/>
        <function-ref name="resetSend" scoped="" ref="0x40d1fb20"/>
        <function-ref name="dataReceived" scoped="" ref="0x40d1fc00"/>
        <function-ref name="resetReceive" scoped="" ref="0x40d1fce0"/>
        <function-ref name="putData" scoped="" ref="0x40d1fdc0"/>
        <function-ref name="putDone" scoped="" ref="0x40d1fea0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40d4a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d49420" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d49420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d495f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d496d8"/>
        <function-ref name="led1On" scoped="" ref="0x40d497b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d49898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d49978"/>
        <function-ref name="get" scoped="" ref="0x40d49a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40d49b38"/>
        <function-ref name="led2Off" scoped="" ref="0x40d49eb8"/>
        <function-ref name="set" scoped="" ref="0x40d49c18"/>
        <function-ref name="led0On" scoped="" ref="0x40d49cf8"/>
        <function-ref name="led2On" scoped="" ref="0x40d49dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d5e6e8" loc="42:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d5e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d5e8c0"/>
        <function-ref name="receive" scoped="" ref="0x40d5e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d1e870" loc="41:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d1e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d1ea48"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d1eb28"/>
        <function-ref name="receive" scoped="" ref="0x40d1ec08"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d1ece8"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d1edc8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d1eea8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d61010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d1e3f0" loc="40:/home/u3f/tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d1e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d1e5c8"/>
        <function-ref name="stop" scoped="" ref="0x40d1e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d5d5d8" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d5d5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d5d7b0"/>
        <function-ref name="receive" scoped="" ref="0x40d5d890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d5da58" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d5da58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d5dc30"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d5dd10"/>
        <function-ref name="receive" scoped="" ref="0x40d5ddf0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d5ded0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d5c010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d5c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d5c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d5c530" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d5c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d5cc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d5a1a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d5cef8"/>
        <function-ref name="overflow" scoped="" ref="0x40d5a418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d5d168" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d5d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d5d340"/>
        <function-ref name="stop" scoped="" ref="0x40d5d420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d59e28" loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d59e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d58050"/>
        <function-ref name="receive" scoped="" ref="0x40d58130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40d58b28" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40d58b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d58d00"/>
        <function-ref name="stop" scoped="" ref="0x40d58de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d596d8" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d596d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d598b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d58290" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d58290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d58468"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d58548"/>
        <function-ref name="receive" scoped="" ref="0x40d58628"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d58708"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d587e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d588c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d589a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d8d0a0" loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d8d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d8d7f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d8dce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d8da68"/>
        <function-ref name="overflow" scoped="" ref="0x40d8b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40d8e448" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40d8e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d8e620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d8e700"/>
        <function-ref name="rxDone" scoped="" ref="0x40d8e7e0"/>
        <function-ref name="txDone" scoped="" ref="0x40d8e8c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d8e9a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d8ea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d8eb60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d8ec40"/>
        <function-ref name="tx" scoped="" ref="0x40d8ed20"/>
        <function-ref name="rx" scoped="" ref="0x40d8ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d59a10" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d59a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d59be8"/>
        <function-ref name="stop" scoped="" ref="0x40d59cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40d8e010" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40d8e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d8e1e8"/>
        <function-ref name="stop" scoped="" ref="0x40d8e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40dab508" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40dab508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40dab6e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40dab7c0"/>
        <function-ref name="rxDone" scoped="" ref="0x40dab8a0"/>
        <function-ref name="txDone" scoped="" ref="0x40dab980"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40daba60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40dabb40"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40dabc20"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40dabd00"/>
        <function-ref name="tx" scoped="" ref="0x40dabde0"/>
        <function-ref name="rx" scoped="" ref="0x40dabec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40daab80" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40daab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40daad58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40daae38"/>
        <function-ref name="rxDone" scoped="" ref="0x40daaf18"/>
        <function-ref name="txDone" scoped="" ref="0x40da8010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40da80f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40da81d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40da82b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40da8390"/>
        <function-ref name="tx" scoped="" ref="0x40da8470"/>
        <function-ref name="rx" scoped="" ref="0x40da8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40dab010" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40dab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dab1e8"/>
        <function-ref name="stop" scoped="" ref="0x40dab2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40daa178" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40daa178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40daa350"/>
        <function-ref name="stop" scoped="" ref="0x40daa430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40daa688" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40daa688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40daa860"/>
        <function-ref name="stop" scoped="" ref="0x40daa940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40d7aa80" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40d7aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d7ac58"/>
        <function-ref name="stop" scoped="" ref="0x40d7ad38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40da8d80" loc="114:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40da8d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40da5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40da5cd0" loc="117:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40da5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40da5ea8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40da4010"/>
        <function-ref name="rxDone" scoped="" ref="0x40da40f0"/>
        <function-ref name="txDone" scoped="" ref="0x40da41d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40da42b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40da4390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40da4470"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40da4550"/>
        <function-ref name="tx" scoped="" ref="0x40da4630"/>
        <function-ref name="rx" scoped="" ref="0x40da4710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40da4920" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40da4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40da4af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40da3880" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40da3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40da3a58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40da3b38"/>
        <function-ref name="rxDone" scoped="" ref="0x40da3c18"/>
        <function-ref name="txDone" scoped="" ref="0x40da3cf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40da3dd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40da3eb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40da2010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40da20f0"/>
        <function-ref name="tx" scoped="" ref="0x40da21d0"/>
        <function-ref name="rx" scoped="" ref="0x40da22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40da57b8" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40da57b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40da5990"/>
        <function-ref name="stop" scoped="" ref="0x40da5a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40da4d70" loc="120:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40da4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40da3010"/>
        <function-ref name="stop" scoped="" ref="0x40da30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40da3368" loc="121:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40da3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40da3540"/>
        <function-ref name="stop" scoped="" ref="0x40da3620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40da24a8" loc="124:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40da24a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40da2680"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40da2760"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40da2840"/>
        <function-ref name="actualMicro" scoped="" ref="0x40da2920"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40da2a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40da2be8" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40da2be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40da2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40da5288" loc="115:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40da5288"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40da5460"/>
        <function-ref name="stop" scoped="" ref="0x40da5540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40d5f878" loc="24:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d5f878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dcc010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40dcc500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40dcc288"/>
        <function-ref name="overflow" scoped="" ref="0x40dcc778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40dc93c0" loc="24:/home/u3f/tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40dc93c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d1d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dc9b10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40dc8010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40dc9d88"/>
        <function-ref name="overflow" scoped="" ref="0x40dc8288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40df2090" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40df2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40df2268"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40df2348"/>
        <function-ref name="getControlA" scoped="" ref="0x40df2428"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40df2508"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40df25e8"/>
        <function-ref name="setControlB" scoped="" ref="0x40df26c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40df27a8"/>
        <function-ref name="getControlB" scoped="" ref="0x40df2888"/>
        <function-ref name="setControlC" scoped="" ref="0x40df2968"/>
        <function-ref name="setControlA" scoped="" ref="0x40df2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40df2d80" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40df2d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40df0810"/>
        <function-ref name="test" scoped="" ref="0x40df0320"/>
        <function-ref name="get" scoped="" ref="0x40df13e0"/>
        <function-ref name="captured" scoped="" ref="0x40df18f8"/>
        <function-ref name="reset" scoped="" ref="0x40df1b98"/>
        <function-ref name="isOn" scoped="" ref="0x40df0598"/>
        <function-ref name="set" scoped="" ref="0x40df1658"/>
        <function-ref name="start" scoped="" ref="0x40df1e10"/>
        <function-ref name="stop" scoped="" ref="0x40df00a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40df0f20" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40df0f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ded500"/>
        <function-ref name="fired" scoped="" ref="0x40deea98"/>
        <function-ref name="get" scoped="" ref="0x40dee580"/>
        <function-ref name="reset" scoped="" ref="0x40deed10"/>
        <function-ref name="isOn" scoped="" ref="0x40ded778"/>
        <function-ref name="set" scoped="" ref="0x40dee7f8"/>
        <function-ref name="start" scoped="" ref="0x40ded010"/>
        <function-ref name="stop" scoped="" ref="0x40ded288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dc8d20" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dc8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40df37b0"/>
        <function-ref name="test" scoped="" ref="0x40df32c0"/>
        <function-ref name="get" scoped="" ref="0x40dc5390"/>
        <function-ref name="setScale" scoped="" ref="0x40df3a28"/>
        <function-ref name="getScale" scoped="" ref="0x40df3cc8"/>
        <function-ref name="reset" scoped="" ref="0x40dc5b20"/>
        <function-ref name="overflow" scoped="" ref="0x40dc58a8"/>
        <function-ref name="isOn" scoped="" ref="0x40df3538"/>
        <function-ref name="set" scoped="" ref="0x40dc5608"/>
        <function-ref name="start" scoped="" ref="0x40dc5d98"/>
        <function-ref name="stop" scoped="" ref="0x40df3048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40de7770" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40de7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40de7948"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40de7a28"/>
        <function-ref name="getControlA" scoped="" ref="0x40de7b08"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40de7be8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40de7cc8"/>
        <function-ref name="setControlB" scoped="" ref="0x40de7da8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40de7e88"/>
        <function-ref name="getControlB" scoped="" ref="0x40de6010"/>
        <function-ref name="setControlC" scoped="" ref="0x40de60f0"/>
        <function-ref name="setControlA" scoped="" ref="0x40de61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40de3450" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40de3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40de29f0"/>
        <function-ref name="fired" scoped="" ref="0x40de2010"/>
        <function-ref name="get" scoped="" ref="0x40de3a98"/>
        <function-ref name="reset" scoped="" ref="0x40de2288"/>
        <function-ref name="isOn" scoped="" ref="0x40de2c68"/>
        <function-ref name="set" scoped="" ref="0x40de3d10"/>
        <function-ref name="start" scoped="" ref="0x40de2500"/>
        <function-ref name="stop" scoped="" ref="0x40de2778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40de6508" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40de6508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40de3010"/>
        <function-ref name="test" scoped="" ref="0x40de5a90"/>
        <function-ref name="get" scoped="" ref="0x40de6b50"/>
        <function-ref name="captured" scoped="" ref="0x40de5088"/>
        <function-ref name="reset" scoped="" ref="0x40de5328"/>
        <function-ref name="isOn" scoped="" ref="0x40de5d08"/>
        <function-ref name="set" scoped="" ref="0x40de6dc8"/>
        <function-ref name="start" scoped="" ref="0x40de55a0"/>
        <function-ref name="stop" scoped="" ref="0x40de5818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40de10b8" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40de10b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ddf620"/>
        <function-ref name="fired" scoped="" ref="0x40de1c18"/>
        <function-ref name="get" scoped="" ref="0x40de1700"/>
        <function-ref name="reset" scoped="" ref="0x40de1e90"/>
        <function-ref name="isOn" scoped="" ref="0x40ddf898"/>
        <function-ref name="set" scoped="" ref="0x40de1978"/>
        <function-ref name="start" scoped="" ref="0x40ddf130"/>
        <function-ref name="stop" scoped="" ref="0x40ddf3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40ddfcb0" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40ddfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ddd288"/>
        <function-ref name="fired" scoped="" ref="0x40dde820"/>
        <function-ref name="get" scoped="" ref="0x40dde308"/>
        <function-ref name="reset" scoped="" ref="0x40ddea98"/>
        <function-ref name="isOn" scoped="" ref="0x40ddd500"/>
        <function-ref name="set" scoped="" ref="0x40dde580"/>
        <function-ref name="start" scoped="" ref="0x40dded10"/>
        <function-ref name="stop" scoped="" ref="0x40ddd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dea438" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dea438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40de8ee0"/>
        <function-ref name="test" scoped="" ref="0x40de89f0"/>
        <function-ref name="get" scoped="" ref="0x40deaa80"/>
        <function-ref name="setScale" scoped="" ref="0x40de7170"/>
        <function-ref name="getScale" scoped="" ref="0x40de7410"/>
        <function-ref name="reset" scoped="" ref="0x40de8288"/>
        <function-ref name="overflow" scoped="" ref="0x40de8010"/>
        <function-ref name="isOn" scoped="" ref="0x40de8c68"/>
        <function-ref name="set" scoped="" ref="0x40deacf8"/>
        <function-ref name="start" scoped="" ref="0x40de8500"/>
        <function-ref name="stop" scoped="" ref="0x40de8778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e2d860" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e2d860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4034f5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4034f5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e2da38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e2dc48" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e2dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e2b6a0"/>
        <function-ref name="test" scoped="" ref="0x40e2b1b0"/>
        <function-ref name="get" scoped="" ref="0x40e2c2a8"/>
        <function-ref name="setScale" scoped="" ref="0x40e2b918"/>
        <function-ref name="getScale" scoped="" ref="0x40e2bbb8"/>
        <function-ref name="reset" scoped="" ref="0x40e2ca38"/>
        <function-ref name="overflow" scoped="" ref="0x40e2c7c0"/>
        <function-ref name="isOn" scoped="" ref="0x40e2b428"/>
        <function-ref name="set" scoped="" ref="0x40e2c520"/>
        <function-ref name="start" scoped="" ref="0x40e2ccb0"/>
        <function-ref name="stop" scoped="" ref="0x40e2cf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e2fe40" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e2fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d1d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e2e5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e2ead0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e2e858"/>
        <function-ref name="overflow" scoped="" ref="0x40e2ed48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e28050" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e28050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e26a98"/>
        <function-ref name="test" scoped="" ref="0x40e265a8"/>
        <function-ref name="get" scoped="" ref="0x40e28698"/>
        <function-ref name="setScale" scoped="" ref="0x40e26d10"/>
        <function-ref name="getScale" scoped="" ref="0x40e25010"/>
        <function-ref name="reset" scoped="" ref="0x40e28e28"/>
        <function-ref name="overflow" scoped="" ref="0x40e28bb0"/>
        <function-ref name="isOn" scoped="" ref="0x40e26820"/>
        <function-ref name="set" scoped="" ref="0x40e28910"/>
        <function-ref name="start" scoped="" ref="0x40e260b8"/>
        <function-ref name="stop" scoped="" ref="0x40e26330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40e540e0" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40e540e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TThree" ref="0x403d1d90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e54830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e54d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e54aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40e53010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40dcae68" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40dcae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403aa8c8"/>
            <typename><typedef-ref name="TMicro" ref="0x403aaa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e565e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e56ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e56858"/>
        <function-ref name="overflow" scoped="" ref="0x40e56d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40e51928" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40e51928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40e51b00"/>
        <function-ref name="offset" scoped="" ref="0x40e51be0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40e51cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x40e43110" loc="27:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40e43110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e43cd8"/>
        <function-ref name="get" scoped="" ref="0x40e43a18"/>
        <function-ref name="isSet" scoped="" ref="0x40e43758"/>
        <function-ref name="set" scoped="" ref="0x40e42010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40e46010" loc="21:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40e46010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40e461e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40e457b0" loc="24:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40e457b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e45988"/>
        <function-ref name="stopDone" scoped="" ref="0x40e45a68"/>
        <function-ref name="start" scoped="" ref="0x40e45b48"/>
        <function-ref name="stop" scoped="" ref="0x40e45c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40e450b0" loc="23:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40e450b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e45288"/>
        <function-ref name="stopDone" scoped="" ref="0x40e45368"/>
        <function-ref name="start" scoped="" ref="0x40e45448"/>
        <function-ref name="stop" scoped="" ref="0x40e45528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40e41130" loc="30:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e41130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e41308"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e413e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e414c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e415a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e41688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MsgReceive" ref="0x40e44158" loc="25:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MsgReceive" scoped="" ref="0x40e44158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e44330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x40e418e8" loc="31:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x40e418e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e41ac0"/>
        <function-ref name="source" scoped="" ref="0x40e41ba0"/>
        <function-ref name="address" scoped="" ref="0x40e41c80"/>
        <function-ref name="destination" scoped="" ref="0x40e41d60"/>
        <function-ref name="setSource" scoped="" ref="0x40e41e40"/>
        <function-ref name="setDestination" scoped="" ref="0x40e41f20"/>
        <function-ref name="type" scoped="" ref="0x40e40018"/>
        <function-ref name="setType" scoped="" ref="0x40e400f8"/>
        <function-ref name="isForMe" scoped="" ref="0x40e401d8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e402b8"/>
        <function-ref name="localGroup" scoped="" ref="0x40e40398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e46378" loc="22:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e46378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e46550"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e46630"/>
        <function-ref name="led1On" scoped="" ref="0x40e46710"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e467f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e468d0"/>
        <function-ref name="get" scoped="" ref="0x40e469b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40e46a90"/>
        <function-ref name="led2Off" scoped="" ref="0x40e46e10"/>
        <function-ref name="set" scoped="" ref="0x40e46b70"/>
        <function-ref name="led0On" scoped="" ref="0x40e46c50"/>
        <function-ref name="led2On" scoped="" ref="0x40e46d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="serialSendTask" ref="0x40e6fa98" loc="43:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="serialSendTask" scoped="" ref="0x40e6fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e6fc70"/>
        <function-ref name="runTask" scoped="" ref="0x40e6fd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSend" ref="0x40e44850" loc="26:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSend" scoped="" ref="0x40e44850"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e44a28"/>
        <function-ref name="getPayload" scoped="" ref="0x40e44b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e44be8"/>
        <function-ref name="cancel" scoped="" ref="0x40e44cc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e44da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMPacket" ref="0x40e42430" loc="29:TargetMoteC.nc">
      <component-ref qname="TargetMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMPacket" scoped="" ref="0x40e42430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e42608"/>
        <function-ref name="source" scoped="" ref="0x40e426e8"/>
        <function-ref name="address" scoped="" ref="0x40e427c8"/>
        <function-ref name="destination" scoped="" ref="0x40e428a8"/>
        <function-ref name="setSource" scoped="" ref="0x40e42988"/>
        <function-ref name="setDestination" scoped="" ref="0x40e42a68"/>
        <function-ref name="type" scoped="" ref="0x40e42b48"/>
        <function-ref name="setType" scoped="" ref="0x40e42c28"/>
        <function-ref name="isForMe" scoped="" ref="0x40e42d08"/>
        <function-ref name="setGroup" scoped="" ref="0x40e42de8"/>
        <function-ref name="localGroup" scoped="" ref="0x40e42ec8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4043f038" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404364a0" loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404442b0" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40444158" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4043e8e8" loc="31:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4043ef20" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4043edc8" loc="39:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40445600" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404454a8" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40445b58" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4044c010" loc="44:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4044c3f8" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4044d808" loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4044cbc8" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4044dbc8" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4044c7d0" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4044d0c8" loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4044d458" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x400329d0" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403673b0" loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40032e10" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x403682d0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x403687e8" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d5b90" loc="76:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403eae90" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4038f010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403ea1a8" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x405451a8" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x405455f0" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40545a70" loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405442f8" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40542010" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405424b8" loc="117:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40545e98" loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40542bf8" loc="134:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40542aa0" loc="134:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40546d48" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40544778" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40544ba0" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/u3f/tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4055eb30" loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4055e9d8" loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4055d8a8" loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4055d750" loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4055e2f0" loc="104:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4055d070" loc="130:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/u3f/tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x4056e020" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4055cc90" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4055cea8" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4056d350" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056d1f8" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4056dd20" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056dbc8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4056bcc8" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056b968" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4056bb48" loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4056b380" loc="106:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4056a9b8" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056a678" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4056a858" loc="94:/home/u3f/tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40560cb8" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40560758" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40560970" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40560b50" loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40567a88" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40567728" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40567908" loc="135:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405671c8" loc="123:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40569b80" loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40569a28" loc="96:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40566898" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40566540" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40566738" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40563930" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
              <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405633e8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x405635c8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405637a8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40582730" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40582398" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x405825d0" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40581220" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405810c8" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40575ea8" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40575828" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x405756d0" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40570d68" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40570c10" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x405789c8" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40578870" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40585460" loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40585308" loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x4058d240" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058d0e8" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40580660" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405802c8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40580500" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x4058e8c8" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058e770" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x4058e250" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40580ea0" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x4058e0f0" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x4058db60" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058da08" loc="71:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4057c088" loc="177:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057df08" loc="177:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40574930" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405747d8" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40565860" loc="68:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40565ef8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40565da0" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40572238" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40573eb0" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405720d8" loc="121:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40573530" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405731c8" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405733d0" loc="103:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4057ea28" loc="147:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057e8d0" loc="147:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4057d580" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057d250" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4057d420" loc="162:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4042a538"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40572dd8" loc="136:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40572c80" loc="136:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4057cd08" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4057c9a8" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4057cba8" loc="187:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x405795a0" loc="195:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/u3f/tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x4058a3f0" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4057ae38" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4057ace0" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4058a8f0" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40584330" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40584330"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40584498" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40584498"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x405876a8" loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40584498"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40587550" loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40596168" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40596010" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40584b20" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405849c8" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40596c28" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40584498"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405968b8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40596ac8" loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40584498"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4059ace0" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4059ace0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x405a6010" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40597e58" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40597990" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4059ace0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40597838" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40597370" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40597218" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405a67b8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4059ace0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a6440" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405a6658" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4059ace0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4059fe10" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4059fe10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405ae308" loc="61:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x405a2ea8" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a2d50" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x405bb708" loc="120:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x405b2dc0" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x405b27c0" loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x405bb298" loc="102:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405bbe00" loc="128:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x405b8d28" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b8bd0" loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x405b8158" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405b8758" loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b8600" loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405b7cc8" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b7928" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405b7b68" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405b7528" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b7188" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405b73c8" loc="43:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x405c6850" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4041ad30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c66f8" loc="49:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x405c4010" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4041ad30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c6c30" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x405c6e60" loc="51:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4041ad30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405c62a0" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c6148" loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x405c4450" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4041ad30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405b3a98" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x405b3538" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405b3750" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405b3930" loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405bedb0" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bea50" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405bec30" loc="122:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405be4f0" loc="110:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405af460" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405af308" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405afe40" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405afae8" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405afce0" loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x405d7870" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x405e61c0" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e6068" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x405ed940" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ed7e8" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x405ec748" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ec5f0" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x405eeb78" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405eea20" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405d0dc8" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d0c70" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405ed378" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ed010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405ed218" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405ee5a8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ee240" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405ee448" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x405ec170" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405edd68" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x405ec010" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x405e2210" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x405e2818" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x405e1cf0" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e1b98" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x405e2ec8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e2d70" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x405e15e0" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e1488" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x405f8428" loc="60:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x405ebb60" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x405eba08" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405f8010" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x405eb4d0" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x405f88a0" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4041b9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x406059d0" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40605878" loc="70:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40606010" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fae78" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40606d28" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40606868" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40606508" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40606708" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x405fa8d8" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fa780" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x406053b8" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40605260" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x405d3668" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x405d3168" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d3010" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x405d3d48" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d3bf0" loc="52:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x405d22d0" loc="59:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x405d2a00" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d28a8" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x405d8478" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d8320" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x405ddd98" loc="86:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x405dd8e0" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405dd568" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405dd780" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405cf880" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cf728" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x405de010" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cfdf0" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x405de948" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405de5d0" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405de7e8" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x405d59a0" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405cf228" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d5ee8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405cf0c8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405dd088" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405def08" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x405f0010" loc="131:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f2e18" loc="131:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x405f2168" loc="120:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f2010" loc="120:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x405e8010" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e9c58" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x405e9e48" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x405e7420" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e72c8" loc="75:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x405fe448" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fe0e8" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405fe2e8" loc="156:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x405e8d18" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e8bc0" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x405f2960" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f2620" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x405f2800" loc="125:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x405f63a8" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405f6030" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405f6248" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x405efc58" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405efb00" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x405e8678" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e8520" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x405f4370" loc="99:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f4218" loc="99:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x405f6cb0" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405f6938" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405f6b50" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x405fcb48" loc="178:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40419010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405fea70" loc="162:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fe918" loc="162:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x405fc6a8" loc="173:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4041ad30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x405ef630" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ef2d0" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405ef4d0" loc="146:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x405e7ad0" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e7978" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x405f3a78" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f3728" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x405f3918" loc="115:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x405f07f8" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f04a8" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x405f0698" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405fb168" loc="185:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fb010" loc="185:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405f4b78" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f4850" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405f4a18" loc="105:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x405e97a0" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e9648" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405fc1c0" loc="168:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405fc068" loc="168:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x405f0e28" loc="141:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f0cd0" loc="141:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x405f3240" loc="110:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405f30e8" loc="110:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x405d9010" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dac80" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x405dae80" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x405d94a8" loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x405da168" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405da010" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405da7b0" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405da658" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x405e46f0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e4598" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x405e4010" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e6de8" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x405e4be8" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x405e32e0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e3188" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4063b8d8" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4063b8d8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4063ba40" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063ba40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40636db0" loc="109:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063ba40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406389c8" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40636768" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063ba40"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063ba40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40636418" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063ba40"/></type-var>
          </variable>
          <variable name="dt" ref="0x40636608" loc="103:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063ba40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40638e38" loc="88:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40635268" loc="116:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063ba40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40638088" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063ba40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4063bf18" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063ba40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40638568" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/u3f/tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x406409f8" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x4064f010" loc="72:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x4064f650" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x406405f8" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x406684c0" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40668368" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406665c0" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40666468" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40668e30" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40668ad8" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40668cd0" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40665580" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
              <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40665408" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x4067c090" loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x4067c900" loc="60:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x4067c500" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4066db80" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4066d818" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4042a790"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4066da20" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x406d0c50" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406e02c8" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x406cef28" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x406cea68" loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x406df5a8" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x406dfaa8" loc="98:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/u3f/tinyos-2_1_2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x406d7820" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406dc200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406d76c8" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406dc200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x406d94a8" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x406d9b68" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406dc200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406d9a10" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406dc200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x406d7138" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x406dc200"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x407b0958" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
              <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407b07e0" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x407b0168" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407b0010" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407bc730" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407bc5d8" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x407bcbb0" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407aac68" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407aab10" loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407bc1e0" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407bc088" loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x407a7698" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407a7540" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x407be390" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407be238" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x407a7d68" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407a7c10" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x407bea48" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407be8f0" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x407a7018" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407abea8" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4042a9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x407fd828" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408132b8" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40813900" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x408137a8" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40813d70" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x407fdd68" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x408122e0" loc="74:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40811370" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40811218" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40810018" loc="63:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40811ae8" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40811990" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4084f1c8" loc="52:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40853cf8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4086c580" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4086c580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4086cbd0" loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4086c580"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4086ca78" loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4086c580"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x408898e0" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40889788" loc="55:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40871580" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40871428" loc="40:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40871d50" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40871a10" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40871bf0" loc="45:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40889350" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408891f8" loc="50:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x408a4538" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408a43e0" loc="52:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4088bee0" loc="44:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408d4490" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408d4490"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x408eac28" loc="136:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408d0a58" loc="83:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x408ebbc0" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x408eb878" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x408eba60" loc="114:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x408eb3d0" loc="98:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x408e95c0" loc="151:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x408e9090" loc="144:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x408d0ee8" loc="92:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x408d4ae8" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x408d4990" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x408ea608" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x408ea2c0" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x408ea4a8" loc="129:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x408d01c0" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x408d0068" loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40211848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408d0690" loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/u3f/tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408e1c88" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408e1c88"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x408e1df0" loc="57:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e1df0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x408de2f0" loc="64:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408e1df0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x408ded18" loc="76:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x408de818" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x408f9138" loc="82:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x408fa2b8" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x408fb818" loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x408fc438" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x408fbdd8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x408fbc80" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x408fb3a8" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x408fb250" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x408fa880" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x408fa728" loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x408fc888" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x408fce00" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x408fcca8" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x4090d010" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x4090fca0" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x4090e0f8" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x4090e5d8" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x4090d4d0" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x4090eab8" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x4090f1c8" loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9618"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b9840"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x4090f7c0" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b9840"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x4090f668" loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b9618"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x403b9840"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x408fe858" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408fe858"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40913830" loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40914760" loc="58:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408fed50" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408fe858"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40914b68" loc="62:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40913c90" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40914320" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408fe858"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409141c8" loc="54:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408fe858"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40913010" loc="65:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40913408" loc="68:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40904508" loc="55:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40904508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40901d28" loc="98:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40901498" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409049f8" loc="61:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40904508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x409002e0" loc="104:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40900188" loc="104:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40900770" loc="110:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40903860" loc="75:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40903440" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40901900" loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40903010" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40904508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40904e18" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40904508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40903c68" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40901070" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a126d0" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a126d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a12838" loc="59:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a12838"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40a12e50" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a12838"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a12cf8" loc="66:/home/u3f/tinyos-2_1_2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a12838"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40a15e08" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40a327e8" loc="66:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a323a0" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a32248" loc="61:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40a15900" loc="53:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40a14210" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a140b8" loc="62:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40a14df8" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a14ca0" loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40a14720" loc="68:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a13450" loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a132f8" loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40abc808" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40abc808"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40ab6318" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40ab61c0" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40ab8910" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40abcd00" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40abc808"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40ab9888" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40abc808"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ab9730" loc="60:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40abc808"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40ab9cc8" loc="64:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40ab8d70" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ab92b0" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40abc808"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ab9158" loc="53:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40abc808"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40ab80f8" loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40ab84f0" loc="70:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/u3f/tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40acc368" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40acfd38" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40acc010" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40acc200" loc="70:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40acb9a8" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40acb228" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40acb440" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40acb630" loc="82:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40acb838" loc="83:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40aac870" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40aac718" loc="45:/home/u3f/tinyos-2_1_2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40abe460" loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40addb20" loc="126:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40adfca8" loc="117:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40adb168" loc="128:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40adb010" loc="128:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40abe010" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40adec20" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40adeac8" loc="122:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40ae0ec8" loc="113:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40ae0d70" loc="113:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40abecf0" loc="97:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40ad9218" loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ad90c0" loc="141:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40adf338" loc="114:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40adbaf0" loc="131:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40adb998" loc="131:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40ada3a8" loc="136:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40add6d8" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40add580" loc="125:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40adac70" loc="140:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40ade258" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40ade100" loc="119:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40ae02b8" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ae0160" loc="103:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40adf888" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40adf730" loc="116:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40add0f8" loc="123:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40adb590" loc="129:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40adbf00" loc="132:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40ada800" loc="138:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40ade690" loc="120:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40abe888" loc="89:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40ae0880" loc="109:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ae0728" loc="109:/home/u3f/tinyos-2_1_2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40b11500" loc="95:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b119e8" loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40b4ea68" loc="81:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b4b010" loc="87:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40b4e1f0" loc="79:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b4ba40" loc="91:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b4b5d0" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b4b478" loc="88:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40b4d588" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b4d430" loc="83:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b4a020" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b4beb0" loc="92:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40b4e640" loc="80:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40b4db00" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b4d9a8" loc="84:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40b4d010" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b4ee88" loc="82:/home/u3f/tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40c3c488" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3c148" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c3c328" loc="75:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40c39190" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3ad78" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c39010" loc="125:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40c3a818" loc="112:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c3b168" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3b010" loc="89:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40c3be00" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3baa8" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40c3bca0" loc="100:/home/u3f/tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40c813a0" loc="31:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c81010" loc="31:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40c81240" loc="31:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40c820c8" loc="15:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40c82998" loc="23:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c82620" loc="23:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40431a30"/>
                <typename><typedef-ref name="message_t" ref="0x4043a7d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40c82838" loc="23:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40c92b40" loc="95:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40c8c038" loc="105:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/u3f/tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40c8b210" loc="54:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40c8cdb0" loc="49:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40c989b8" loc="56:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40c91698" loc="72:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40c90790" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c90638" loc="94:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40c91bc0" loc="79:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40c91168" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c91010" loc="65:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40c90c98" loc="100:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40c90138" loc="85:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/u3f/tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40c97aa0" loc="71:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40c95090" loc="81:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40c97490" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40c97338" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40c957c8" loc="91:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c95670" loc="91:/home/u3f/tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40c6e9c8" loc="62:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40c931e0" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c93088" loc="69:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40c93878" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40c93720" loc="80:/home/u3f/tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d4aaf0" loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d4a7a0" loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d4a990" loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40d47e88" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d47d30" loc="79:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40d446a8" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d44358" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d44548" loc="90:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40d472f0" loc="65:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40d43560" loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d43010" loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d43200" loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d433f8" loc="99:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40d47878" loc="72:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40d46968" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d46418" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d46608" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402111e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d46800" loc="57:/home/u3f/tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d618b8" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d61760" loc="46:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40d5e170" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d61de8" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40d5e010" loc="56:/home/u3f/tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40d52850" loc="44:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40d52010" loc="42:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40d51e38" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d51ce0" loc="49:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40d51538" loc="47:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40d55728" loc="40:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40d55b68" loc="41:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40d52450" loc="43:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40365da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40d52c50" loc="45:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40d51188" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d51030" loc="46:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40d51908" loc="48:/home/u3f/tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40210b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
